{"id":"node_modules/@keystonehq/bc-ur-registry/dist/CryptoOutput.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/CryptoOutput.js.map","includedInParent":true,"mtime":1635871978905},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/src/CryptoOutput.ts","includedInParent":true,"mtime":1635871978905},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/package.json","includedInParent":true,"mtime":1635871978905},{"name":"./CryptoECKey","loc":{"line":4,"column":30},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/CryptoOutput.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/CryptoECKey.js"},{"name":"./CryptoHDKey","loc":{"line":5,"column":30},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/CryptoOutput.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/CryptoHDKey.js"},{"name":"./lib","loc":{"line":6,"column":22},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/CryptoOutput.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js"},{"name":"./MultiKey","loc":{"line":7,"column":27},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/CryptoOutput.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/MultiKey.js"},{"name":"./RegistryItem","loc":{"line":8,"column":31},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/CryptoOutput.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js"},{"name":"./RegistryType","loc":{"line":9,"column":31},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/CryptoOutput.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js"},{"name":"./ScriptExpression","loc":{"line":10,"column":35},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/CryptoOutput.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/ScriptExpression.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CryptoOutput = void 0;\nconst CryptoECKey_1 = require(\"./CryptoECKey\");\nconst CryptoHDKey_1 = require(\"./CryptoHDKey\");\nconst lib_1 = require(\"./lib\");\nconst MultiKey_1 = require(\"./MultiKey\");\nconst RegistryItem_1 = require(\"./RegistryItem\");\nconst RegistryType_1 = require(\"./RegistryType\");\nconst ScriptExpression_1 = require(\"./ScriptExpression\");\nclass CryptoOutput extends RegistryItem_1.RegistryItem {\n    constructor(scriptExpressions, cryptoKey) {\n        super();\n        this.scriptExpressions = scriptExpressions;\n        this.cryptoKey = cryptoKey;\n        this.getRegistryType = () => {\n            return RegistryType_1.RegistryTypes.CRYPTO_OUTPUT;\n        };\n        this.getCryptoKey = () => this.cryptoKey;\n        this.getHDKey = () => {\n            if (this.cryptoKey instanceof CryptoHDKey_1.CryptoHDKey) {\n                return this.cryptoKey;\n            }\n            else {\n                return undefined;\n            }\n        };\n        this.getECKey = () => {\n            if (this.cryptoKey instanceof CryptoECKey_1.CryptoECKey) {\n                return this.cryptoKey;\n            }\n            else {\n                return undefined;\n            }\n        };\n        this.getMultiKey = () => {\n            if (this.cryptoKey instanceof MultiKey_1.MultiKey) {\n                return this.cryptoKey;\n            }\n            else {\n                return undefined;\n            }\n        };\n        this.getScriptExpressions = () => this.scriptExpressions;\n        this.toDataItem = () => {\n            let dataItem = this.cryptoKey.toDataItem();\n            if (this.cryptoKey instanceof CryptoECKey_1.CryptoECKey ||\n                this.cryptoKey instanceof CryptoHDKey_1.CryptoHDKey) {\n                dataItem.setTag(this.cryptoKey.getRegistryType().getTag());\n            }\n            const clonedSe = [...this.scriptExpressions];\n            clonedSe.reverse().forEach((se) => {\n                const tagValue = se.getTag();\n                if (dataItem.getTag() === undefined) {\n                    dataItem.setTag(tagValue);\n                }\n                else {\n                    dataItem = new lib_1.DataItem(dataItem, tagValue);\n                }\n            });\n            return dataItem;\n        };\n    }\n}\nexports.CryptoOutput = CryptoOutput;\nCryptoOutput.fromDataItem = (dataItem) => {\n    const scriptExpressions = [];\n    let _dataItem = dataItem;\n    while (true) {\n        let _tag = _dataItem.getTag() || undefined;\n        const se = ScriptExpression_1.ScriptExpression.fromTag(_tag);\n        if (se) {\n            scriptExpressions.push(se);\n            if (_dataItem.getData() instanceof lib_1.DataItem) {\n                _dataItem = _dataItem.getData();\n                _tag = _dataItem.getTag();\n            }\n            else {\n                break;\n            }\n        }\n        else {\n            break;\n        }\n    }\n    const seLength = scriptExpressions.length;\n    const isMultiKey = seLength > 0 &&\n        (scriptExpressions[seLength - 1].getExpression() ===\n            ScriptExpression_1.ScriptExpressions.MULTISIG.getExpression() ||\n            scriptExpressions[seLength - 1].getExpression() ===\n                ScriptExpression_1.ScriptExpressions.SORTED_MULTISIG.getExpression());\n    if (isMultiKey) {\n        const multiKey = MultiKey_1.MultiKey.fromDataItem(_dataItem);\n        return new CryptoOutput(scriptExpressions, multiKey);\n    }\n    if (_dataItem.getTag() === RegistryType_1.RegistryTypes.CRYPTO_HDKEY.getTag()) {\n        const cryptoHDKey = CryptoHDKey_1.CryptoHDKey.fromDataItem(_dataItem);\n        return new CryptoOutput(scriptExpressions, cryptoHDKey);\n    }\n    else {\n        const cryptoECKey = CryptoECKey_1.CryptoECKey.fromDataItem(_dataItem);\n        return new CryptoOutput(scriptExpressions, cryptoECKey);\n    }\n};\nCryptoOutput.fromCBOR = (_cborPayload) => {\n    const dataItem = lib_1.decodeToDataItem(_cborPayload);\n    return CryptoOutput.fromDataItem(dataItem);\n};\n"},"sourceMaps":{"js":{"version":3,"file":"CryptoOutput.js","sourceRoot":"","sources":["../src/CryptoOutput.ts"],"names":[],"mappings":"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","sourcesContent":["import { CryptoECKey } from './CryptoECKey';\nimport { CryptoHDKey } from './CryptoHDKey';\nimport { decodeToDataItem, DataItem } from './lib';\nimport { MultiKey } from './MultiKey';\nimport { RegistryItem } from './RegistryItem';\nimport { RegistryTypes } from './RegistryType';\nimport { ScriptExpression, ScriptExpressions } from './ScriptExpression';\n\nexport class CryptoOutput extends RegistryItem {\n  public getRegistryType = () => {\n    return RegistryTypes.CRYPTO_OUTPUT;\n  };\n\n  constructor(\n    private scriptExpressions: ScriptExpression[],\n    private cryptoKey: CryptoHDKey | CryptoECKey | MultiKey,\n  ) {\n    super();\n  }\n\n  public getCryptoKey = () => this.cryptoKey;\n  public getHDKey = () => {\n    if (this.cryptoKey instanceof CryptoHDKey) {\n      return this.cryptoKey as CryptoHDKey;\n    } else {\n      return undefined;\n    }\n  };\n  public getECKey = () => {\n    if (this.cryptoKey instanceof CryptoECKey) {\n      return this.cryptoKey as CryptoECKey;\n    } else {\n      return undefined;\n    }\n  };\n\n  public getMultiKey = () => {\n    if (this.cryptoKey instanceof MultiKey) {\n      return this.cryptoKey as MultiKey;\n    } else {\n      return undefined;\n    }\n  };\n\n  public getScriptExpressions = () => this.scriptExpressions;\n\n  toDataItem = () => {\n    let dataItem = this.cryptoKey.toDataItem();\n    if (\n      this.cryptoKey instanceof CryptoECKey ||\n      this.cryptoKey instanceof CryptoHDKey\n    ) {\n      dataItem.setTag(this.cryptoKey.getRegistryType().getTag());\n    }\n\n    const clonedSe = [...this.scriptExpressions];\n\n    clonedSe.reverse().forEach((se) => {\n      const tagValue = se.getTag();\n      if (dataItem.getTag() === undefined) {\n        dataItem.setTag(tagValue);\n      } else {\n        dataItem = new DataItem(dataItem, tagValue);\n      }\n    });\n\n    return dataItem;\n  };\n\n  public static fromDataItem = (dataItem: DataItem) => {\n    const scriptExpressions: ScriptExpression[] = [];\n    let _dataItem = dataItem;\n    while (true) {\n      let _tag = _dataItem.getTag() || undefined;\n      const se = ScriptExpression.fromTag(_tag);\n      if (se) {\n        scriptExpressions.push(se);\n        if (_dataItem.getData() instanceof DataItem) {\n          _dataItem = _dataItem.getData();\n          _tag = _dataItem.getTag();\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n    const seLength = scriptExpressions.length;\n    const isMultiKey =\n      seLength > 0 &&\n      (scriptExpressions[seLength - 1].getExpression() ===\n        ScriptExpressions.MULTISIG.getExpression() ||\n        scriptExpressions[seLength - 1].getExpression() ===\n          ScriptExpressions.SORTED_MULTISIG.getExpression());\n    //TODO: judge is multi key by scriptExpressions\n    if (isMultiKey) {\n      const multiKey = MultiKey.fromDataItem(_dataItem);\n      return new CryptoOutput(scriptExpressions, multiKey);\n    }\n\n    if (_dataItem.getTag() === RegistryTypes.CRYPTO_HDKEY.getTag()) {\n      const cryptoHDKey = CryptoHDKey.fromDataItem(_dataItem);\n      return new CryptoOutput(scriptExpressions, cryptoHDKey);\n    } else {\n      const cryptoECKey = CryptoECKey.fromDataItem(_dataItem);\n      return new CryptoOutput(scriptExpressions, cryptoECKey);\n    }\n  };\n\n  public static fromCBOR = (_cborPayload: Buffer) => {\n    const dataItem = decodeToDataItem(_cborPayload);\n    return CryptoOutput.fromDataItem(dataItem);\n  };\n}\n"]}},"error":null,"hash":"ad0ccdfad1d051f07de2a5c71fa80241","cacheData":{"env":{}}}