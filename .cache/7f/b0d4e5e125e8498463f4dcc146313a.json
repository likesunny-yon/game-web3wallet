{"id":"node_modules/eth-json-rpc-errors/src/errors.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-json-rpc-errors/package.json","includedInParent":true,"mtime":1632832301496},{"name":"./classes","loc":{"line":2,"column":50},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-json-rpc-errors/src/errors.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-json-rpc-errors/src/classes.js"},{"name":"./utils","loc":{"line":3,"column":39},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-json-rpc-errors/src/errors.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-json-rpc-errors/src/utils.js"},{"name":"./errorCodes.json","loc":{"line":4,"column":28},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-json-rpc-errors/src/errors.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-json-rpc-errors/src/errorCodes.json"}],"generated":{"js":"\nconst { JsonRpcError, EthJsonRpcError } = require('./classes')\nconst { getMessageFromCode } = require('./utils')\nconst ERROR_CODES = require('./errorCodes.json')\n\nmodule.exports = {\n  /**\n   * Get a JSON RPC 2.0 Parse error.\n   * @param {string} [message] - A custom message.\n   * @param {any} [data] - Error data.\n   * @return {JsonRpcError} The error.\n   */\n  parse: (message, data) => getJsonRpcError(\n    ERROR_CODES.jsonRpc.parse, message, data\n  ),\n\n  /**\n   * Get a JSON RPC 2.0 Invalid Request error.\n   * @param {string} [message] - A custom message.\n   * @param {any} [data] - Error data.\n   * @return {JsonRpcError} The error.\n   */\n  invalidRequest: (message, data) => getJsonRpcError(\n    ERROR_CODES.jsonRpc.invalidRequest, message, data\n  ),\n\n  /**\n   * Get a JSON RPC 2.0 Invalid Params error.\n   * @param {string} [message] - A custom message.\n   * @param {any} [data] - Error data.\n   * @return {JsonRpcError} The error.\n   */\n  invalidParams: (message, data) => getJsonRpcError(\n    ERROR_CODES.jsonRpc.invalidParams, message, data\n  ),\n\n  /**\n   * Get a JSON RPC 2.0 Method Not Found error.\n   * @param {string} [message] - A custom message.\n   * @param {any} [data] - Error data.\n   * @return {JsonRpcError} The error.\n   */\n  methodNotFound: (message, data) => getJsonRpcError(\n    ERROR_CODES.jsonRpc.methodNotFound, message, data\n  ),\n\n  /**\n   * Get a JSON RPC 2.0 Internal error.\n   * @param {string} [message] - A custom message.\n   * @param {any} [data] - Error data.\n   * @return {JsonRpcError} The error.\n   */\n  internal: (message, data) => getJsonRpcError(\n    ERROR_CODES.jsonRpc.internal, message, data\n  ),\n\n  /**\n   * Get a JSON RPC 2.0 Server error.\n   * Permits integer error codes in the [ -32099 <= -32000 ] range.\n   * @param {number} code - The integer error code.\n   * @param {string} [message] - A custom message.\n   * @param {any} [data] - Error data.\n   * @return {JsonRpcError} The error.\n   */\n  server: (code, message, data) => {\n    if (!Number.isInteger(code) || code > -32000 || code < -32099) {\n      throw new Error(\n        '\"code\" must be an integer such that: -32099 <= code <= -32000'\n      )\n    }\n    return getJsonRpcError(code, message, data)\n  },\n  eth: {\n    /**\n     * Get an Ethereum JSON RPC User Rejected Request error.\n     * @param {string} [message] - A custom message.\n     * @param {any} [data] - Error data.\n     * @return {EthJsonRpcError} The error.\n     */\n    userRejectedRequest: (message, data) => {\n      return getEthJsonRpcError(\n        ERROR_CODES.eth.userRejectedRequest, message, data\n      )\n    },\n\n    /**\n     * Get an Ethereum JSON RPC Unauthorized error.\n     * @param {string} [message] - A custom message.\n     * @param {any} [data] - Error data.\n     * @return {EthJsonRpcError} The error.\n     */\n    unauthorized: (message, data) => {\n      return getEthJsonRpcError(\n        ERROR_CODES.eth.unauthorized, message, data\n      )\n    },\n\n    /**\n     * Get an Ethereum JSON RPC Unsupported Method error.\n     * @param {string} [message] - A custom message.\n     * @param {any} [data] - Error data.\n     * @return {EthJsonRpcError} The error.\n     */\n    unsupportedMethod: (message, data) => {\n      return getEthJsonRpcError(\n        ERROR_CODES.eth.unsupportedMethod, message, data\n      )\n    },\n\n    /**\n     * Get a custom Ethereum JSON RPC error.\n     * @param {string} code - The error code.\n     * @param {string} message - The error message.\n     * @param {any} [data] - Error data.\n     * @return {EthJsonRpcError} The error.\n     */\n    custom: (code, message, data) => {\n      if (!message || typeof message !== 'string') throw new Error(\n        '\"message\" must be a nonempty string'\n      )\n      return new EthJsonRpcError(code, message, data)\n    },\n  },\n}\n\n// Internal\n\nfunction getJsonRpcError(code, message, data) {\n  return new JsonRpcError(\n    code,\n    message || getMessageFromCode(code),\n    data\n  )\n}\n\nfunction getEthJsonRpcError(code, message, data) {\n  return new EthJsonRpcError(\n    code,\n    message || getMessageFromCode(code),\n    data\n  )\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/eth-json-rpc-errors/src/errors.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}}],"sources":{"node_modules/eth-json-rpc-errors/src/errors.js":"\nconst { JsonRpcError, EthJsonRpcError } = require('./classes')\nconst { getMessageFromCode } = require('./utils')\nconst ERROR_CODES = require('./errorCodes.json')\n\nmodule.exports = {\n  /**\n   * Get a JSON RPC 2.0 Parse error.\n   * @param {string} [message] - A custom message.\n   * @param {any} [data] - Error data.\n   * @return {JsonRpcError} The error.\n   */\n  parse: (message, data) => getJsonRpcError(\n    ERROR_CODES.jsonRpc.parse, message, data\n  ),\n\n  /**\n   * Get a JSON RPC 2.0 Invalid Request error.\n   * @param {string} [message] - A custom message.\n   * @param {any} [data] - Error data.\n   * @return {JsonRpcError} The error.\n   */\n  invalidRequest: (message, data) => getJsonRpcError(\n    ERROR_CODES.jsonRpc.invalidRequest, message, data\n  ),\n\n  /**\n   * Get a JSON RPC 2.0 Invalid Params error.\n   * @param {string} [message] - A custom message.\n   * @param {any} [data] - Error data.\n   * @return {JsonRpcError} The error.\n   */\n  invalidParams: (message, data) => getJsonRpcError(\n    ERROR_CODES.jsonRpc.invalidParams, message, data\n  ),\n\n  /**\n   * Get a JSON RPC 2.0 Method Not Found error.\n   * @param {string} [message] - A custom message.\n   * @param {any} [data] - Error data.\n   * @return {JsonRpcError} The error.\n   */\n  methodNotFound: (message, data) => getJsonRpcError(\n    ERROR_CODES.jsonRpc.methodNotFound, message, data\n  ),\n\n  /**\n   * Get a JSON RPC 2.0 Internal error.\n   * @param {string} [message] - A custom message.\n   * @param {any} [data] - Error data.\n   * @return {JsonRpcError} The error.\n   */\n  internal: (message, data) => getJsonRpcError(\n    ERROR_CODES.jsonRpc.internal, message, data\n  ),\n\n  /**\n   * Get a JSON RPC 2.0 Server error.\n   * Permits integer error codes in the [ -32099 <= -32000 ] range.\n   * @param {number} code - The integer error code.\n   * @param {string} [message] - A custom message.\n   * @param {any} [data] - Error data.\n   * @return {JsonRpcError} The error.\n   */\n  server: (code, message, data) => {\n    if (!Number.isInteger(code) || code > -32000 || code < -32099) {\n      throw new Error(\n        '\"code\" must be an integer such that: -32099 <= code <= -32000'\n      )\n    }\n    return getJsonRpcError(code, message, data)\n  },\n  eth: {\n    /**\n     * Get an Ethereum JSON RPC User Rejected Request error.\n     * @param {string} [message] - A custom message.\n     * @param {any} [data] - Error data.\n     * @return {EthJsonRpcError} The error.\n     */\n    userRejectedRequest: (message, data) => {\n      return getEthJsonRpcError(\n        ERROR_CODES.eth.userRejectedRequest, message, data\n      )\n    },\n\n    /**\n     * Get an Ethereum JSON RPC Unauthorized error.\n     * @param {string} [message] - A custom message.\n     * @param {any} [data] - Error data.\n     * @return {EthJsonRpcError} The error.\n     */\n    unauthorized: (message, data) => {\n      return getEthJsonRpcError(\n        ERROR_CODES.eth.unauthorized, message, data\n      )\n    },\n\n    /**\n     * Get an Ethereum JSON RPC Unsupported Method error.\n     * @param {string} [message] - A custom message.\n     * @param {any} [data] - Error data.\n     * @return {EthJsonRpcError} The error.\n     */\n    unsupportedMethod: (message, data) => {\n      return getEthJsonRpcError(\n        ERROR_CODES.eth.unsupportedMethod, message, data\n      )\n    },\n\n    /**\n     * Get a custom Ethereum JSON RPC error.\n     * @param {string} code - The error code.\n     * @param {string} message - The error message.\n     * @param {any} [data] - Error data.\n     * @return {EthJsonRpcError} The error.\n     */\n    custom: (code, message, data) => {\n      if (!message || typeof message !== 'string') throw new Error(\n        '\"message\" must be a nonempty string'\n      )\n      return new EthJsonRpcError(code, message, data)\n    },\n  },\n}\n\n// Internal\n\nfunction getJsonRpcError(code, message, data) {\n  return new JsonRpcError(\n    code,\n    message || getMessageFromCode(code),\n    data\n  )\n}\n\nfunction getEthJsonRpcError(code, message, data) {\n  return new EthJsonRpcError(\n    code,\n    message || getMessageFromCode(code),\n    data\n  )\n}\n"},"lineCount":143}},"error":null,"hash":"8eb21f11ab9012981264c942cc522182","cacheData":{"env":{}}}