{"id":"node_modules/@keystonehq/bc-ur-registry/dist/MultiKey.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/MultiKey.js.map","includedInParent":true,"mtime":1635871978905},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/src/MultiKey.ts","includedInParent":true,"mtime":1635871978905},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/package.json","includedInParent":true,"mtime":1635871978905},{"name":"./CryptoECKey","loc":{"line":4,"column":30},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/MultiKey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/CryptoECKey.js"},{"name":"./CryptoHDKey","loc":{"line":5,"column":30},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/MultiKey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/CryptoHDKey.js"},{"name":"./lib/DataItem","loc":{"line":6,"column":27},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/MultiKey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/lib/DataItem.js"},{"name":"./RegistryItem","loc":{"line":7,"column":31},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/MultiKey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js"},{"name":"./RegistryType","loc":{"line":8,"column":31},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/MultiKey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultiKey = void 0;\nconst CryptoECKey_1 = require(\"./CryptoECKey\");\nconst CryptoHDKey_1 = require(\"./CryptoHDKey\");\nconst DataItem_1 = require(\"./lib/DataItem\");\nconst RegistryItem_1 = require(\"./RegistryItem\");\nconst RegistryType_1 = require(\"./RegistryType\");\nvar Keys;\n(function (Keys) {\n    Keys[Keys[\"threshold\"] = 1] = \"threshold\";\n    Keys[Keys[\"keys\"] = 2] = \"keys\";\n})(Keys || (Keys = {}));\nclass MultiKey extends RegistryItem_1.RegistryItem {\n    constructor(threshold, ecKeys, hdKeys) {\n        super();\n        this.threshold = threshold;\n        this.ecKeys = ecKeys;\n        this.hdKeys = hdKeys;\n        this.getThreshold = () => this.threshold;\n        this.getEcKeys = () => this.ecKeys;\n        this.getHdKeys = () => this.hdKeys;\n        this.toDataItem = () => {\n            const map = {};\n            map[Keys.threshold] = this.threshold;\n            const keys = [...this.ecKeys, ...this.hdKeys].map((k) => {\n                const dataItem = k.toDataItem();\n                dataItem.setTag(k.getRegistryType().getTag());\n                return dataItem;\n            });\n            map[Keys.keys] = keys;\n            return new DataItem_1.DataItem(map);\n        };\n    }\n}\nexports.MultiKey = MultiKey;\nMultiKey.fromDataItem = (dataItem) => {\n    const map = dataItem.getData();\n    const threshold = map[Keys.threshold];\n    const keys = map[Keys.keys];\n    const ecKeys = [];\n    const hdKeys = [];\n    keys.forEach((k) => {\n        if (k.getTag() === RegistryType_1.RegistryTypes.CRYPTO_HDKEY.getTag()) {\n            hdKeys.push(CryptoHDKey_1.CryptoHDKey.fromDataItem(k));\n        }\n        else if (k.getTag() === RegistryType_1.RegistryTypes.CRYPTO_ECKEY.getTag()) {\n            ecKeys.push(CryptoECKey_1.CryptoECKey.fromDataItem(k));\n        }\n    });\n    return new MultiKey(threshold, ecKeys, hdKeys);\n};\n"},"sourceMaps":{"js":{"version":3,"file":"MultiKey.js","sourceRoot":"","sources":["../src/MultiKey.ts"],"names":[],"mappings":";;;AAAA,+CAA4C;AAC5C,+CAA4C;AAC5C,6CAA0C;AAC1C,iDAA8C;AAC9C,iDAA6D;AAE7D,IAAK,IAGJ;AAHD,WAAK,IAAI;IACP,yCAAa,CAAA;IACb,+BAAI,CAAA;AACN,CAAC,EAHI,IAAI,KAAJ,IAAI,QAGR;AAED,MAAa,QAAS,SAAQ,2BAAY;IAGxC,YACU,SAAiB,EACjB,MAAqB,EACrB,MAAqB;QAE7B,KAAK,EAAE,CAAC;QAJA,cAAS,GAAT,SAAS,CAAQ;QACjB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAe;QAK/B,iBAAY,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC;QACpC,cAAS,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,MAAuB,CAAC;QAC/C,cAAS,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,MAAuB,CAAC;QAE/C,eAAU,GAAG,GAAG,EAAE;YAChB,MAAM,GAAG,GAAG,EAAE,CAAC;YACf,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;YACrC,MAAM,IAAI,GAAe,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;gBAClE,MAAM,QAAQ,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;gBAChC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC;gBAC9C,OAAO,QAAQ,CAAC;YAClB,CAAC,CAAC,CAAC;YACH,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;YACtB,OAAO,IAAI,mBAAQ,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC;IAhBF,CAAC;;AATH,4BA0CC;AAfQ,qBAAY,GAAG,CAAC,QAAkB,EAAE,EAAE;IAC3C,MAAM,GAAG,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC/B,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACtC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAe,CAAC;IAC1C,MAAM,MAAM,GAAG,EAAE,CAAC;IAClB,MAAM,MAAM,GAAG,EAAE,CAAC;IAClB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;QACjB,IAAI,CAAC,CAAC,MAAM,EAAE,KAAK,4BAAa,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE;YACtD,MAAM,CAAC,IAAI,CAAC,yBAAW,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1C;aAAM,IAAI,CAAC,CAAC,MAAM,EAAE,KAAK,4BAAa,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE;YAC7D,MAAM,CAAC,IAAI,CAAC,yBAAW,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1C;IACH,CAAC,CAAC,CAAC;IACH,OAAO,IAAI,QAAQ,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AACjD,CAAC,CAAC","sourcesContent":["import { CryptoECKey } from './CryptoECKey';\nimport { CryptoHDKey } from './CryptoHDKey';\nimport { DataItem } from './lib/DataItem';\nimport { RegistryItem } from './RegistryItem';\nimport { RegistryType, RegistryTypes } from './RegistryType';\n\nenum Keys {\n  threshold = 1,\n  keys,\n}\n\nexport class MultiKey extends RegistryItem {\n  getRegistryType: () => RegistryType;\n\n  constructor(\n    private threshold: number,\n    private ecKeys: CryptoECKey[],\n    private hdKeys: CryptoHDKey[],\n  ) {\n    super();\n  }\n\n  getThreshold = () => this.threshold;\n  getEcKeys = () => this.ecKeys as CryptoECKey[];\n  getHdKeys = () => this.hdKeys as CryptoHDKey[];\n\n  toDataItem = () => {\n    const map = {};\n    map[Keys.threshold] = this.threshold;\n    const keys: DataItem[] = [...this.ecKeys, ...this.hdKeys].map((k) => {\n      const dataItem = k.toDataItem();\n      dataItem.setTag(k.getRegistryType().getTag());\n      return dataItem;\n    });\n    map[Keys.keys] = keys;\n    return new DataItem(map);\n  };\n\n  static fromDataItem = (dataItem: DataItem) => {\n    const map = dataItem.getData();\n    const threshold = map[Keys.threshold];\n    const keys = map[Keys.keys] as DataItem[];\n    const ecKeys = [];\n    const hdKeys = [];\n    keys.forEach((k) => {\n      if (k.getTag() === RegistryTypes.CRYPTO_HDKEY.getTag()) {\n        hdKeys.push(CryptoHDKey.fromDataItem(k));\n      } else if (k.getTag() === RegistryTypes.CRYPTO_ECKEY.getTag()) {\n        ecKeys.push(CryptoECKey.fromDataItem(k));\n      }\n    });\n    return new MultiKey(threshold, ecKeys, hdKeys);\n  };\n}\n"]}},"error":null,"hash":"184291fb48957b3d39c938e265b47973","cacheData":{"env":{}}}