{"id":"node_modules/ethereum-private-key-to-public-key/index.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/ethereum-private-key-to-public-key/package.json","includedInParent":true,"mtime":1632832300160},{"name":"secp256k1","loc":{"line":1,"column":36},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/ethereum-private-key-to-public-key/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/secp256k1/elliptic.js"},{"name":"buffer","parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/ethereum-private-key-to-public-key/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/node-libs-browser/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nconst { publicKeyCreate } = require('secp256k1')\n\nfunction privateKeyToPublicKey (privateKey) {\n  if (!Buffer.isBuffer(privateKey)) {\n    if (typeof privateKey !== 'string') {\n      throw new Error('Expected Buffer or string as argument')\n    }\n\n    privateKey = privateKey.slice(0, 2) === '0x' ? privateKey.slice(2) : privateKey\n    privateKey = Buffer.from(privateKey, 'hex')\n  }\n\n  return publicKeyCreate(privateKey, false)\n}\n\nmodule.exports = privateKeyToPublicKey\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ethereum-private-key-to-public-key/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ethereum-private-key-to-public-key/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ethereum-private-key-to-public-key/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ethereum-private-key-to-public-key/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ethereum-private-key-to-public-key/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ethereum-private-key-to-public-key/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ethereum-private-key-to-public-key/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ethereum-private-key-to-public-key/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ethereum-private-key-to-public-key/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ethereum-private-key-to-public-key/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ethereum-private-key-to-public-key/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ethereum-private-key-to-public-key/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ethereum-private-key-to-public-key/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ethereum-private-key-to-public-key/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ethereum-private-key-to-public-key/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ethereum-private-key-to-public-key/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ethereum-private-key-to-public-key/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}}],"sources":{"node_modules/ethereum-private-key-to-public-key/index.js":"const { publicKeyCreate } = require('secp256k1')\n\nfunction privateKeyToPublicKey (privateKey) {\n  if (!Buffer.isBuffer(privateKey)) {\n    if (typeof privateKey !== 'string') {\n      throw new Error('Expected Buffer or string as argument')\n    }\n\n    privateKey = privateKey.slice(0, 2) === '0x' ? privateKey.slice(2) : privateKey\n    privateKey = Buffer.from(privateKey, 'hex')\n  }\n\n  return publicKeyCreate(privateKey, false)\n}\n\nmodule.exports = privateKeyToPublicKey\n"},"lineCount":18}},"error":null,"hash":"9ae3d03c83b6aaf7eea59a89f7393fd8","cacheData":{"env":{}}}