{"id":"node_modules/@keystonehq/bc-ur-registry/dist/Decoder/index.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/Decoder/index.js.map","includedInParent":true,"mtime":1635871978905},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/src/Decoder/index.ts","includedInParent":true,"mtime":1635871978905},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/package.json","includedInParent":true,"mtime":1635871978905},{"name":"@ngraveio/bc-ur","loc":{"line":4,"column":24},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/Decoder/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@ngraveio/bc-ur/dist/index.js"},{"name":"..","loc":{"line":5,"column":20},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/Decoder/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/index.js"},{"name":"../RegistryType","loc":{"line":6,"column":31},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/Decoder/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.URRegistryDecoder = void 0;\nconst bc_ur_1 = require(\"@ngraveio/bc-ur\");\nconst __1 = require(\"..\");\nconst RegistryType_1 = require(\"../RegistryType\");\nclass URRegistryDecoder extends bc_ur_1.URDecoder {\n    constructor() {\n        super(...arguments);\n        this.resultRegistryType = () => {\n            const ur = this.resultUR();\n            switch (ur.type) {\n                case RegistryType_1.RegistryTypes.BYTES.getType():\n                    return __1.Bytes.fromCBOR(ur.cbor);\n                case RegistryType_1.RegistryTypes.CRYPTO_HDKEY.getType():\n                    return __1.CryptoHDKey.fromCBOR(ur.cbor);\n                case RegistryType_1.RegistryTypes.CRYPTO_KEYPATH.getType():\n                    return __1.CryptoKeypath.fromCBOR(ur.cbor);\n                case RegistryType_1.RegistryTypes.CRYPTO_COIN_INFO.getType():\n                    return __1.CryptoCoinInfo.fromCBOR(ur.cbor);\n                case RegistryType_1.RegistryTypes.CRYPTO_ECKEY.getType():\n                    return __1.CryptoECKey.fromCBOR(ur.cbor);\n                case RegistryType_1.RegistryTypes.CRYPTO_OUTPUT.getType():\n                    return __1.CryptoOutput.fromCBOR(ur.cbor);\n                case RegistryType_1.RegistryTypes.CRYPTO_PSBT.getType():\n                    return __1.CryptoPSBT.fromCBOR(ur.cbor);\n                case RegistryType_1.RegistryTypes.CRYPTO_ACCOUNT.getType():\n                    return __1.CryptoAccount.fromCBOR(ur.cbor);\n                default:\n                    throw new Error(`#[ur-registry][Decoder][fn.resultRegistryType]: registry type ${ur.type} is not supported now`);\n            }\n        };\n    }\n}\nexports.URRegistryDecoder = URRegistryDecoder;\n"},"sourceMaps":{"js":{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/Decoder/index.ts"],"names":[],"mappings":";;;AAAA,2CAA4C;AAC5C,0BASY;AACZ,kDAAgD;AAEhD,MAAa,iBAAkB,SAAQ,iBAAS;IAAhD;;QACS,uBAAkB,GAAG,GAAG,EAAE;YAC/B,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC3B,QAAQ,EAAE,CAAC,IAAI,EAAE;gBACf,KAAK,4BAAa,CAAC,KAAK,CAAC,OAAO,EAAE;oBAChC,OAAO,SAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBACjC,KAAK,4BAAa,CAAC,YAAY,CAAC,OAAO,EAAE;oBACvC,OAAO,eAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBACvC,KAAK,4BAAa,CAAC,cAAc,CAAC,OAAO,EAAE;oBACzC,OAAO,iBAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBACzC,KAAK,4BAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE;oBAC3C,OAAO,kBAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC1C,KAAK,4BAAa,CAAC,YAAY,CAAC,OAAO,EAAE;oBACvC,OAAO,eAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBACvC,KAAK,4BAAa,CAAC,aAAa,CAAC,OAAO,EAAE;oBACxC,OAAO,gBAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBACxC,KAAK,4BAAa,CAAC,WAAW,CAAC,OAAO,EAAE;oBACtC,OAAO,cAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBACtC,KAAK,4BAAa,CAAC,cAAc,CAAC,OAAO,EAAE;oBACzC,OAAO,iBAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBACzC;oBACE,MAAM,IAAI,KAAK,CACb,iEAAiE,EAAE,CAAC,IAAI,uBAAuB,CAChG,CAAC;aACL;QACH,CAAC,CAAC;IACJ,CAAC;CAAA;AA1BD,8CA0BC","sourcesContent":["import { URDecoder } from '@ngraveio/bc-ur';\nimport {\n  Bytes,\n  CryptoAccount,\n  CryptoCoinInfo,\n  CryptoECKey,\n  CryptoHDKey,\n  CryptoKeypath,\n  CryptoOutput,\n  CryptoPSBT,\n} from '..';\nimport { RegistryTypes } from '../RegistryType';\n\nexport class URRegistryDecoder extends URDecoder {\n  public resultRegistryType = () => {\n    const ur = this.resultUR();\n    switch (ur.type) {\n      case RegistryTypes.BYTES.getType():\n        return Bytes.fromCBOR(ur.cbor);\n      case RegistryTypes.CRYPTO_HDKEY.getType():\n        return CryptoHDKey.fromCBOR(ur.cbor);\n      case RegistryTypes.CRYPTO_KEYPATH.getType():\n        return CryptoKeypath.fromCBOR(ur.cbor);\n      case RegistryTypes.CRYPTO_COIN_INFO.getType():\n        return CryptoCoinInfo.fromCBOR(ur.cbor);\n      case RegistryTypes.CRYPTO_ECKEY.getType():\n        return CryptoECKey.fromCBOR(ur.cbor);\n      case RegistryTypes.CRYPTO_OUTPUT.getType():\n        return CryptoOutput.fromCBOR(ur.cbor);\n      case RegistryTypes.CRYPTO_PSBT.getType():\n        return CryptoPSBT.fromCBOR(ur.cbor);\n      case RegistryTypes.CRYPTO_ACCOUNT.getType():\n        return CryptoAccount.fromCBOR(ur.cbor);\n      default:\n        throw new Error(\n          `#[ur-registry][Decoder][fn.resultRegistryType]: registry type ${ur.type} is not supported now`,\n        );\n    }\n  };\n}\n"]}},"error":null,"hash":"8453c7dbc0cd2dcfe3ecfe544d7f4696","cacheData":{"env":{}}}