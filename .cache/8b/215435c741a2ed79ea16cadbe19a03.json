{"id":"node_modules/eth-lattice-keyring/index.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-lattice-keyring/package.json","includedInParent":true,"mtime":1635871962862},{"name":"crypto","loc":{"line":1,"column":23},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-lattice-keyring/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/crypto-browserify/index.js"},{"name":"events","loc":{"line":2,"column":29},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-lattice-keyring/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/events/events.js"},{"name":"gridplus-sdk","loc":{"line":3,"column":20},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-lattice-keyring/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/gridplus-sdk/index.js"},{"name":"ethereumjs-tx","loc":{"line":4,"column":28},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-lattice-keyring/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-lattice-keyring/node_modules/ethereumjs-tx/dist/index.js"},{"name":"ethereumjs-common","loc":{"line":5,"column":23},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-lattice-keyring/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/ethereumjs-common/dist/index.js"},{"name":"ethereumjs-util","loc":{"line":6,"column":21},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-lattice-keyring/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-lattice-keyring/node_modules/ethereumjs-util/dist.browser/index.js"},{"name":"buffer","parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-lattice-keyring/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/node-libs-browser/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nconst crypto = require('crypto');\nconst EventEmitter = require('events').EventEmitter;\nconst SDK = require('gridplus-sdk');\nconst Transaction = require('ethereumjs-tx').Transaction;\nconst Common = require('ethereumjs-common').default\nconst Util = require('ethereumjs-util');\nconst keyringType = 'Lattice Hardware';\nconst HARDENED_OFFSET = 0x80000000;\nconst PER_PAGE = 5;\nconst CLOSE_CODE = -1000;\nconst STANDARD_HD_PATH = `m/44'/60'/0'/0/x`\n\nclass LatticeKeyring extends EventEmitter {\n  constructor (opts={}) {\n    super()\n    this.type = keyringType;\n    this._resetDefaults();\n    this.deserialize(opts);\n  }\n\n  //-------------------------------------------------------------------\n  // Keyring API (per `https://github.com/MetaMask/eth-simple-keyring`)\n  //-------------------------------------------------------------------\n  deserialize (opts = {}) {\n    if (opts.hdPath)\n      this.hdPath = opts.hdPath;\n    if (opts.creds)\n      this.creds = opts.creds;\n    if (opts.accounts)\n      this.accounts = opts.accounts;\n    if (opts.accountIndices)\n      this.accountIndices = opts.accountIndices\n    if (opts.walletUID)\n      this.walletUID = opts.walletUID;\n    if (opts.name)  // Legacy; use is deprecated and appName is more descriptive\n      this.appName = opts.name;\n    if (opts.appName)\n      this.appName = opts.appName;\n    if (opts.network)\n      this.network = opts.network;\n    if (opts.page)\n      this.page = opts.page;\n    return Promise.resolve()\n  }\n\n  setHdPath(hdPath) {\n    this.hdPath = hdPath;\n  }\n\n  serialize() {\n    return Promise.resolve({\n      creds: this.creds,\n      accounts: this.accounts,\n      accountIndices: this.accountIndices,\n      walletUID: this.walletUID,\n      appName: this.appName,\n      name: this.name,  // Legacy; use is deprecated\n      network: this.network,\n      page: this.page,\n      hdPath: this.hdPath,\n    })\n  }\n\n  isUnlocked () {\n    return this._hasCreds() && this._hasSession()\n  }\n\n  // Initialize a session with the Lattice1 device using the GridPlus SDK\n  unlock(updateData=true) {\n    return new Promise((resolve, reject) => {\n      this._getCreds()\n      .then((creds) => {\n        if (creds) {\n          this.creds.deviceID = creds.deviceID;\n          this.creds.password = creds.password;\n          this.creds.endpoint = creds.endpoint || null;\n        }\n        return this._initSession();\n      })\n      .then(() => {\n        return this._connect(updateData);\n      })\n      .then(() => {\n        return resolve('Unlocked');\n      })\n      .catch((err) => {\n        return reject(new Error(err));\n      })\n    })\n  }\n\n  // Add addresses to the local store and return the full result\n  addAccounts(n=1) {\n    return new Promise((resolve, reject) => {\n      if (n === CLOSE_CODE) {\n        // Special case: use a code to forget the device. \n        // (This function is overloaded due to constraints upstream)\n        this.forgetDevice();\n        return resolve([]);\n      } else if (n <= 0) {\n        // Avoid non-positive numbers.\n        return reject('Number of accounts to add must be a positive number.');\n      } else {\n        // Normal behavior: establish the connection and fetch addresses.\n        this.unlock()\n        .then(() => {\n          return this._fetchAddresses(n, this.unlockedAccount)\n        })\n        .then((addrs) => {\n          // Add these indices\n          addrs.forEach((addr, i) => {\n            if (this.accounts.indexOf(addr) === -1) {\n              this.accounts.push(addr)\n              this.accountIndices.push(this.unlockedAccount+i)\n            }\n          })\n          return resolve(this.accounts);\n        })\n        .catch((err) => {\n          return reject(new Error(err));\n        })\n      }\n    })\n  }\n\n  // Return the local store of addresses\n  getAccounts() {\n    return Promise.resolve(this.accounts ? this.accounts.slice() : [].slice());\n  }\n\n  signTransaction (address, tx) {\n    return new Promise((resolve, reject) => {\n      this._unlockAndFindAccount(address)\n      .then((addrIdx) => {\n        // Build the Lattice request data and make request\n        // We expect `tx` to be an `ethereumjs-tx` object, meaning all fields are bufferized\n        // To ensure everything plays nicely with gridplus-sdk, we convert everything to hex strings\n        const txData = {\n          chainId: tx.getChainId() || 1,\n          nonce: `0x${tx.nonce.toString('hex')}` || 0,\n          gasPrice: `0x${tx.gasPrice.toString('hex')}`,\n          gasLimit: `0x${tx.gasLimit.toString('hex')}`,\n          to: `0x${tx.to.toString('hex')}`,\n          value: `0x${tx.value.toString('hex')}`,\n          data: tx.data.length === 0 ? null : `0x${tx.data.toString('hex')}`,\n          signerPath: this._getHDPathIndices(addrIdx),\n        }\n        return this._signTxData(txData)\n      })\n      .then((signedTx) => {\n        // Add the sig params. `signedTx = { sig: { v, r, s }, tx, txHash}`\n        if (!signedTx.sig || !signedTx.sig.v || !signedTx.sig.r || !signedTx.sig.s)\n          return reject(new Error('No signature returned.'));\n        tx.r = Buffer.from(signedTx.sig.r, 'hex');\n        tx.s = Buffer.from(signedTx.sig.s, 'hex');\n        tx.v = signedTx.sig.v;\n        // For non-mainnet EIP155 chains, we have to create a custom network in order to instantiate\n        // the validating ethereumjs-tx Transaction object\n        // For EIP155 chains, v = CHAIN_ID * 2 + 35, meaning it can never be <35\n        // Non-EIP155 chains use v = {27,28}\n        const useCustomEip155Chain = (tx.getChainId() !== 1) && \n                                  (parseInt(`0x${tx.v.toString('hex')}`) > 28);\n        // Not sure how to get `networkId` so I'm just going to use the `chainId` value for both.\n        // see: https://medium.com/@pedrouid/chainid-vs-networkid-how-do-they-differ-on-ethereum-eec2ed41635b\n        const customNetwork = Common.forCustomChain('mainnet', { \n          name: 'notMainnet', \n          networkId: tx.getChainId(),\n          chainId: tx.getChainId(), \n        }, 'byzantium')\n        let validatingTx;\n        if (true == useCustomEip155Chain)\n          validatingTx = new Transaction(tx, { common: customNetwork });\n        else\n          validatingTx = new Transaction(tx)\n        // Use the validating transaction to confirm the `from` sender matches the address we\n        // signed from (i.e. `address`)\n        const signer = Util.toChecksumAddress(`0x${validatingTx.from.toString('hex')}`)\n        const inputAddress = Util.toChecksumAddress(address)\n        if (signer !== inputAddress)\n          return reject(new Error(`Unexpected signer. Got ${signer}. Expected ${inputAddress}`))\n        return resolve(tx)\n      })\n      .catch((err) => {\n        return reject(new Error(err));\n      })\n    })\n  }\n\n  signPersonalMessage(address, msg) {\n    return this.signMessage(address, { payload: msg, protocol: 'signPersonal' });\n  }\n\n  signTypedData(address, msg, opts) {\n    if (opts.version && (opts.version !== 'V4' && opts.version !== 'V3'))\n      throw new Error(`Only signTypedData V3 and V4 messages (EIP712) are supported. Got version ${opts.version}`);\n    return this.signMessage(address, { payload: msg, protocol: 'eip712' })\n  }\n\n  signMessage(address, msg) {\n    return new Promise((resolve, reject) => {\n      this._unlockAndFindAccount(address)\n      .then((addrIdx) => {\n        const { payload, protocol } = msg;\n        if (!payload || !protocol)\n          return reject('`payload` and `protocol` fields must be included in the request');\n        const req = {\n          currency: 'ETH_MSG',\n          data: {\n            protocol,\n            payload,\n            signerPath: this._getHDPathIndices(addrIdx),\n          }\n        }\n        if (!this._hasSession())\n          return reject('No SDK session started. Cannot sign transaction.')\n        this.sdkSession.sign(req, (err, res) => {\n          if (err)\n            return reject(new Error(err));\n          if (!res.sig)\n            return reject(new Error('No signature returned'));\n          // Convert the `v` to a number. It should convert to 0 or 1\n          try {\n            let v = res.sig.v.toString('hex');\n            if (v.length < 2)\n              v = `0${v}`;\n            return resolve(`0x${res.sig.r}${res.sig.s}${v}`);\n          } catch (err) {\n            return reject(new Error('Invalid signature format returned.'))\n          }\n        })\n      })\n    })\n  }\n\n  exportAccount(address) {\n    return Promise.reject(Error('exportAccount not supported by this device'))\n  }\n\n  removeAccount(address) {\n    // We only allow one account at a time, so removing any account\n    // should result in a state reset. The user will need to reconnect\n    // to the Lattice\n    this.forgetDevice();\n  }\n\n  getFirstPage() {\n    this.page = 0;\n    return this._getPage(0);\n  }\n\n  getNextPage () {\n    return this._getPage(1);\n  }\n\n  getPreviousPage () {\n    return this._getPage(-1);\n  }\n\n  setAccountToUnlock (index) {\n    this.unlockedAccount = parseInt(index, 10)\n  }\n\n  forgetDevice () {\n    this._resetDefaults();\n  }\n\n  //-------------------------------------------------------------------\n  // Internal methods and interface to SDK\n  //-------------------------------------------------------------------\n  // Find the account index of the requested address.\n  // Note that this is the BIP39 path index, not the index in the address cache.\n  _unlockAndFindAccount(address) {\n    return new Promise((resolve, reject) => {\n      // NOTE: We are passing `false` here because we do NOT want\n      // state data to be updated as a result of a transaction request.\n      // It is possible the user inserted or removed a SafeCard and\n      // will not be able to sign this transaction. If that is the\n      // case, we just want to return an error message\n      this.unlock(false)\n      .then(() => {\n        return this.getAccounts()\n      })\n      .then((addrs) => {\n        // Find the signer in our current set of accounts\n        // If we can't find it, return an error\n        let addrIdx = null;\n        addrs.forEach((addr, i) => {\n          if (address.toLowerCase() === addr.toLowerCase())\n            addrIdx = i;\n        })\n        if (addrIdx === null)\n          return reject('Signer not present');\n        return resolve(this.accountIndices[addrIdx]);\n      })\n      .catch((err) => {\n        return reject(err);\n      })\n    })\n  }\n\n  _getHDPathIndices(insertIdx=0) {\n    const path = this.hdPath.split('/').slice(1);\n    const indices = [];\n    let usedX = false;\n    path.forEach((_idx) => {\n      const isHardened = (_idx[_idx.length - 1] === \"'\");\n      let idx = isHardened ? HARDENED_OFFSET : 0;\n      // If there is an `x` in the path string, we will use it to insert our\n      // index. This is useful for e.g. Ledger Live path. Most paths have the\n      // changing index as the last one, so having an `x` in the path isn't\n      // usually necessary.\n      if (_idx.indexOf('x') > -1) {\n        idx += insertIdx;\n        usedX = true;\n      } else if (isHardened) {\n        idx += Number(_idx.slice(0, _idx.length - 1));\n      } else {\n        idx += Number(_idx);\n      }\n      indices.push(idx);\n    })\n    // If this path string does not include an `x`, we just append the index\n    // to the end of the extracted set\n    if (usedX === false) {\n      indices.push(insertIdx);\n    }\n    // Sanity check -- Lattice firmware will throw an error for large paths\n    if (indices.length > 5)\n      throw new Error('Only HD paths with up to 5 indices are allowed.')\n    return indices;\n  }\n\n  _resetDefaults() {\n    this.accounts = [];\n    this.accountIndices = [];\n    this.isLocked = true;\n    this.creds = {\n      deviceID: null,\n      password: null,\n      endpoint: null,\n    };\n    this.walletUID = null;\n    this.sdkSession = null;\n    this.page = 0;\n    this.unlockedAccount = 0;\n    this.network = null;\n    this.hdPath = STANDARD_HD_PATH;\n  }\n\n  _getCreds() {\n    return new Promise((resolve, reject) => {\n      // We only need to setup if we don't have a deviceID\n      if (this._hasCreds())\n        return resolve();\n\n      // If we are not aware of what Lattice we should be talking to,\n      // we need to open a window that lets the user go through the\n      // pairing or connection process.\n      const name = this.appName ? this.appName : 'Unknown'\n      let base = 'https://wallet.gridplus.io';\n      switch (this.network) {\n        case 'rinkeby':\n          base = 'https://gridplus-web-wallet-dev.herokuapp.com';\n          break;\n        default:\n          break;\n      }\n      let url = `${base}?keyring=${name}`;\n      if (this.network)\n        url += `&network=${this.network}`\n      const popup = window.open(url);\n      popup.postMessage('GET_LATTICE_CREDS', base);\n\n      // PostMessage handler\n      function receiveMessage(event) {\n        // Ensure origin\n        if (event.origin !== base)\n          return;\n        // Parse response data\n        try {\n          const data = JSON.parse(event.data);\n          if (!data.deviceID || !data.password)\n            return reject(Error('Invalid credentials returned from Lattice.'));\n          return resolve(data);\n        } catch (err) {\n          return reject(err);\n        }\n      }\n      window.addEventListener(\"message\", receiveMessage, false);\n    })\n  }\n\n  // [re]connect to the Lattice. This should be done frequently to ensure\n  // the expected wallet UID is still the one active in the Lattice.\n  // This will handle SafeCard insertion/removal events.\n  // updateData - true if you want to overwrite walletUID and accounts in\n  //              the event that we find we are not synced.\n  //              If left false and we notice a new walletUID, we will\n  //              return an error.\n  _connect(updateData) {\n    return new Promise((resolve, reject) => {\n      this.sdkSession.connect(this.creds.deviceID, (err) => {\n        if (err)\n          return reject(err);\n        // Save the current wallet UID\n        const activeWallet = this.sdkSession.getActiveWallet();\n        if (!activeWallet || !activeWallet.uid)\n          return reject(\"No active wallet\");\n        const newUID = activeWallet.uid.toString('hex');\n        // If we fetched a walletUID that does not match our current one,\n        // reset accounts and update the known UID\n        if (newUID != this.walletUID) {\n          // If we don't want to update data, return an error\n          if (updateData === false)\n            return reject('Wallet has changed! Please reconnect.')\n          \n          // By default we should clear out accounts and update with\n          // the new walletUID. We should NOT fill in the accounts yet,\n          // as we reserve that functionality to `addAccounts`\n          this.accounts = [];\n          this.walletUID = newUID;\n        }\n        return resolve();\n      });\n    })\n  }\n\n  _initSession() {\n    return new Promise((resolve, reject) => {\n      if (this._hasSession())\n        return resolve();\n      try {\n        let url = 'https://signing.gridpl.us';\n        if (this.network && this.network !== 'mainnet')\n          url = 'https://signing.staging-gridpl.us'\n        if (this.creds.endpoint)\n          url = this.creds.endpoint\n        const setupData = {\n          name: this.appName,\n          baseUrl: url,\n          crypto,\n          timeout: 120000,\n          privKey: this._genSessionKey(),\n          network: this.network\n        }\n        this.sdkSession = new SDK.Client(setupData);\n        return resolve();\n      } catch (err) {\n        return reject(err);\n      }\n    })\n  }\n\n  _fetchAddresses(n=1, i=0, recursedAddrs=[]) {\n    return new Promise((resolve, reject) => {\n      if (!this._hasSession())\n        return reject('No SDK session started. Cannot fetch addresses.')\n\n      this.__fetchAddresses(n, i, (err, addrs) => {\n        if (err)\n          return reject(err);\n        else\n          return resolve(addrs);\n      })\n    })\n  }\n\n  __fetchAddresses(n=1, i=0, cb, recursedAddrs=[]) {\n     // Determine if we need to do a recursive call here. We prefer not to\n      // because they will be much slower, but Ledger paths require it since\n      // they are non-standard.\n      if (n === 0)\n        return cb(null, recursedAddrs);\n      const shouldRecurse = this._hdPathHasInternalVarIdx();\n\n      // Make the request to get the requested address\n      const addrData = { \n        currency: 'ETH', \n        startPath: this._getHDPathIndices(i), \n        n: shouldRecurse ? 1 : n,\n        skipCache: true,\n      };\n      this.sdkSession.getAddresses(addrData, (err, addrs) => {\n        if (err)\n          return cb(`Error fetching addresses: ${err}`);\n        // Sanity check -- if this returned 0 addresses, handle the error\n        if (addrs.length < 1)\n          return cb('No addresses returned');\n        // Return the addresses we fetched *without* updating state\n        if (shouldRecurse) {\n          return this.__fetchAddresses(n-1, i+1, cb, recursedAddrs.concat(addrs));\n        } else {\n          return cb(null, addrs);\n        }\n      })\n  }\n\n  _signTxData(txData) {\n    return new Promise((resolve, reject) => {\n      if (!this._hasSession())\n        return reject('No SDK session started. Cannot sign transaction.')\n      this.sdkSession.sign({ currency: 'ETH', data: txData }, (err, res) => {\n        if (err)\n          return reject(err);\n        if (!res.tx)\n          return reject('No transaction payload returned.');\n        return resolve(res)\n      })\n    })\n  }\n\n  _getPage(increment=0) {\n    return new Promise((resolve, reject) => {\n      this.page += increment;\n      if (this.page < 0)\n        this.page = 0;\n      const start = PER_PAGE * this.page;\n      // Otherwise unlock the device and fetch more addresses\n      this.unlock()\n      .then(() => {\n        return this._fetchAddresses(PER_PAGE, start)\n      })\n      .then((addrs) => {\n        const accounts = []\n        addrs.forEach((address, i) => {\n          accounts.push({\n            address,\n            balance: null,\n            index: start + i,\n          })\n        })\n        return resolve(accounts)\n      })\n      .catch((err) => {\n        return reject(err);\n      })\n    })\n  }\n\n  _hasCreds() {\n    return this.creds.deviceID !== null && this.creds.password !== null && this.appName;\n  }\n\n  _hasSession() {\n    return this.sdkSession && this.walletUID;\n  }\n\n  _genSessionKey() {\n    if (this.name && !this.appName) // Migrate from legacy param if needed\n      this.appName = this.name;\n    if (!this._hasCreds())\n      throw new Error('No credentials -- cannot create session key!');\n    const buf = Buffer.concat([\n      Buffer.from(this.creds.password), \n      Buffer.from(this.creds.deviceID), \n      Buffer.from(this.appName)\n    ])\n    return crypto.createHash('sha256').update(buf).digest();\n  }\n\n  // Determine if an HD path has a variable index internal to it.\n  // e.g. m/44'/60'/x'/0/0 -> true, while m/44'/60'/0'/0/x -> false\n  // This is just a hacky helper to avoid having to recursively call for non-ledger\n  // derivation paths. Ledger is SO ANNOYING TO SUPPORT.\n  _hdPathHasInternalVarIdx() {\n    const path = this.hdPath.split('/').slice(1);\n    for (let i = 0; i < path.length -1; i++) {\n      if (path[i].indexOf('x') > -1)\n        return true;\n    }\n    return false;\n  }\n\n}\n\nLatticeKeyring.type = keyringType\nmodule.exports = LatticeKeyring;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/eth-lattice-keyring/index.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}}],"sources":{"node_modules/eth-lattice-keyring/index.js":"const crypto = require('crypto');\nconst EventEmitter = require('events').EventEmitter;\nconst SDK = require('gridplus-sdk');\nconst Transaction = require('ethereumjs-tx').Transaction;\nconst Common = require('ethereumjs-common').default\nconst Util = require('ethereumjs-util');\nconst keyringType = 'Lattice Hardware';\nconst HARDENED_OFFSET = 0x80000000;\nconst PER_PAGE = 5;\nconst CLOSE_CODE = -1000;\nconst STANDARD_HD_PATH = `m/44'/60'/0'/0/x`\n\nclass LatticeKeyring extends EventEmitter {\n  constructor (opts={}) {\n    super()\n    this.type = keyringType;\n    this._resetDefaults();\n    this.deserialize(opts);\n  }\n\n  //-------------------------------------------------------------------\n  // Keyring API (per `https://github.com/MetaMask/eth-simple-keyring`)\n  //-------------------------------------------------------------------\n  deserialize (opts = {}) {\n    if (opts.hdPath)\n      this.hdPath = opts.hdPath;\n    if (opts.creds)\n      this.creds = opts.creds;\n    if (opts.accounts)\n      this.accounts = opts.accounts;\n    if (opts.accountIndices)\n      this.accountIndices = opts.accountIndices\n    if (opts.walletUID)\n      this.walletUID = opts.walletUID;\n    if (opts.name)  // Legacy; use is deprecated and appName is more descriptive\n      this.appName = opts.name;\n    if (opts.appName)\n      this.appName = opts.appName;\n    if (opts.network)\n      this.network = opts.network;\n    if (opts.page)\n      this.page = opts.page;\n    return Promise.resolve()\n  }\n\n  setHdPath(hdPath) {\n    this.hdPath = hdPath;\n  }\n\n  serialize() {\n    return Promise.resolve({\n      creds: this.creds,\n      accounts: this.accounts,\n      accountIndices: this.accountIndices,\n      walletUID: this.walletUID,\n      appName: this.appName,\n      name: this.name,  // Legacy; use is deprecated\n      network: this.network,\n      page: this.page,\n      hdPath: this.hdPath,\n    })\n  }\n\n  isUnlocked () {\n    return this._hasCreds() && this._hasSession()\n  }\n\n  // Initialize a session with the Lattice1 device using the GridPlus SDK\n  unlock(updateData=true) {\n    return new Promise((resolve, reject) => {\n      this._getCreds()\n      .then((creds) => {\n        if (creds) {\n          this.creds.deviceID = creds.deviceID;\n          this.creds.password = creds.password;\n          this.creds.endpoint = creds.endpoint || null;\n        }\n        return this._initSession();\n      })\n      .then(() => {\n        return this._connect(updateData);\n      })\n      .then(() => {\n        return resolve('Unlocked');\n      })\n      .catch((err) => {\n        return reject(new Error(err));\n      })\n    })\n  }\n\n  // Add addresses to the local store and return the full result\n  addAccounts(n=1) {\n    return new Promise((resolve, reject) => {\n      if (n === CLOSE_CODE) {\n        // Special case: use a code to forget the device. \n        // (This function is overloaded due to constraints upstream)\n        this.forgetDevice();\n        return resolve([]);\n      } else if (n <= 0) {\n        // Avoid non-positive numbers.\n        return reject('Number of accounts to add must be a positive number.');\n      } else {\n        // Normal behavior: establish the connection and fetch addresses.\n        this.unlock()\n        .then(() => {\n          return this._fetchAddresses(n, this.unlockedAccount)\n        })\n        .then((addrs) => {\n          // Add these indices\n          addrs.forEach((addr, i) => {\n            if (this.accounts.indexOf(addr) === -1) {\n              this.accounts.push(addr)\n              this.accountIndices.push(this.unlockedAccount+i)\n            }\n          })\n          return resolve(this.accounts);\n        })\n        .catch((err) => {\n          return reject(new Error(err));\n        })\n      }\n    })\n  }\n\n  // Return the local store of addresses\n  getAccounts() {\n    return Promise.resolve(this.accounts ? this.accounts.slice() : [].slice());\n  }\n\n  signTransaction (address, tx) {\n    return new Promise((resolve, reject) => {\n      this._unlockAndFindAccount(address)\n      .then((addrIdx) => {\n        // Build the Lattice request data and make request\n        // We expect `tx` to be an `ethereumjs-tx` object, meaning all fields are bufferized\n        // To ensure everything plays nicely with gridplus-sdk, we convert everything to hex strings\n        const txData = {\n          chainId: tx.getChainId() || 1,\n          nonce: `0x${tx.nonce.toString('hex')}` || 0,\n          gasPrice: `0x${tx.gasPrice.toString('hex')}`,\n          gasLimit: `0x${tx.gasLimit.toString('hex')}`,\n          to: `0x${tx.to.toString('hex')}`,\n          value: `0x${tx.value.toString('hex')}`,\n          data: tx.data.length === 0 ? null : `0x${tx.data.toString('hex')}`,\n          signerPath: this._getHDPathIndices(addrIdx),\n        }\n        return this._signTxData(txData)\n      })\n      .then((signedTx) => {\n        // Add the sig params. `signedTx = { sig: { v, r, s }, tx, txHash}`\n        if (!signedTx.sig || !signedTx.sig.v || !signedTx.sig.r || !signedTx.sig.s)\n          return reject(new Error('No signature returned.'));\n        tx.r = Buffer.from(signedTx.sig.r, 'hex');\n        tx.s = Buffer.from(signedTx.sig.s, 'hex');\n        tx.v = signedTx.sig.v;\n        // For non-mainnet EIP155 chains, we have to create a custom network in order to instantiate\n        // the validating ethereumjs-tx Transaction object\n        // For EIP155 chains, v = CHAIN_ID * 2 + 35, meaning it can never be <35\n        // Non-EIP155 chains use v = {27,28}\n        const useCustomEip155Chain = (tx.getChainId() !== 1) && \n                                  (parseInt(`0x${tx.v.toString('hex')}`) > 28);\n        // Not sure how to get `networkId` so I'm just going to use the `chainId` value for both.\n        // see: https://medium.com/@pedrouid/chainid-vs-networkid-how-do-they-differ-on-ethereum-eec2ed41635b\n        const customNetwork = Common.forCustomChain('mainnet', { \n          name: 'notMainnet', \n          networkId: tx.getChainId(),\n          chainId: tx.getChainId(), \n        }, 'byzantium')\n        let validatingTx;\n        if (true == useCustomEip155Chain)\n          validatingTx = new Transaction(tx, { common: customNetwork });\n        else\n          validatingTx = new Transaction(tx)\n        // Use the validating transaction to confirm the `from` sender matches the address we\n        // signed from (i.e. `address`)\n        const signer = Util.toChecksumAddress(`0x${validatingTx.from.toString('hex')}`)\n        const inputAddress = Util.toChecksumAddress(address)\n        if (signer !== inputAddress)\n          return reject(new Error(`Unexpected signer. Got ${signer}. Expected ${inputAddress}`))\n        return resolve(tx)\n      })\n      .catch((err) => {\n        return reject(new Error(err));\n      })\n    })\n  }\n\n  signPersonalMessage(address, msg) {\n    return this.signMessage(address, { payload: msg, protocol: 'signPersonal' });\n  }\n\n  signTypedData(address, msg, opts) {\n    if (opts.version && (opts.version !== 'V4' && opts.version !== 'V3'))\n      throw new Error(`Only signTypedData V3 and V4 messages (EIP712) are supported. Got version ${opts.version}`);\n    return this.signMessage(address, { payload: msg, protocol: 'eip712' })\n  }\n\n  signMessage(address, msg) {\n    return new Promise((resolve, reject) => {\n      this._unlockAndFindAccount(address)\n      .then((addrIdx) => {\n        const { payload, protocol } = msg;\n        if (!payload || !protocol)\n          return reject('`payload` and `protocol` fields must be included in the request');\n        const req = {\n          currency: 'ETH_MSG',\n          data: {\n            protocol,\n            payload,\n            signerPath: this._getHDPathIndices(addrIdx),\n          }\n        }\n        if (!this._hasSession())\n          return reject('No SDK session started. Cannot sign transaction.')\n        this.sdkSession.sign(req, (err, res) => {\n          if (err)\n            return reject(new Error(err));\n          if (!res.sig)\n            return reject(new Error('No signature returned'));\n          // Convert the `v` to a number. It should convert to 0 or 1\n          try {\n            let v = res.sig.v.toString('hex');\n            if (v.length < 2)\n              v = `0${v}`;\n            return resolve(`0x${res.sig.r}${res.sig.s}${v}`);\n          } catch (err) {\n            return reject(new Error('Invalid signature format returned.'))\n          }\n        })\n      })\n    })\n  }\n\n  exportAccount(address) {\n    return Promise.reject(Error('exportAccount not supported by this device'))\n  }\n\n  removeAccount(address) {\n    // We only allow one account at a time, so removing any account\n    // should result in a state reset. The user will need to reconnect\n    // to the Lattice\n    this.forgetDevice();\n  }\n\n  getFirstPage() {\n    this.page = 0;\n    return this._getPage(0);\n  }\n\n  getNextPage () {\n    return this._getPage(1);\n  }\n\n  getPreviousPage () {\n    return this._getPage(-1);\n  }\n\n  setAccountToUnlock (index) {\n    this.unlockedAccount = parseInt(index, 10)\n  }\n\n  forgetDevice () {\n    this._resetDefaults();\n  }\n\n  //-------------------------------------------------------------------\n  // Internal methods and interface to SDK\n  //-------------------------------------------------------------------\n  // Find the account index of the requested address.\n  // Note that this is the BIP39 path index, not the index in the address cache.\n  _unlockAndFindAccount(address) {\n    return new Promise((resolve, reject) => {\n      // NOTE: We are passing `false` here because we do NOT want\n      // state data to be updated as a result of a transaction request.\n      // It is possible the user inserted or removed a SafeCard and\n      // will not be able to sign this transaction. If that is the\n      // case, we just want to return an error message\n      this.unlock(false)\n      .then(() => {\n        return this.getAccounts()\n      })\n      .then((addrs) => {\n        // Find the signer in our current set of accounts\n        // If we can't find it, return an error\n        let addrIdx = null;\n        addrs.forEach((addr, i) => {\n          if (address.toLowerCase() === addr.toLowerCase())\n            addrIdx = i;\n        })\n        if (addrIdx === null)\n          return reject('Signer not present');\n        return resolve(this.accountIndices[addrIdx]);\n      })\n      .catch((err) => {\n        return reject(err);\n      })\n    })\n  }\n\n  _getHDPathIndices(insertIdx=0) {\n    const path = this.hdPath.split('/').slice(1);\n    const indices = [];\n    let usedX = false;\n    path.forEach((_idx) => {\n      const isHardened = (_idx[_idx.length - 1] === \"'\");\n      let idx = isHardened ? HARDENED_OFFSET : 0;\n      // If there is an `x` in the path string, we will use it to insert our\n      // index. This is useful for e.g. Ledger Live path. Most paths have the\n      // changing index as the last one, so having an `x` in the path isn't\n      // usually necessary.\n      if (_idx.indexOf('x') > -1) {\n        idx += insertIdx;\n        usedX = true;\n      } else if (isHardened) {\n        idx += Number(_idx.slice(0, _idx.length - 1));\n      } else {\n        idx += Number(_idx);\n      }\n      indices.push(idx);\n    })\n    // If this path string does not include an `x`, we just append the index\n    // to the end of the extracted set\n    if (usedX === false) {\n      indices.push(insertIdx);\n    }\n    // Sanity check -- Lattice firmware will throw an error for large paths\n    if (indices.length > 5)\n      throw new Error('Only HD paths with up to 5 indices are allowed.')\n    return indices;\n  }\n\n  _resetDefaults() {\n    this.accounts = [];\n    this.accountIndices = [];\n    this.isLocked = true;\n    this.creds = {\n      deviceID: null,\n      password: null,\n      endpoint: null,\n    };\n    this.walletUID = null;\n    this.sdkSession = null;\n    this.page = 0;\n    this.unlockedAccount = 0;\n    this.network = null;\n    this.hdPath = STANDARD_HD_PATH;\n  }\n\n  _getCreds() {\n    return new Promise((resolve, reject) => {\n      // We only need to setup if we don't have a deviceID\n      if (this._hasCreds())\n        return resolve();\n\n      // If we are not aware of what Lattice we should be talking to,\n      // we need to open a window that lets the user go through the\n      // pairing or connection process.\n      const name = this.appName ? this.appName : 'Unknown'\n      let base = 'https://wallet.gridplus.io';\n      switch (this.network) {\n        case 'rinkeby':\n          base = 'https://gridplus-web-wallet-dev.herokuapp.com';\n          break;\n        default:\n          break;\n      }\n      let url = `${base}?keyring=${name}`;\n      if (this.network)\n        url += `&network=${this.network}`\n      const popup = window.open(url);\n      popup.postMessage('GET_LATTICE_CREDS', base);\n\n      // PostMessage handler\n      function receiveMessage(event) {\n        // Ensure origin\n        if (event.origin !== base)\n          return;\n        // Parse response data\n        try {\n          const data = JSON.parse(event.data);\n          if (!data.deviceID || !data.password)\n            return reject(Error('Invalid credentials returned from Lattice.'));\n          return resolve(data);\n        } catch (err) {\n          return reject(err);\n        }\n      }\n      window.addEventListener(\"message\", receiveMessage, false);\n    })\n  }\n\n  // [re]connect to the Lattice. This should be done frequently to ensure\n  // the expected wallet UID is still the one active in the Lattice.\n  // This will handle SafeCard insertion/removal events.\n  // updateData - true if you want to overwrite walletUID and accounts in\n  //              the event that we find we are not synced.\n  //              If left false and we notice a new walletUID, we will\n  //              return an error.\n  _connect(updateData) {\n    return new Promise((resolve, reject) => {\n      this.sdkSession.connect(this.creds.deviceID, (err) => {\n        if (err)\n          return reject(err);\n        // Save the current wallet UID\n        const activeWallet = this.sdkSession.getActiveWallet();\n        if (!activeWallet || !activeWallet.uid)\n          return reject(\"No active wallet\");\n        const newUID = activeWallet.uid.toString('hex');\n        // If we fetched a walletUID that does not match our current one,\n        // reset accounts and update the known UID\n        if (newUID != this.walletUID) {\n          // If we don't want to update data, return an error\n          if (updateData === false)\n            return reject('Wallet has changed! Please reconnect.')\n          \n          // By default we should clear out accounts and update with\n          // the new walletUID. We should NOT fill in the accounts yet,\n          // as we reserve that functionality to `addAccounts`\n          this.accounts = [];\n          this.walletUID = newUID;\n        }\n        return resolve();\n      });\n    })\n  }\n\n  _initSession() {\n    return new Promise((resolve, reject) => {\n      if (this._hasSession())\n        return resolve();\n      try {\n        let url = 'https://signing.gridpl.us';\n        if (this.network && this.network !== 'mainnet')\n          url = 'https://signing.staging-gridpl.us'\n        if (this.creds.endpoint)\n          url = this.creds.endpoint\n        const setupData = {\n          name: this.appName,\n          baseUrl: url,\n          crypto,\n          timeout: 120000,\n          privKey: this._genSessionKey(),\n          network: this.network\n        }\n        this.sdkSession = new SDK.Client(setupData);\n        return resolve();\n      } catch (err) {\n        return reject(err);\n      }\n    })\n  }\n\n  _fetchAddresses(n=1, i=0, recursedAddrs=[]) {\n    return new Promise((resolve, reject) => {\n      if (!this._hasSession())\n        return reject('No SDK session started. Cannot fetch addresses.')\n\n      this.__fetchAddresses(n, i, (err, addrs) => {\n        if (err)\n          return reject(err);\n        else\n          return resolve(addrs);\n      })\n    })\n  }\n\n  __fetchAddresses(n=1, i=0, cb, recursedAddrs=[]) {\n     // Determine if we need to do a recursive call here. We prefer not to\n      // because they will be much slower, but Ledger paths require it since\n      // they are non-standard.\n      if (n === 0)\n        return cb(null, recursedAddrs);\n      const shouldRecurse = this._hdPathHasInternalVarIdx();\n\n      // Make the request to get the requested address\n      const addrData = { \n        currency: 'ETH', \n        startPath: this._getHDPathIndices(i), \n        n: shouldRecurse ? 1 : n,\n        skipCache: true,\n      };\n      this.sdkSession.getAddresses(addrData, (err, addrs) => {\n        if (err)\n          return cb(`Error fetching addresses: ${err}`);\n        // Sanity check -- if this returned 0 addresses, handle the error\n        if (addrs.length < 1)\n          return cb('No addresses returned');\n        // Return the addresses we fetched *without* updating state\n        if (shouldRecurse) {\n          return this.__fetchAddresses(n-1, i+1, cb, recursedAddrs.concat(addrs));\n        } else {\n          return cb(null, addrs);\n        }\n      })\n  }\n\n  _signTxData(txData) {\n    return new Promise((resolve, reject) => {\n      if (!this._hasSession())\n        return reject('No SDK session started. Cannot sign transaction.')\n      this.sdkSession.sign({ currency: 'ETH', data: txData }, (err, res) => {\n        if (err)\n          return reject(err);\n        if (!res.tx)\n          return reject('No transaction payload returned.');\n        return resolve(res)\n      })\n    })\n  }\n\n  _getPage(increment=0) {\n    return new Promise((resolve, reject) => {\n      this.page += increment;\n      if (this.page < 0)\n        this.page = 0;\n      const start = PER_PAGE * this.page;\n      // Otherwise unlock the device and fetch more addresses\n      this.unlock()\n      .then(() => {\n        return this._fetchAddresses(PER_PAGE, start)\n      })\n      .then((addrs) => {\n        const accounts = []\n        addrs.forEach((address, i) => {\n          accounts.push({\n            address,\n            balance: null,\n            index: start + i,\n          })\n        })\n        return resolve(accounts)\n      })\n      .catch((err) => {\n        return reject(err);\n      })\n    })\n  }\n\n  _hasCreds() {\n    return this.creds.deviceID !== null && this.creds.password !== null && this.appName;\n  }\n\n  _hasSession() {\n    return this.sdkSession && this.walletUID;\n  }\n\n  _genSessionKey() {\n    if (this.name && !this.appName) // Migrate from legacy param if needed\n      this.appName = this.name;\n    if (!this._hasCreds())\n      throw new Error('No credentials -- cannot create session key!');\n    const buf = Buffer.concat([\n      Buffer.from(this.creds.password), \n      Buffer.from(this.creds.deviceID), \n      Buffer.from(this.appName)\n    ])\n    return crypto.createHash('sha256').update(buf).digest();\n  }\n\n  // Determine if an HD path has a variable index internal to it.\n  // e.g. m/44'/60'/x'/0/0 -> true, while m/44'/60'/0'/0/x -> false\n  // This is just a hacky helper to avoid having to recursively call for non-ledger\n  // derivation paths. Ledger is SO ANNOYING TO SUPPORT.\n  _hdPathHasInternalVarIdx() {\n    const path = this.hdPath.split('/').slice(1);\n    for (let i = 0; i < path.length -1; i++) {\n      if (path[i].indexOf('x') > -1)\n        return true;\n    }\n    return false;\n  }\n\n}\n\nLatticeKeyring.type = keyringType\nmodule.exports = LatticeKeyring;"},"lineCount":578}},"error":null,"hash":"ee0853b9716f0d38003317574e05331f","cacheData":{"env":{}}}