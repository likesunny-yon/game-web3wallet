{"id":"node_modules/@cvbb/bc-bech32/dist/bech32.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@cvbb/bc-bech32/dist/bech32.js.map","includedInParent":true,"mtime":1632832317535},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@cvbb/bc-bech32/src/bech32.ts","includedInParent":true,"mtime":1632832317535},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@cvbb/bc-bech32/package.json","includedInParent":true,"mtime":1632832317535},{"name":"./index","loc":{"line":3,"column":22},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@cvbb/bc-bech32/dist/bech32.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@cvbb/bc-bech32/dist/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./index\");\nvar CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nvar GENERATOR = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nvar polymod = function (values) {\n    var chk = 1;\n    for (var p = 0; p < values.length; ++p) {\n        var top_1 = chk >> 25;\n        chk = ((chk & 0x1ffffff) << 5) ^ values[p];\n        for (var i = 0; i < 6; ++i) {\n            if ((top_1 >> i) & 1) {\n                chk ^= GENERATOR[i];\n            }\n        }\n    }\n    return chk;\n};\nvar hrpExpand = function (hrp) {\n    var ret = [];\n    var p;\n    for (p = 0; p < hrp.length; ++p) {\n        ret.push(hrp.charCodeAt(p) >> 5);\n    }\n    ret.push(0);\n    for (p = 0; p < hrp.length; ++p) {\n        ret.push(hrp.charCodeAt(p) & 31);\n    }\n    return ret;\n};\nvar verifyChecksum = function (hrp, data, version) {\n    var header;\n    if (hrp) {\n        header = hrpExpand(hrp);\n    }\n    else {\n        header = [0];\n    }\n    var check = version === index_1.Bech32Version.Origin ? 1 : 0x3fffffff;\n    return polymod(header.concat(data)) === check;\n};\nvar createChecksum = function (hrp, data, bech32Version) {\n    var values;\n    if (hrp) {\n        values = hrpExpand(hrp).concat(data).concat([0, 0, 0, 0, 0, 0]);\n    }\n    else {\n        values = [0].concat(data).concat([0, 0, 0, 0, 0, 0]);\n    }\n    var chk = bech32Version === index_1.Bech32Version.Origin ? 1 : 0x3fffffff;\n    var mod = polymod(values) ^ chk;\n    var ret = [];\n    for (var p = 0; p < 6; ++p) {\n        ret.push((mod >> (5 * (5 - p))) & 31);\n    }\n    return ret;\n};\nvar encode = function (hrp, data, version) {\n    var combined = data.concat(createChecksum(hrp, data, version));\n    var ret;\n    if (hrp) {\n        ret = hrp + '1';\n    }\n    else {\n        ret = '';\n    }\n    for (var p = 0; p < combined.length; ++p) {\n        ret += CHARSET.charAt(combined[p]);\n    }\n    return ret;\n};\nvar decodeBc32 = function (bechString) {\n    var data = [];\n    for (var p = 0; p < bechString.length; ++p) {\n        var d = CHARSET.indexOf(bechString.charAt(p));\n        if (d === -1) {\n            return null;\n        }\n        data.push(d);\n    }\n    if (!verifyChecksum(undefined, data, index_1.Bech32Version.bis)) {\n        return null;\n    }\n    return { hrp: null, data: data.slice(0, data.length - 6) };\n};\nvar decode = function (bechString) {\n    var p;\n    var hasLower = false;\n    var hasUpper = false;\n    for (p = 0; p < bechString.length; ++p) {\n        if (bechString.charCodeAt(p) < 33 || bechString.charCodeAt(p) > 126) {\n            return null;\n        }\n        if (bechString.charCodeAt(p) >= 97 && bechString.charCodeAt(p) <= 122) {\n            hasLower = true;\n        }\n        if (bechString.charCodeAt(p) >= 65 && bechString.charCodeAt(p) <= 90) {\n            hasUpper = true;\n        }\n    }\n    if (hasLower && hasUpper) {\n        return null;\n    }\n    bechString = bechString.toLowerCase();\n    var pos = bechString.lastIndexOf('1');\n    if (pos === -1) {\n        return decodeBc32(bechString);\n    }\n    if (pos < 1 || pos + 7 > bechString.length || bechString.length > 90) {\n        return null;\n    }\n    var hrp = bechString.substring(0, pos);\n    var data = [];\n    for (p = pos + 1; p < bechString.length; ++p) {\n        var d = CHARSET.indexOf(bechString.charAt(p));\n        if (d === -1) {\n            return null;\n        }\n        data.push(d);\n    }\n    if (!verifyChecksum(hrp, data, index_1.Bech32Version.Origin)) {\n        return null;\n    }\n    return { hrp: hrp, data: data.slice(0, data.length - 6) };\n};\nexports.default = {\n    encode: encode,\n    decode: decode,\n};\n"},"sourceMaps":{"js":{"version":3,"file":"bech32.js","sourceRoot":"","sources":["../src/bech32.ts"],"names":[],"mappings":"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","sourcesContent":["import { Bech32Version } from './index';\n\nconst CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst GENERATOR = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n\nconst polymod = (values: number[]): number => {\n    let chk = 1;\n    for (let p = 0; p < values.length; ++p) {\n        const top = chk >> 25;\n        chk = ((chk & 0x1ffffff) << 5) ^ values[p];\n        for (let i = 0; i < 6; ++i) {\n            if ((top >> i) & 1) {\n                chk ^= GENERATOR[i];\n            }\n        }\n    }\n    return chk;\n};\n\nconst hrpExpand = (hrp: string): number[] => {\n    const ret: number[] = [];\n    let p: number;\n    for (p = 0; p < hrp.length; ++p) {\n        ret.push(hrp.charCodeAt(p) >> 5);\n    }\n    ret.push(0);\n    for (p = 0; p < hrp.length; ++p) {\n        ret.push(hrp.charCodeAt(p) & 31);\n    }\n    return ret;\n};\n\nconst verifyChecksum = (hrp: string | undefined, data: number[], version: Bech32Version): boolean => {\n    let header: number[];\n    if (hrp) {\n        header = hrpExpand(hrp);\n    } else {\n        header = [0];\n    }\n    const check = version === Bech32Version.Origin ? 1 : 0x3fffffff;\n    return polymod(header.concat(data)) === check;\n};\n\nconst createChecksum = (hrp: string | undefined, data: number[], bech32Version: Bech32Version): number[] => {\n    let values: number[];\n    if (hrp) {\n        values = hrpExpand(hrp).concat(data).concat([0, 0, 0, 0, 0, 0]);\n    } else {\n        values = [0].concat(data).concat([0, 0, 0, 0, 0, 0]);\n    }\n\n    const chk = bech32Version === Bech32Version.Origin ? 1 : 0x3fffffff;\n\n    const mod = polymod(values) ^ chk;\n    const ret = [];\n    for (let p = 0; p < 6; ++p) {\n        ret.push((mod >> (5 * (5 - p))) & 31);\n    }\n    return ret;\n};\n\nconst encode = (hrp: string | undefined, data: number[], version: Bech32Version): string => {\n    const combined = data.concat(createChecksum(hrp, data, version));\n    let ret: string;\n    if (hrp) {\n        ret = hrp + '1';\n    } else {\n        ret = '';\n    }\n    for (let p = 0; p < combined.length; ++p) {\n        ret += CHARSET.charAt(combined[p]);\n    }\n    return ret;\n};\n\nconst decodeBc32 = (bechString: string): { hrp: null; data: number[] } | null => {\n    const data: number[] = [];\n    for (let p = 0; p < bechString.length; ++p) {\n        const d = CHARSET.indexOf(bechString.charAt(p));\n        if (d === -1) {\n            return null;\n        }\n        data.push(d);\n    }\n    if (!verifyChecksum(undefined, data, Bech32Version.bis)) {\n        return null;\n    }\n    return { hrp: null, data: data.slice(0, data.length - 6) };\n};\n\nconst decode = (bechString: string) => {\n    let p: number;\n    let hasLower = false;\n    let hasUpper = false;\n    for (p = 0; p < bechString.length; ++p) {\n        if (bechString.charCodeAt(p) < 33 || bechString.charCodeAt(p) > 126) {\n            return null;\n        }\n        if (bechString.charCodeAt(p) >= 97 && bechString.charCodeAt(p) <= 122) {\n            hasLower = true;\n        }\n        if (bechString.charCodeAt(p) >= 65 && bechString.charCodeAt(p) <= 90) {\n            hasUpper = true;\n        }\n    }\n    if (hasLower && hasUpper) {\n        return null;\n    }\n    bechString = bechString.toLowerCase();\n    const pos = bechString.lastIndexOf('1');\n    if (pos === -1) {\n        return decodeBc32(bechString);\n    }\n    if (pos < 1 || pos + 7 > bechString.length || bechString.length > 90) {\n        return null;\n    }\n    const hrp = bechString.substring(0, pos);\n    const data: number[] = [];\n    for (p = pos + 1; p < bechString.length; ++p) {\n        const d = CHARSET.indexOf(bechString.charAt(p));\n        if (d === -1) {\n            return null;\n        }\n        data.push(d);\n    }\n    if (!verifyChecksum(hrp, data, Bech32Version.Origin)) {\n        return null;\n    }\n    return { hrp: hrp, data: data.slice(0, data.length - 6) };\n};\n\nexport default {\n    encode,\n    decode,\n};\n"]}},"error":null,"hash":"d1de59b65c043e9cb420a4cdf09c4beb","cacheData":{"env":{}}}