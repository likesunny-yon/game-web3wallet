{"id":"node_modules/trezor-connect/lib/constants/errors.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/trezor-connect/package.json","includedInParent":true,"mtime":1635871963211},{"name":"@babel/runtime/helpers/interopRequireDefault","loc":{"line":3,"column":37},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/trezor-connect/lib/constants/errors.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@babel/runtime/helpers/interopRequireDefault.js"},{"name":"@babel/runtime/helpers/inheritsLoose","loc":{"line":8,"column":53},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/trezor-connect/lib/constants/errors.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@babel/runtime/helpers/inheritsLoose.js"},{"name":"@babel/runtime/helpers/wrapNativeSuper","loc":{"line":10,"column":55},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/trezor-connect/lib/constants/errors.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@babel/runtime/helpers/wrapNativeSuper.js"}],"generated":{"js":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.LIBUSB_ERROR_MESSAGE = exports.WEBUSB_ERROR_MESSAGE = exports.INVALID_PIN_ERROR_MESSAGE = exports.WRONG_PREVIOUS_SESSION_ERROR_MESSAGE = exports.TypedError = exports.TrezorError = exports.ERROR_CODES = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _wrapNativeSuper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/wrapNativeSuper\"));\n\nvar ERROR_CODES = {\n  Init_NotInitialized: 'TrezorConnect not yet initialized',\n  // race condition: call on not initialized Core (usually hot-reloading)\n  Init_AlreadyInitialized: 'TrezorConnect has been already initialized',\n  // thrown by .init called multiple times\n  Init_IframeBlocked: 'Iframe blocked',\n  // iframe injection blocked (ad-blocker)\n  Init_IframeTimeout: 'Iframe timeout',\n  // iframe didn't load in specified time\n  Init_ManifestMissing: 'Manifest not set. Read more at https://github.com/trezor/connect/blob/develop/docs/index.md',\n  // manifest is not set\n  Popup_ConnectionMissing: 'Unable to establish connection with iframe',\n  // thrown by popup\n  Transport_Missing: 'Transport is missing',\n  // no transport available\n  Transport_InvalidProtobuf: '',\n  // generic error from transport layer (trezor-link)\n  Method_InvalidPackage: 'This version of trezor-connect is not suitable to work without browser. Use trezor-connect@extended package instead',\n  // thrown by node and react-native env while using regular 'web' package\n  Method_InvalidParameter: '',\n  // replaced by generic text\n  Method_NotAllowed: 'Method not allowed for this configuration',\n  // example: device management in popup mode\n  Method_PermissionsNotGranted: 'Permissions not granted',\n  // permission/confirmation not granted in popup\n  Method_Cancel: 'Cancelled',\n  // permission/confirmation not granted in popup OR .cancel() custom error\n  Method_Interrupted: 'Popup closed',\n  // interruption: popup closed\n  Method_UnknownCoin: 'Coin not found',\n  // coin definition not found\n  Method_AddressNotMatch: 'Addresses do not match',\n  // thrown by all getAddress methods with custom UI validation\n  Method_FirmwareUpdate_DownloadFailed: 'Failed to download firmware binary',\n  // thrown by FirmwareUpdate method\n  Method_CustomMessage_Callback: 'Parameter \"callback\" is not a function',\n  // thrown by CustomMessage method\n  Method_Discovery_BundleException: '',\n  // thrown by getAccountInfo method\n  Method_Override: 'override',\n  // inner \"error\", it's more like a interruption\n  Method_NoResponse: 'Call resolved without response',\n  // thrown by npm index(es), call to Core resolved without response, should not happen\n  Backend_NotSupported: 'BlockchainLink settings not found in coins.json',\n  // thrown by methods which using backends, blockchainLink not defined for this coin\n  Backend_WorkerMissing: '',\n  // thrown by BlockchainLink class, worker not specified\n  Backend_Disconnected: 'Backend disconnected',\n  // thrown by BlockchainLink class\n  Backend_Invalid: 'Invalid backend',\n  // thrown by BlockchainLink class, invalid backend (ie: backend for wrong coin set)\n  Backend_Error: '',\n  // thrown by BlockchainLink class, generic message from 'blockchain-link'\n  Runtime: '',\n  // thrown from several places, this shouldn't ever happen tho\n  Device_NotFound: 'Device not found',\n  Device_InitializeFailed: '',\n  // generic error from firmware while calling \"Initialize\" message\n  Device_FwException: '',\n  // generic FirmwareException type\n  Device_ModeException: '',\n  // generic Device.UnexpectedMode type\n  Device_Disconnected: 'Device disconnected',\n  // device disconnected during call\n  Device_UsedElsewhere: 'Device is used in another window',\n  // interruption: current session toked by other application\n  Device_InvalidState: 'Passphrase is incorrect',\n  // authorization error (device state comparison)\n  Device_CallInProgress: 'Device call in progress' // thrown when trying to make another call while current is still running\n\n};\nexports.ERROR_CODES = ERROR_CODES;\n\nvar TrezorError = /*#__PURE__*/function (_Error) {\n  (0, _inheritsLoose2[\"default\"])(TrezorError, _Error);\n\n  function TrezorError(code, message) {\n    var _this;\n\n    _this = _Error.call(this, message) || this;\n    _this.code = code;\n    _this.message = message;\n    return _this;\n  }\n\n  return TrezorError;\n}( /*#__PURE__*/(0, _wrapNativeSuper2[\"default\"])(Error));\n\nexports.TrezorError = TrezorError;\n\nvar TypedError = function TypedError(id, message) {\n  return new TrezorError(id, message || ERROR_CODES[id]);\n}; // a slight hack\n// this error string is hard-coded\n// in both bridge and extension\n\n\nexports.TypedError = TypedError;\nvar WRONG_PREVIOUS_SESSION_ERROR_MESSAGE = 'wrong previous session';\nexports.WRONG_PREVIOUS_SESSION_ERROR_MESSAGE = WRONG_PREVIOUS_SESSION_ERROR_MESSAGE;\nvar INVALID_PIN_ERROR_MESSAGE = 'PIN invalid';\nexports.INVALID_PIN_ERROR_MESSAGE = INVALID_PIN_ERROR_MESSAGE;\nvar WEBUSB_ERROR_MESSAGE = 'NetworkError: Unable to claim interface.'; // trezord error prefix.\n// user has insufficient permissions. may occur in Linux (missing udev rules), Windows and MacOS.\n\nexports.WEBUSB_ERROR_MESSAGE = WEBUSB_ERROR_MESSAGE;\nvar LIBUSB_ERROR_MESSAGE = 'LIBUSB_ERROR';\nexports.LIBUSB_ERROR_MESSAGE = LIBUSB_ERROR_MESSAGE;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/errors.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}}],"sources":{"node_modules/trezor-connect/lib/constants/errors.js":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.LIBUSB_ERROR_MESSAGE = exports.WEBUSB_ERROR_MESSAGE = exports.INVALID_PIN_ERROR_MESSAGE = exports.WRONG_PREVIOUS_SESSION_ERROR_MESSAGE = exports.TypedError = exports.TrezorError = exports.ERROR_CODES = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _wrapNativeSuper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/wrapNativeSuper\"));\n\nvar ERROR_CODES = {\n  Init_NotInitialized: 'TrezorConnect not yet initialized',\n  // race condition: call on not initialized Core (usually hot-reloading)\n  Init_AlreadyInitialized: 'TrezorConnect has been already initialized',\n  // thrown by .init called multiple times\n  Init_IframeBlocked: 'Iframe blocked',\n  // iframe injection blocked (ad-blocker)\n  Init_IframeTimeout: 'Iframe timeout',\n  // iframe didn't load in specified time\n  Init_ManifestMissing: 'Manifest not set. Read more at https://github.com/trezor/connect/blob/develop/docs/index.md',\n  // manifest is not set\n  Popup_ConnectionMissing: 'Unable to establish connection with iframe',\n  // thrown by popup\n  Transport_Missing: 'Transport is missing',\n  // no transport available\n  Transport_InvalidProtobuf: '',\n  // generic error from transport layer (trezor-link)\n  Method_InvalidPackage: 'This version of trezor-connect is not suitable to work without browser. Use trezor-connect@extended package instead',\n  // thrown by node and react-native env while using regular 'web' package\n  Method_InvalidParameter: '',\n  // replaced by generic text\n  Method_NotAllowed: 'Method not allowed for this configuration',\n  // example: device management in popup mode\n  Method_PermissionsNotGranted: 'Permissions not granted',\n  // permission/confirmation not granted in popup\n  Method_Cancel: 'Cancelled',\n  // permission/confirmation not granted in popup OR .cancel() custom error\n  Method_Interrupted: 'Popup closed',\n  // interruption: popup closed\n  Method_UnknownCoin: 'Coin not found',\n  // coin definition not found\n  Method_AddressNotMatch: 'Addresses do not match',\n  // thrown by all getAddress methods with custom UI validation\n  Method_FirmwareUpdate_DownloadFailed: 'Failed to download firmware binary',\n  // thrown by FirmwareUpdate method\n  Method_CustomMessage_Callback: 'Parameter \"callback\" is not a function',\n  // thrown by CustomMessage method\n  Method_Discovery_BundleException: '',\n  // thrown by getAccountInfo method\n  Method_Override: 'override',\n  // inner \"error\", it's more like a interruption\n  Method_NoResponse: 'Call resolved without response',\n  // thrown by npm index(es), call to Core resolved without response, should not happen\n  Backend_NotSupported: 'BlockchainLink settings not found in coins.json',\n  // thrown by methods which using backends, blockchainLink not defined for this coin\n  Backend_WorkerMissing: '',\n  // thrown by BlockchainLink class, worker not specified\n  Backend_Disconnected: 'Backend disconnected',\n  // thrown by BlockchainLink class\n  Backend_Invalid: 'Invalid backend',\n  // thrown by BlockchainLink class, invalid backend (ie: backend for wrong coin set)\n  Backend_Error: '',\n  // thrown by BlockchainLink class, generic message from 'blockchain-link'\n  Runtime: '',\n  // thrown from several places, this shouldn't ever happen tho\n  Device_NotFound: 'Device not found',\n  Device_InitializeFailed: '',\n  // generic error from firmware while calling \"Initialize\" message\n  Device_FwException: '',\n  // generic FirmwareException type\n  Device_ModeException: '',\n  // generic Device.UnexpectedMode type\n  Device_Disconnected: 'Device disconnected',\n  // device disconnected during call\n  Device_UsedElsewhere: 'Device is used in another window',\n  // interruption: current session toked by other application\n  Device_InvalidState: 'Passphrase is incorrect',\n  // authorization error (device state comparison)\n  Device_CallInProgress: 'Device call in progress' // thrown when trying to make another call while current is still running\n\n};\nexports.ERROR_CODES = ERROR_CODES;\n\nvar TrezorError = /*#__PURE__*/function (_Error) {\n  (0, _inheritsLoose2[\"default\"])(TrezorError, _Error);\n\n  function TrezorError(code, message) {\n    var _this;\n\n    _this = _Error.call(this, message) || this;\n    _this.code = code;\n    _this.message = message;\n    return _this;\n  }\n\n  return TrezorError;\n}( /*#__PURE__*/(0, _wrapNativeSuper2[\"default\"])(Error));\n\nexports.TrezorError = TrezorError;\n\nvar TypedError = function TypedError(id, message) {\n  return new TrezorError(id, message || ERROR_CODES[id]);\n}; // a slight hack\n// this error string is hard-coded\n// in both bridge and extension\n\n\nexports.TypedError = TypedError;\nvar WRONG_PREVIOUS_SESSION_ERROR_MESSAGE = 'wrong previous session';\nexports.WRONG_PREVIOUS_SESSION_ERROR_MESSAGE = WRONG_PREVIOUS_SESSION_ERROR_MESSAGE;\nvar INVALID_PIN_ERROR_MESSAGE = 'PIN invalid';\nexports.INVALID_PIN_ERROR_MESSAGE = INVALID_PIN_ERROR_MESSAGE;\nvar WEBUSB_ERROR_MESSAGE = 'NetworkError: Unable to claim interface.'; // trezord error prefix.\n// user has insufficient permissions. may occur in Linux (missing udev rules), Windows and MacOS.\n\nexports.WEBUSB_ERROR_MESSAGE = WEBUSB_ERROR_MESSAGE;\nvar LIBUSB_ERROR_MESSAGE = 'LIBUSB_ERROR';\nexports.LIBUSB_ERROR_MESSAGE = LIBUSB_ERROR_MESSAGE;"},"lineCount":119}},"error":null,"hash":"80c6595820cecc8a57b0fe688545014f","cacheData":{"env":{}}}