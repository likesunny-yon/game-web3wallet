{"id":"node_modules/ethereum-public-key-to-address/index.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/ethereum-public-key-to-address/package.json","includedInParent":true,"mtime":1632832300417},{"name":"secp256k1","loc":{"line":1,"column":37},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/ethereum-public-key-to-address/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/secp256k1/elliptic.js"},{"name":"keccak256","loc":{"line":2,"column":26},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/ethereum-public-key-to-address/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/keccak256/dist/index.js"},{"name":"ethereum-checksum-address","loc":{"line":3,"column":38},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/ethereum-public-key-to-address/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/ethereum-checksum-address/index.js"},{"name":"buffer","parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/ethereum-public-key-to-address/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/node-libs-browser/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nconst { publicKeyConvert } = require('secp256k1')\nconst keccak256 = require('keccak256')\nconst { toChecksumAddress } = require('ethereum-checksum-address')\n\nfunction publicKeyToAddress (publicKey) {\n  if (!Buffer.isBuffer(publicKey)) {\n    if (typeof publicKey !== 'string') {\n      throw new Error('Expected Buffer or string as argument')\n    }\n\n    publicKey = publicKey.slice(0, 2) === '0x' ? publicKey.slice(2) : publicKey\n    publicKey = Buffer.from(publicKey, 'hex')\n  }\n\n  publicKey = publicKeyConvert(publicKey, false).slice(1)\n  return toChecksumAddress(keccak256(publicKey).slice(-20).toString('hex'))\n}\n\nmodule.exports = publicKeyToAddress\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ethereum-public-key-to-address/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}}],"sources":{"node_modules/ethereum-public-key-to-address/index.js":"const { publicKeyConvert } = require('secp256k1')\nconst keccak256 = require('keccak256')\nconst { toChecksumAddress } = require('ethereum-checksum-address')\n\nfunction publicKeyToAddress (publicKey) {\n  if (!Buffer.isBuffer(publicKey)) {\n    if (typeof publicKey !== 'string') {\n      throw new Error('Expected Buffer or string as argument')\n    }\n\n    publicKey = publicKey.slice(0, 2) === '0x' ? publicKey.slice(2) : publicKey\n    publicKey = Buffer.from(publicKey, 'hex')\n  }\n\n  publicKey = publicKeyConvert(publicKey, false).slice(1)\n  return toChecksumAddress(keccak256(publicKey).slice(-20).toString('hex'))\n}\n\nmodule.exports = publicKeyToAddress\n"},"lineCount":21}},"error":null,"hash":"315cc0ff21de491250d8de9e4bdb5143","cacheData":{"env":{}}}