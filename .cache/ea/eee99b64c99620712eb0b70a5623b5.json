{"id":"node_modules/@shapeshiftoss/hdwallet-keepkey/dist/ethereum.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/ethereum.js.map","includedInParent":true,"mtime":1637149977864},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/package.json","includedInParent":true,"mtime":1637149977864},{"name":"@keepkey/device-protocol/lib/exchange_pb","loc":{"line":35,"column":38},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/ethereum.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keepkey/device-protocol/lib/exchange_pb.js"},{"name":"@keepkey/device-protocol/lib/messages_pb","loc":{"line":36,"column":38},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/ethereum.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keepkey/device-protocol/lib/messages_pb.js"},{"name":"@keepkey/device-protocol/lib/types_pb","loc":{"line":37,"column":35},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/ethereum.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keepkey/device-protocol/lib/types_pb.js"},{"name":"@shapeshiftoss/hdwallet-core","loc":{"line":38,"column":34},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/ethereum.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-core/dist/index.js"},{"name":"@ethereumjs/common","loc":{"line":39,"column":41},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/ethereum.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@ethereumjs/common/dist.browser/index.js"},{"name":"@ethereumjs/tx","loc":{"line":40,"column":21},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/ethereum.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@ethereumjs/tx/dist.browser/index.js"},{"name":"eip55","loc":{"line":41,"column":35},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/ethereum.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eip55/index.js"},{"name":"./utils","loc":{"line":42,"column":24},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/ethereum.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/utils.js"}],"generated":{"js":"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ethVerifyMessage = exports.ethSignMessage = exports.ethGetAddress = exports.ethSignTx = exports.ethGetAccountPaths = exports.ethSupportsNativeShapeShift = exports.ethSupportsSecureTransfer = exports.ethSupportsNetwork = void 0;\nconst Exchange = __importStar(require(\"@keepkey/device-protocol/lib/exchange_pb\"));\nconst Messages = __importStar(require(\"@keepkey/device-protocol/lib/messages_pb\"));\nconst Types = __importStar(require(\"@keepkey/device-protocol/lib/types_pb\"));\nconst core = __importStar(require(\"@shapeshiftoss/hdwallet-core\"));\nconst common_1 = __importDefault(require(\"@ethereumjs/common\"));\nconst tx_1 = require(\"@ethereumjs/tx\");\nconst eip55 = __importStar(require(\"eip55\"));\nconst utils_1 = require(\"./utils\");\nfunction ethSupportsNetwork(chain_id) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return true;\n    });\n}\nexports.ethSupportsNetwork = ethSupportsNetwork;\nfunction ethSupportsSecureTransfer() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return true;\n    });\n}\nexports.ethSupportsSecureTransfer = ethSupportsSecureTransfer;\nfunction ethSupportsNativeShapeShift() {\n    return true;\n}\nexports.ethSupportsNativeShapeShift = ethSupportsNativeShapeShift;\nfunction ethGetAccountPaths(msg) {\n    const slip44 = core.slip44ByCoin(msg.coin);\n    if (slip44 === undefined)\n        return [];\n    return [\n        {\n            addressNList: [0x80000000 + 44, 0x80000000 + slip44, 0x80000000 + msg.accountIdx, 0, 0],\n            hardenedPath: [0x80000000 + 44, 0x80000000 + slip44, 0x80000000 + msg.accountIdx],\n            relPath: [0, 0],\n            description: \"KeepKey\",\n        },\n    ];\n}\nexports.ethGetAccountPaths = ethGetAccountPaths;\nfunction stripLeadingZeroes(buf) {\n    const firstZeroIndex = buf.findIndex((x) => x !== 0);\n    return buf.slice(firstZeroIndex !== -1 ? firstZeroIndex : buf.length);\n}\nfunction ethSignTx(transport, msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return transport.lockDuring(() => __awaiter(this, void 0, void 0, function* () {\n            const est = new Messages.EthereumSignTx();\n            est.setAddressNList(msg.addressNList);\n            est.setNonce(stripLeadingZeroes(core.arrayify(msg.nonce)));\n            est.setGasLimit(core.arrayify(msg.gasLimit));\n            if (msg.gasPrice) {\n                est.setGasPrice(core.arrayify(msg.gasPrice));\n            }\n            if (msg.maxFeePerGas) {\n                est.setMaxFeePerGas(core.arrayify(msg.maxFeePerGas));\n                est.setType(core.ETHTransactionType.ETH_TX_TYPE_EIP_1559);\n                if (msg.maxPriorityFeePerGas) {\n                    est.setMaxPriorityFeePerGas(core.arrayify(msg.maxPriorityFeePerGas));\n                }\n            }\n            if (msg.value.match(\"^0x0*$\") === null) {\n                est.setValue(core.arrayify(msg.value));\n            }\n            if (msg.toAddressNList) {\n                est.setAddressType(Types.OutputAddressType.SPEND);\n                est.setToAddressNList(msg.toAddressNList);\n            }\n            else if (msg.exchangeType) {\n                est.setAddressType(Types.OutputAddressType.EXCHANGE);\n                const signedHex = core.base64toHEX(msg.exchangeType.signedExchangeResponse);\n                const signedExchangeOut = Exchange.SignedExchangeResponse.deserializeBinary(core.arrayify(signedHex));\n                const exchangeType = new Types.ExchangeType();\n                exchangeType.setSignedExchangeResponse(signedExchangeOut);\n                exchangeType.setWithdrawalCoinName(msg.exchangeType.withdrawalCoinName); // KeepKey firmware will complain if this doesn't match signed exchange response\n                exchangeType.setWithdrawalAddressNList(msg.exchangeType.withdrawalAddressNList);\n                exchangeType.setWithdrawalScriptType(utils_1.translateInputScriptType(msg.exchangeType.withdrawalScriptType || core.BTCInputScriptType.SpendAddress));\n                exchangeType.setReturnAddressNList(msg.exchangeType.returnAddressNList);\n                exchangeType.setReturnScriptType(utils_1.translateInputScriptType(msg.exchangeType.returnScriptType || core.BTCInputScriptType.SpendAddress));\n                est.setExchangeType(exchangeType);\n            }\n            else {\n                est.setAddressType(Types.OutputAddressType.SPEND);\n            }\n            if (msg.to) {\n                est.setTo(core.arrayify(msg.to));\n            }\n            let dataChunk = null;\n            let dataRemaining = undefined;\n            if (msg.data) {\n                dataRemaining = core.arrayify(msg.data);\n                est.setDataLength(dataRemaining.length);\n                dataChunk = dataRemaining.slice(0, 1024);\n                dataRemaining = dataRemaining.slice(dataChunk.length);\n                est.setDataInitialChunk(dataChunk);\n            }\n            if (msg.chainId !== undefined) {\n                est.setChainId(msg.chainId);\n            }\n            let response;\n            let nextResponse = yield transport.call(Messages.MessageType.MESSAGETYPE_ETHEREUMSIGNTX, est, {\n                msgTimeout: core.LONG_TIMEOUT,\n                omitLock: true,\n            });\n            response = nextResponse.proto;\n            try {\n                const esa = new Messages.EthereumTxAck();\n                while (response.hasDataLength()) {\n                    const dataLength = response.getDataLength();\n                    dataRemaining = core.mustBeDefined(dataRemaining);\n                    dataChunk = dataRemaining.slice(0, dataLength);\n                    dataRemaining = dataRemaining.slice(dataLength, dataRemaining.length);\n                    esa.setDataChunk(dataChunk);\n                    nextResponse = yield transport.call(Messages.MessageType.MESSAGETYPE_ETHEREUMTXACK, esa, {\n                        msgTimeout: core.LONG_TIMEOUT,\n                        omitLock: true,\n                    });\n                    response = nextResponse.proto;\n                }\n            }\n            catch (error) {\n                console.error({ error });\n                throw new Error(\"Failed to sign ETH transaction\");\n            }\n            const utxBase = {\n                to: msg.to,\n                value: msg.value,\n                data: msg.data,\n                chainId: msg.chainId,\n                nonce: msg.nonce,\n                gasLimit: msg.gasLimit,\n                maxFeePerGas: msg.maxFeePerGas,\n                maxPriorityFeePerGas: msg.maxPriorityFeePerGas,\n            };\n            const r = \"0x\" + core.toHexString(response.getSignatureR_asU8());\n            const s = \"0x\" + core.toHexString(response.getSignatureS_asU8());\n            if (!response.hasSignatureV())\n                throw new Error(\"could not get v\");\n            const v = core.mustBeDefined(response.getSignatureV());\n            const v2 = \"0x\" + v.toString(16);\n            const common = new common_1.default({ chain: \"mainnet\", hardfork: \"london\" });\n            const tx = msg.maxFeePerGas\n                ? tx_1.FeeMarketEIP1559Transaction.fromTxData(Object.assign(Object.assign({}, utxBase), { maxFeePerGas: msg.maxFeePerGas, maxPriorityFeePerGas: msg.maxPriorityFeePerGas, r: r, s: s, v: v2 }))\n                : tx_1.Transaction.fromTxData(Object.assign(Object.assign({}, utxBase), { gasPrice: msg.gasPrice, r: r, s: s, v: v2 }), { common });\n            return {\n                r,\n                s,\n                v,\n                serialized: \"0x\" + core.toHexString(tx.serialize()),\n            };\n        }));\n    });\n}\nexports.ethSignTx = ethSignTx;\nfunction ethGetAddress(transport, msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const getAddr = new Messages.EthereumGetAddress();\n        getAddr.setAddressNList(msg.addressNList);\n        getAddr.setShowDisplay(msg.showDisplay !== false);\n        const response = yield transport.call(Messages.MessageType.MESSAGETYPE_ETHEREUMGETADDRESS, getAddr, {\n            msgTimeout: core.LONG_TIMEOUT,\n        });\n        const ethAddress = response.proto;\n        let address;\n        if (ethAddress.hasAddressStr())\n            address = ethAddress.getAddressStr();\n        else if (ethAddress.hasAddress())\n            address = \"0x\" + core.toHexString(ethAddress.getAddress_asU8());\n        else\n            throw new Error(\"Unable to obtain ETH address from device.\");\n        return address;\n    });\n}\nexports.ethGetAddress = ethGetAddress;\nfunction ethSignMessage(transport, msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const m = new Messages.EthereumSignMessage();\n        m.setAddressNList(msg.addressNList);\n        m.setMessage(utils_1.toUTF8Array(msg.message));\n        const response = yield transport.call(Messages.MessageType.MESSAGETYPE_ETHEREUMSIGNMESSAGE, m, {\n            msgTimeout: core.LONG_TIMEOUT,\n        });\n        const sig = response.proto;\n        return {\n            address: eip55.encode(\"0x\" + core.toHexString(sig.getAddress_asU8())),\n            signature: \"0x\" + core.toHexString(sig.getSignature_asU8()),\n        };\n    });\n}\nexports.ethSignMessage = ethSignMessage;\nfunction ethVerifyMessage(transport, msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const m = new Messages.EthereumVerifyMessage();\n        m.setAddress(core.arrayify(msg.address));\n        m.setSignature(core.arrayify(msg.signature));\n        m.setMessage(utils_1.toUTF8Array(msg.message));\n        let event;\n        try {\n            event = yield transport.call(Messages.MessageType.MESSAGETYPE_ETHEREUMVERIFYMESSAGE, m, {\n                msgTimeout: core.LONG_TIMEOUT,\n            });\n        }\n        catch (e) {\n            if (core.isIndexable(e) && e.message_enum === Messages.MessageType.MESSAGETYPE_FAILURE) {\n                return false;\n            }\n            throw e;\n        }\n        const success = event.proto;\n        return success.getMessage() === \"Message verified\";\n    });\n}\nexports.ethVerifyMessage = ethVerifyMessage;\n"},"sourceMaps":{"js":{"version":3,"file":"ethereum.js","sourceRoot":"","sources":["../src/ethereum.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"3fc1dd2d090e5b26ae7bd15dfb9da7c9","cacheData":{"env":{}}}