{"id":"node_modules/@keystonehq/bc-ur-registry/dist/PathComponent.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/PathComponent.js.map","includedInParent":true,"mtime":1635871978905},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/src/PathComponent.ts","includedInParent":true,"mtime":1635871978905},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/package.json","includedInParent":true,"mtime":1635871978905}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PathComponent = void 0;\nclass PathComponent {\n    constructor(args) {\n        this.getIndex = () => this.index;\n        this.isWildcard = () => this.wildcard;\n        this.isHardened = () => this.hardened;\n        this.index = args.index;\n        this.hardened = args.hardened;\n        if (this.index !== undefined) {\n            this.wildcard = false;\n        }\n        else {\n            this.wildcard = true;\n        }\n        if (this.index && (this.index & PathComponent.HARDENED_BIT) !== 0) {\n            throw new Error(`#[ur-registry][PathComponent][fn.constructor]: Invalid index ${this.index} - most significant bit cannot be set`);\n        }\n    }\n}\nexports.PathComponent = PathComponent;\nPathComponent.HARDENED_BIT = 0x80000000;\n"},"sourceMaps":{"js":{"version":3,"file":"PathComponent.js","sourceRoot":"","sources":["../src/PathComponent.ts"],"names":[],"mappings":";;;AAAA,MAAa,aAAa;IAOxB,YAAY,IAA2C;QAiBhD,aAAQ,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;QAC5B,eAAU,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC;QACjC,eAAU,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC;QAlBtC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE9B,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;YAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;QAED,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;YACjE,MAAM,IAAI,KAAK,CACb,gEAAgE,IAAI,CAAC,KAAK,uCAAuC,CAClH,CAAC;SACH;IACH,CAAC;;AAtBH,sCA2BC;AA1BwB,0BAAY,GAAG,UAAU,CAAC","sourcesContent":["export class PathComponent {\n  public static readonly HARDENED_BIT = 0x80000000;\n\n  private index?: number;\n  private wildcard: boolean;\n  private hardened: boolean;\n\n  constructor(args: { index?: number; hardened: boolean }) {\n    this.index = args.index;\n    this.hardened = args.hardened;\n\n    if (this.index !== undefined) {\n      this.wildcard = false;\n    } else {\n      this.wildcard = true;\n    }\n\n    if (this.index && (this.index & PathComponent.HARDENED_BIT) !== 0) {\n      throw new Error(\n        `#[ur-registry][PathComponent][fn.constructor]: Invalid index ${this.index} - most significant bit cannot be set`,\n      );\n    }\n  }\n\n  public getIndex = () => this.index;\n  public isWildcard = () => this.wildcard;\n  public isHardened = () => this.hardened;\n}\n"]}},"error":null,"hash":"292c9d701bbaebb97e953932ea01db2f","cacheData":{"env":{}}}