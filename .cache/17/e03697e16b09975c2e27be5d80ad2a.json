{"id":"node_modules/@shapeshiftoss/hdwallet-keepkey/dist/cosmos.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/cosmos.js.map","includedInParent":true,"mtime":1637149977864},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/package.json","includedInParent":true,"mtime":1637149977864},{"name":"@keepkey/device-protocol/lib/messages-cosmos_pb","loc":{"line":35,"column":44},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/cosmos.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keepkey/device-protocol/lib/messages-cosmos_pb.js"},{"name":"@keepkey/device-protocol/lib/messages_pb","loc":{"line":36,"column":38},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/cosmos.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keepkey/device-protocol/lib/messages_pb.js"},{"name":"@shapeshiftoss/hdwallet-core","loc":{"line":37,"column":34},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/cosmos.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-core/dist/index.js"},{"name":"lodash","loc":{"line":38,"column":41},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/cosmos.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/lodash/lodash.js"}],"generated":{"js":"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cosmosGetAddress = exports.cosmosSignTx = exports.cosmosGetAccountPaths = void 0;\nconst CosmosMessages = __importStar(require(\"@keepkey/device-protocol/lib/messages-cosmos_pb\"));\nconst Messages = __importStar(require(\"@keepkey/device-protocol/lib/messages_pb\"));\nconst core = __importStar(require(\"@shapeshiftoss/hdwallet-core\"));\nconst lodash_1 = __importDefault(require(\"lodash\"));\nfunction cosmosGetAccountPaths(msg) {\n    return [\n        {\n            addressNList: [0x80000000 + 44, 0x80000000 + core.slip44ByCoin(\"Atom\"), 0x80000000 + msg.accountIdx, 0, 0],\n        },\n    ];\n}\nexports.cosmosGetAccountPaths = cosmosGetAccountPaths;\nfunction cosmosSignTx(transport, msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return transport.lockDuring(() => __awaiter(this, void 0, void 0, function* () {\n            const signTx = new CosmosMessages.CosmosSignTx();\n            signTx.setAddressNList(msg.addressNList);\n            signTx.setAccountNumber(msg.account_number);\n            signTx.setChainId(msg.chain_id);\n            signTx.setFeeAmount(parseInt(msg.tx.fee.amount[0].amount));\n            signTx.setGas(parseInt(msg.tx.fee.gas));\n            signTx.setSequence(msg.sequence);\n            if (msg.tx.memo !== undefined)\n                signTx.setMemo(msg.tx.memo);\n            signTx.setMsgCount(1);\n            let resp = yield transport.call(Messages.MessageType.MESSAGETYPE_COSMOSSIGNTX, signTx, {\n                msgTimeout: core.LONG_TIMEOUT,\n                omitLock: true\n            });\n            for (let m of msg.tx.msg) {\n                if (resp.message_enum !== Messages.MessageType.MESSAGETYPE_COSMOSMSGREQUEST) {\n                    throw new Error(`cosmos: unexpected response ${resp.message_type}`);\n                }\n                let ack;\n                if (m.type === \"cosmos-sdk/MsgSend\") {\n                    if (m.value.amount.length !== 1) {\n                        throw new Error(\"cosmos: Multiple amounts per msg not supported\");\n                    }\n                    const denom = m.value.amount[0].denom;\n                    if (denom !== \"uatom\") {\n                        throw new Error(\"cosmos: Unsupported denomination: \" + denom);\n                    }\n                    const send = new CosmosMessages.CosmosMsgSend();\n                    send.setFromAddress(m.value.from_address);\n                    send.setToAddress(m.value.to_address);\n                    send.setAmount(m.value.amount[0].amount);\n                    ack = new CosmosMessages.CosmosMsgAck();\n                    ack.setSend(send);\n                }\n                else {\n                    throw new Error(`cosmos: Message ${m.type} is not yet supported`);\n                }\n                resp = yield transport.call(Messages.MessageType.MESSAGETYPE_COSMOSMSGACK, ack, {\n                    msgTimeout: core.LONG_TIMEOUT,\n                    omitLock: true\n                });\n            }\n            if (resp.message_enum !== Messages.MessageType.MESSAGETYPE_COSMOSSIGNEDTX) {\n                throw new Error(`cosmos: unexpected response ${resp.message_type}`);\n            }\n            const signedTx = resp.proto;\n            const signed = lodash_1.default.cloneDeep(msg.tx);\n            signed.signatures = [\n                {\n                    pub_key: {\n                        type: \"tendermint/PubKeySecp256k1\",\n                        value: signedTx.getPublicKey_asB64(),\n                    },\n                    signature: signedTx.getSignature_asB64(),\n                },\n            ];\n            return signed;\n        }));\n    });\n}\nexports.cosmosSignTx = cosmosSignTx;\nfunction cosmosGetAddress(transport, msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const getAddr = new CosmosMessages.CosmosGetAddress();\n        getAddr.setAddressNList(msg.addressNList);\n        getAddr.setShowDisplay(msg.showDisplay !== false);\n        const response = yield transport.call(Messages.MessageType.MESSAGETYPE_COSMOSGETADDRESS, getAddr, {\n            msgTimeout: core.LONG_TIMEOUT,\n        });\n        const cosmosAddress = response.proto;\n        return core.mustBeDefined(cosmosAddress.getAddress());\n    });\n}\nexports.cosmosGetAddress = cosmosGetAddress;\n"},"sourceMaps":{"js":{"version":3,"file":"cosmos.js","sourceRoot":"","sources":["../src/cosmos.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"1814e3598c8441d75236e90110794a2a","cacheData":{"env":{}}}