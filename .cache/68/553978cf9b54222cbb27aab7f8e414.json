{"id":"node_modules/bitwise/esm/buffer/not.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bitwise/package.json","includedInParent":true,"mtime":1635871980290},{"name":"buffer","parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bitwise/esm/buffer/not.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/node-libs-browser/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Applies a bitwise NOT to the contents of a buffer. Returns a new buffer.\n *\n * @example\n * bitwise.buffer.not(buffer) => Buffer(NOT buffer)\n *\n * @param {Buffer} buffer input data\n * @return {Buffer} Buffer(NOT buffer)\n */\nvar _default = function _default(buffer) {\n  var result = Buffer.alloc(buffer.length);\n\n  for (var i = 0; i < buffer.length; i++) result[i] = ~buffer[i];\n\n  return result;\n};\n\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":2,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":3,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":4,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":5,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":6,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":7,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":8,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":9,"column":0}},{"generated":{"line":18,"column":15},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":10,"column":16}},{"name":"buffer","generated":{"line":18,"column":33},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":10,"column":26}},{"generated":{"line":18,"column":39},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":10,"column":16}},{"generated":{"line":18,"column":41},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":10,"column":34}},{"generated":{"line":19,"column":0},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":11,"column":4}},{"name":"result","generated":{"line":19,"column":6},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":11,"column":8}},{"generated":{"line":19,"column":12},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":11,"column":14}},{"name":"Buffer","generated":{"line":19,"column":15},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":11,"column":17}},{"generated":{"line":19,"column":21},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":11,"column":23}},{"name":"alloc","generated":{"line":19,"column":22},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":11,"column":24}},{"generated":{"line":19,"column":27},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":11,"column":17}},{"name":"buffer","generated":{"line":19,"column":28},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":11,"column":30}},{"generated":{"line":19,"column":34},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":11,"column":36}},{"name":"length","generated":{"line":19,"column":35},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":11,"column":37}},{"generated":{"line":19,"column":41},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":11,"column":17}},{"generated":{"line":19,"column":42},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":11,"column":4}},{"generated":{"line":21,"column":0},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":12,"column":4}},{"generated":{"line":21,"column":7},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":12,"column":9}},{"name":"i","generated":{"line":21,"column":11},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":12,"column":13}},{"generated":{"line":21,"column":12},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":12,"column":14}},{"generated":{"line":21,"column":15},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":12,"column":17}},{"generated":{"line":21,"column":16},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":12,"column":4}},{"name":"i","generated":{"line":21,"column":18},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":12,"column":20}},{"generated":{"line":21,"column":19},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":12,"column":21}},{"name":"buffer","generated":{"line":21,"column":22},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":12,"column":24}},{"generated":{"line":21,"column":28},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":12,"column":30}},{"name":"length","generated":{"line":21,"column":29},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":12,"column":31}},{"generated":{"line":21,"column":35},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":12,"column":4}},{"name":"i","generated":{"line":21,"column":37},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":12,"column":39}},{"generated":{"line":21,"column":38},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":12,"column":40}},{"generated":{"line":21,"column":40},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":12,"column":4}},{"name":"result","generated":{"line":21,"column":42},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":13,"column":8}},{"generated":{"line":21,"column":48},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":13,"column":14}},{"name":"i","generated":{"line":21,"column":49},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":13,"column":15}},{"generated":{"line":21,"column":50},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":13,"column":14}},{"generated":{"line":21,"column":51},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":13,"column":8}},{"generated":{"line":21,"column":54},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":13,"column":20}},{"name":"buffer","generated":{"line":21,"column":55},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":13,"column":21}},{"generated":{"line":21,"column":61},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":13,"column":27}},{"name":"i","generated":{"line":21,"column":62},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":13,"column":28}},{"generated":{"line":21,"column":63},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":13,"column":27}},{"generated":{"line":21,"column":64},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":13,"column":8}},{"generated":{"line":23,"column":0},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":14,"column":4}},{"name":"result","generated":{"line":23,"column":9},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":14,"column":11}},{"generated":{"line":23,"column":15},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":14,"column":4}},{"generated":{"line":24,"column":0},"source":"node_modules/bitwise/esm/buffer/not.js","original":{"line":15,"column":1}}],"sources":{"node_modules/bitwise/esm/buffer/not.js":"/**\n * Applies a bitwise NOT to the contents of a buffer. Returns a new buffer.\n *\n * @example\n * bitwise.buffer.not(buffer) => Buffer(NOT buffer)\n *\n * @param {Buffer} buffer input data\n * @return {Buffer} Buffer(NOT buffer)\n */\nexport default (function (buffer) {\n    var result = Buffer.alloc(buffer.length);\n    for (var i = 0; i < buffer.length; i++)\n        result[i] = ~buffer[i];\n    return result;\n});\n"},"lineCount":null}},"error":null,"hash":"7363523825a73842015b7500ad7e29a0","cacheData":{"env":{}}}