{"id":"node_modules/bitwise/esm/nibble/write.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bitwise/package.json","includedInParent":true,"mtime":1635871980290}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Returns a Nibble (0-15) which equals the given bits.\n *\n * @example\n * byte.write([1,0,1,0]) => 10\n *\n * @param {Array} nibble 4-bit unsigned integer\n * @return {Number}\n */\nvar _default = function _default(nibble) {\n  if (!Array.isArray(nibble) || nibble.length !== 4) throw new RangeError('invalid array length');\n  var result = 0;\n\n  for (var i = 0; i < 4; i++) if (nibble[3 - i]) result |= 1 << i;\n\n  return result;\n};\n\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":15},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":10,"column":16}},{"name":"nibble","generated":{"line":17,"column":33},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":10,"column":26}},{"generated":{"line":17,"column":39},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":10,"column":16}},{"generated":{"line":17,"column":41},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":10,"column":34}},{"generated":{"line":18,"column":0},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":11,"column":4}},{"generated":{"line":18,"column":6},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":11,"column":8}},{"name":"Array","generated":{"line":18,"column":7},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":11,"column":9}},{"generated":{"line":18,"column":12},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":11,"column":14}},{"name":"isArray","generated":{"line":18,"column":13},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":11,"column":15}},{"generated":{"line":18,"column":20},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":11,"column":9}},{"name":"nibble","generated":{"line":18,"column":21},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":11,"column":23}},{"generated":{"line":18,"column":27},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":11,"column":9}},{"generated":{"line":18,"column":28},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":11,"column":8}},{"name":"nibble","generated":{"line":18,"column":32},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":11,"column":34}},{"generated":{"line":18,"column":38},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":11,"column":40}},{"name":"length","generated":{"line":18,"column":39},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":11,"column":41}},{"generated":{"line":18,"column":45},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":11,"column":34}},{"generated":{"line":18,"column":50},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":11,"column":52}},{"generated":{"line":18,"column":51},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":11,"column":4}},{"generated":{"line":18,"column":53},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":12,"column":8}},{"generated":{"line":18,"column":59},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":12,"column":14}},{"name":"RangeError","generated":{"line":18,"column":63},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":12,"column":18}},{"generated":{"line":18,"column":73},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":12,"column":14}},{"generated":{"line":18,"column":74},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":12,"column":29}},{"generated":{"line":18,"column":96},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":12,"column":14}},{"generated":{"line":18,"column":97},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":12,"column":8}},{"generated":{"line":19,"column":0},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":13,"column":4}},{"name":"result","generated":{"line":19,"column":6},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":13,"column":8}},{"generated":{"line":19,"column":12},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":13,"column":14}},{"generated":{"line":19,"column":15},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":13,"column":17}},{"generated":{"line":19,"column":16},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":13,"column":4}},{"generated":{"line":21,"column":0},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":14,"column":4}},{"generated":{"line":21,"column":7},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":14,"column":9}},{"name":"i","generated":{"line":21,"column":11},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":14,"column":13}},{"generated":{"line":21,"column":12},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":14,"column":14}},{"generated":{"line":21,"column":15},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":14,"column":17}},{"generated":{"line":21,"column":16},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":14,"column":4}},{"name":"i","generated":{"line":21,"column":18},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":14,"column":20}},{"generated":{"line":21,"column":19},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":14,"column":21}},{"generated":{"line":21,"column":22},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":14,"column":24}},{"generated":{"line":21,"column":23},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":14,"column":4}},{"name":"i","generated":{"line":21,"column":25},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":14,"column":27}},{"generated":{"line":21,"column":26},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":14,"column":28}},{"generated":{"line":21,"column":28},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":14,"column":4}},{"generated":{"line":21,"column":30},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":15,"column":8}},{"name":"nibble","generated":{"line":21,"column":34},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":15,"column":12}},{"generated":{"line":21,"column":40},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":15,"column":18}},{"generated":{"line":21,"column":41},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":15,"column":19}},{"name":"i","generated":{"line":21,"column":45},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":15,"column":23}},{"generated":{"line":21,"column":46},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":15,"column":18}},{"generated":{"line":21,"column":47},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":15,"column":8}},{"name":"result","generated":{"line":21,"column":49},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":16,"column":12}},{"generated":{"line":21,"column":55},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":16,"column":18}},{"generated":{"line":21,"column":59},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":16,"column":22}},{"name":"i","generated":{"line":21,"column":64},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":16,"column":27}},{"generated":{"line":21,"column":65},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":16,"column":12}},{"generated":{"line":23,"column":0},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":17,"column":4}},{"name":"result","generated":{"line":23,"column":9},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":17,"column":11}},{"generated":{"line":23,"column":15},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":17,"column":4}},{"generated":{"line":24,"column":0},"source":"node_modules/bitwise/esm/nibble/write.js","original":{"line":18,"column":1}}],"sources":{"node_modules/bitwise/esm/nibble/write.js":"/**\n * Returns a Nibble (0-15) which equals the given bits.\n *\n * @example\n * byte.write([1,0,1,0]) => 10\n *\n * @param {Array} nibble 4-bit unsigned integer\n * @return {Number}\n */\nexport default (function (nibble) {\n    if (!Array.isArray(nibble) || nibble.length !== 4)\n        throw new RangeError('invalid array length');\n    var result = 0;\n    for (var i = 0; i < 4; i++)\n        if (nibble[3 - i])\n            result |= 1 << i;\n    return result;\n});\n"},"lineCount":null}},"error":null,"hash":"c9b7eb0423ea5cfcd8d32ba1a9ac8267","cacheData":{"env":{}}}