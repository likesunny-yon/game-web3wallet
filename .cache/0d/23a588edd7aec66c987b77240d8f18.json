{"id":"node_modules/@keystonehq/bc-ur-registry/dist/Bytes.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/Bytes.js.map","includedInParent":true,"mtime":1635871978905},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/src/Bytes.ts","includedInParent":true,"mtime":1635871978905},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/package.json","includedInParent":true,"mtime":1635871978905},{"name":"./lib","loc":{"line":4,"column":22},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/Bytes.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js"},{"name":"./RegistryItem","loc":{"line":5,"column":31},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/Bytes.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js"},{"name":"./RegistryType","loc":{"line":6,"column":31},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/Bytes.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bytes = void 0;\nconst lib_1 = require(\"./lib\");\nconst RegistryItem_1 = require(\"./RegistryItem\");\nconst RegistryType_1 = require(\"./RegistryType\");\nclass Bytes extends RegistryItem_1.RegistryItem {\n    constructor(bytes) {\n        super();\n        this.bytes = bytes;\n        this.getRegistryType = () => {\n            return RegistryType_1.RegistryTypes.BYTES;\n        };\n        this.getData = () => this.bytes;\n        this.toDataItem = () => {\n            return new lib_1.DataItem(this.bytes);\n        };\n    }\n}\nexports.Bytes = Bytes;\nBytes.fromDataItem = (dataItem) => {\n    const bytes = dataItem.getData();\n    if (!bytes) {\n        throw new Error(`#[ur-registry][Bytes][fn.fromDataItem]: decoded [dataItem][#data] is undefined: ${dataItem}`);\n    }\n    return new Bytes(bytes);\n};\nBytes.fromCBOR = (_cborPayload) => {\n    const dataItem = lib_1.decodeToDataItem(_cborPayload);\n    return Bytes.fromDataItem(dataItem);\n};\n"},"sourceMaps":{"js":{"version":3,"file":"Bytes.js","sourceRoot":"","sources":["../src/Bytes.ts"],"names":[],"mappings":";;;AAAA,+BAAmD;AACnD,iDAA8C;AAC9C,iDAA+C;AAE/C,MAAa,KAAM,SAAQ,2BAAY;IAKrC,YAAoB,KAAa;QAC/B,KAAK,EAAE,CAAC;QADU,UAAK,GAAL,KAAK,CAAQ;QAJjC,oBAAe,GAAG,GAAG,EAAE;YACrB,OAAO,4BAAa,CAAC,KAAK,CAAC;QAC7B,CAAC,CAAC;QAMF,YAAO,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;QAE3B,eAAU,GAAG,GAAG,EAAE;YAChB,OAAO,IAAI,cAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClC,CAAC,CAAC;IANF,CAAC;;AAPH,sBA6BC;AAde,kBAAY,GAAG,CAAC,QAAkB,EAAE,EAAE;IAClD,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC;IACjC,IAAI,CAAC,KAAK,EAAE;QACV,MAAM,IAAI,KAAK,CACb,mFAAmF,QAAQ,EAAE,CAC9F,CAAC;KACH;IACD,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;AAC1B,CAAC,CAAC;AAEY,cAAQ,GAAG,CAAC,YAAoB,EAAE,EAAE;IAChD,MAAM,QAAQ,GAAG,sBAAgB,CAAC,YAAY,CAAC,CAAC;IAChD,OAAO,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AACtC,CAAC,CAAC","sourcesContent":["import { decodeToDataItem, DataItem } from './lib';\nimport { RegistryItem } from './RegistryItem';\nimport { RegistryTypes } from './RegistryType';\n\nexport class Bytes extends RegistryItem {\n  getRegistryType = () => {\n    return RegistryTypes.BYTES;\n  };\n\n  constructor(private bytes: Buffer) {\n    super();\n  }\n\n  getData = () => this.bytes;\n\n  toDataItem = () => {\n    return new DataItem(this.bytes);\n  };\n\n  public static fromDataItem = (dataItem: DataItem) => {\n    const bytes = dataItem.getData();\n    if (!bytes) {\n      throw new Error(\n        `#[ur-registry][Bytes][fn.fromDataItem]: decoded [dataItem][#data] is undefined: ${dataItem}`,\n      );\n    }\n    return new Bytes(bytes);\n  };\n\n  public static fromCBOR = (_cborPayload: Buffer) => {\n    const dataItem = decodeToDataItem(_cborPayload);\n    return Bytes.fromDataItem(dataItem);\n  };\n}\n"]}},"error":null,"hash":"d695026f24908fd6cd25b4baf286ad9d","cacheData":{"env":{}}}