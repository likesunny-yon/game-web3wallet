{"id":"node_modules/trezor-connect/lib/constants/popup.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/trezor-connect/package.json","includedInParent":true,"mtime":1635871963211}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\nexports.CLOSE_WINDOW = exports.CANCEL_POPUP_REQUEST = exports.CLOSED = exports.HANDSHAKE = exports.EXTENSION_USB_PERMISSIONS = exports.ERROR = exports.INIT = exports.LOADED = exports.BOOTSTRAP = void 0;\n// Message called from popup.html inline script before \"window.onload\" event. This is first message from popup to window.opener.\nvar BOOTSTRAP = 'popup-bootstrap'; // Message from popup.js to window.opener, called after \"window.onload\" event. This is second message from popup to window.opener.\n\nexports.BOOTSTRAP = BOOTSTRAP;\nvar LOADED = 'popup-loaded'; // Message from window.opener to popup.js. Send settings to popup. This is first message from window.opener to popup.\n\nexports.LOADED = LOADED;\nvar INIT = 'popup-init'; // Error message from popup to window.opener. Could be thrown during popup initialization process (POPUP.INIT)\n\nexports.INIT = INIT;\nvar ERROR = 'popup-error'; // Message to webextensions, opens \"trezor-usb-permission.html\" within webextension\n\nexports.ERROR = ERROR;\nvar EXTENSION_USB_PERMISSIONS = 'open-usb-permissions'; // Message called from both [popup > iframe] then [iframe > popup] in this exact order.\n// Firstly popup call iframe to resolve popup promise in Core\n// Then iframe reacts to POPUP.HANDSHAKE message and sends ConnectSettings, transport information and requested method details back to popup\n\nexports.EXTENSION_USB_PERMISSIONS = EXTENSION_USB_PERMISSIONS;\nvar HANDSHAKE = 'popup-handshake'; // Event emitted from PopupManager at the end of popup closing process.\n// Sent from popup thru window.opener to an iframe because message channel between popup and iframe is no longer available\n\nexports.HANDSHAKE = HANDSHAKE;\nvar CLOSED = 'popup-closed'; // Message called from iframe to popup, it means that popup will not be needed (example: Blockchain methods are not using popup at all)\n// This will close active popup window and/or clear opening process in PopupManager (maybe popup wasn't opened yet)\n\nexports.CLOSED = CLOSED;\nvar CANCEL_POPUP_REQUEST = 'ui-cancel-popup-request'; // Message called from inline element in popup.html (window.closeWindow), this is used only with webextensions to properly handle popup close event\n\nexports.CANCEL_POPUP_REQUEST = CANCEL_POPUP_REQUEST;\nvar CLOSE_WINDOW = 'window.close';\nexports.CLOSE_WINDOW = CLOSE_WINDOW;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/trezor-connect/lib/constants/popup.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}}],"sources":{"node_modules/trezor-connect/lib/constants/popup.js":"\"use strict\";\n\nexports.__esModule = true;\nexports.CLOSE_WINDOW = exports.CANCEL_POPUP_REQUEST = exports.CLOSED = exports.HANDSHAKE = exports.EXTENSION_USB_PERMISSIONS = exports.ERROR = exports.INIT = exports.LOADED = exports.BOOTSTRAP = void 0;\n// Message called from popup.html inline script before \"window.onload\" event. This is first message from popup to window.opener.\nvar BOOTSTRAP = 'popup-bootstrap'; // Message from popup.js to window.opener, called after \"window.onload\" event. This is second message from popup to window.opener.\n\nexports.BOOTSTRAP = BOOTSTRAP;\nvar LOADED = 'popup-loaded'; // Message from window.opener to popup.js. Send settings to popup. This is first message from window.opener to popup.\n\nexports.LOADED = LOADED;\nvar INIT = 'popup-init'; // Error message from popup to window.opener. Could be thrown during popup initialization process (POPUP.INIT)\n\nexports.INIT = INIT;\nvar ERROR = 'popup-error'; // Message to webextensions, opens \"trezor-usb-permission.html\" within webextension\n\nexports.ERROR = ERROR;\nvar EXTENSION_USB_PERMISSIONS = 'open-usb-permissions'; // Message called from both [popup > iframe] then [iframe > popup] in this exact order.\n// Firstly popup call iframe to resolve popup promise in Core\n// Then iframe reacts to POPUP.HANDSHAKE message and sends ConnectSettings, transport information and requested method details back to popup\n\nexports.EXTENSION_USB_PERMISSIONS = EXTENSION_USB_PERMISSIONS;\nvar HANDSHAKE = 'popup-handshake'; // Event emitted from PopupManager at the end of popup closing process.\n// Sent from popup thru window.opener to an iframe because message channel between popup and iframe is no longer available\n\nexports.HANDSHAKE = HANDSHAKE;\nvar CLOSED = 'popup-closed'; // Message called from iframe to popup, it means that popup will not be needed (example: Blockchain methods are not using popup at all)\n// This will close active popup window and/or clear opening process in PopupManager (maybe popup wasn't opened yet)\n\nexports.CLOSED = CLOSED;\nvar CANCEL_POPUP_REQUEST = 'ui-cancel-popup-request'; // Message called from inline element in popup.html (window.closeWindow), this is used only with webextensions to properly handle popup close event\n\nexports.CANCEL_POPUP_REQUEST = CANCEL_POPUP_REQUEST;\nvar CLOSE_WINDOW = 'window.close';\nexports.CLOSE_WINDOW = CLOSE_WINDOW;"},"lineCount":35}},"error":null,"hash":"f5b56bba345230364378783a4f435f75","cacheData":{"env":{}}}