{"id":"node_modules/@shapeshiftoss/hdwallet-core/dist/bitcoin.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-core/dist/bitcoin.js.map","includedInParent":true,"mtime":1637149977861},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-core/package.json","includedInParent":true,"mtime":1637149977861},{"name":"type-assertions","loc":{"line":23,"column":32},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-core/dist/bitcoin.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/type-assertions/lib/index.js"},{"name":"./utils","loc":{"line":24,"column":24},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-core/dist/bitcoin.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-core/dist/utils.js"}],"generated":{"js":"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.segwitNativeAccount = exports.segwitAccount = exports.legacyAccount = exports.describeUTXOPath = exports.unknownUTXOPath = exports.BTCOutputAddressType = exports.BTCOutputScriptType = exports.BTCInputScriptType = void 0;\nconst ta = __importStar(require(\"type-assertions\"));\nconst utils_1 = require(\"./utils\");\nta.assert();\n// Bech32 info https://en.bitcoin.it/wiki/BIP_0173\nvar BTCInputScriptType;\n(function (BTCInputScriptType) {\n    BTCInputScriptType[\"CashAddr\"] = \"cashaddr\";\n    BTCInputScriptType[\"Bech32\"] = \"bech32\";\n    BTCInputScriptType[\"SpendAddress\"] = \"p2pkh\";\n    BTCInputScriptType[\"SpendMultisig\"] = \"p2sh\";\n    BTCInputScriptType[\"External\"] = \"external\";\n    BTCInputScriptType[\"SpendWitness\"] = \"p2wpkh\";\n    BTCInputScriptType[\"SpendP2SHWitness\"] = \"p2sh-p2wpkh\";\n})(BTCInputScriptType = exports.BTCInputScriptType || (exports.BTCInputScriptType = {}));\nvar BTCOutputScriptType;\n(function (BTCOutputScriptType) {\n    BTCOutputScriptType[\"PayToAddress\"] = \"p2pkh\";\n    BTCOutputScriptType[\"PayToMultisig\"] = \"p2sh\";\n    BTCOutputScriptType[\"Bech32\"] = \"bech32\";\n    BTCOutputScriptType[\"PayToWitness\"] = \"p2wpkh\";\n    BTCOutputScriptType[\"PayToP2SHWitness\"] = \"p2sh-p2wpkh\";\n})(BTCOutputScriptType = exports.BTCOutputScriptType || (exports.BTCOutputScriptType = {}));\nvar BTCOutputAddressType;\n(function (BTCOutputAddressType) {\n    BTCOutputAddressType[\"Spend\"] = \"spend\";\n    BTCOutputAddressType[\"Transfer\"] = \"transfer\";\n    BTCOutputAddressType[\"Change\"] = \"change\";\n    BTCOutputAddressType[\"Exchange\"] = \"exchange\";\n})(BTCOutputAddressType = exports.BTCOutputAddressType || (exports.BTCOutputAddressType = {}));\nfunction unknownUTXOPath(path, coin, scriptType) {\n    return {\n        verbose: utils_1.addressNListToBIP32(path),\n        coin,\n        scriptType,\n        isKnown: false,\n    };\n}\nexports.unknownUTXOPath = unknownUTXOPath;\nfunction describeUTXOPath(path, coin, scriptType) {\n    const unknown = unknownUTXOPath(path, coin, scriptType);\n    if (path.length !== 3 && path.length !== 5)\n        return unknown;\n    if ((path[0] & 0x80000000) >>> 0 !== 0x80000000)\n        return unknown;\n    let purpose = path[0] & 0x7fffffff;\n    if (![44, 49, 84].includes(purpose))\n        return unknown;\n    if (purpose === 44 && scriptType !== BTCInputScriptType.SpendAddress)\n        return unknown;\n    if (purpose === 49 && scriptType !== BTCInputScriptType.SpendP2SHWitness)\n        return unknown;\n    let wholeAccount = path.length === 3;\n    let script = {\n        [BTCInputScriptType.SpendAddress]: [\"Legacy\"],\n        [BTCInputScriptType.SpendP2SHWitness]: [],\n        [BTCInputScriptType.SpendWitness]: [\"Segwit\"],\n        [BTCInputScriptType.Bech32]: [\"Segwit Native\"],\n    }[scriptType];\n    let isPrefork = false;\n    const slip44 = utils_1.slip44ByCoin(coin);\n    if (slip44 === undefined)\n        return unknown;\n    if (path[1] !== 0x80000000 + slip44) {\n        switch (coin) {\n            case \"BitcoinCash\":\n            case \"BitcoinGold\": {\n                if (path[1] === 0x80000000 + utils_1.slip44ByCoin(\"Bitcoin\")) {\n                    isPrefork = true;\n                    break;\n                }\n                return unknown;\n            }\n            case \"BitcoinSV\": {\n                if (path[1] === 0x80000000 + utils_1.slip44ByCoin(\"Bitcoin\") || path[1] === 0x80000000 + utils_1.slip44ByCoin(\"BitcoinCash\")) {\n                    isPrefork = true;\n                    break;\n                }\n                return unknown;\n            }\n            default:\n                return unknown;\n        }\n    }\n    let attributes = isPrefork ? [\"Prefork\"] : [];\n    switch (coin) {\n        case \"Bitcoin\":\n        case \"Litecoin\":\n        case \"BitcoinGold\":\n        case \"Testnet\": {\n            if (script)\n                attributes = attributes.concat(script);\n            break;\n        }\n        default:\n            break;\n    }\n    let attr = attributes.length ? ` (${attributes.join(\", \")})` : \"\";\n    let accountIdx = path[2] & 0x7fffffff;\n    if (wholeAccount) {\n        return {\n            coin,\n            verbose: `${coin} Account #${accountIdx}${attr}`,\n            accountIdx,\n            wholeAccount: true,\n            isKnown: true,\n            scriptType,\n            isPrefork,\n        };\n    }\n    else {\n        let change = path[3] === 1 ? \"Change \" : \"\";\n        let addressIdx = path[4];\n        return {\n            coin,\n            verbose: `${coin} Account #${accountIdx}, ${change}Address #${addressIdx}${attr}`,\n            accountIdx,\n            addressIdx,\n            wholeAccount: false,\n            isKnown: true,\n            isChange: path[3] === 1,\n            scriptType,\n            isPrefork,\n        };\n    }\n}\nexports.describeUTXOPath = describeUTXOPath;\nfunction legacyAccount(coin, slip44, accountIdx) {\n    return {\n        coin,\n        scriptType: BTCInputScriptType.SpendAddress,\n        addressNList: [0x80000000 + 44, 0x80000000 + slip44, 0x80000000 + accountIdx],\n    };\n}\nexports.legacyAccount = legacyAccount;\nfunction segwitAccount(coin, slip44, accountIdx) {\n    return {\n        coin,\n        scriptType: BTCInputScriptType.SpendP2SHWitness,\n        addressNList: [0x80000000 + 49, 0x80000000 + slip44, 0x80000000 + accountIdx],\n    };\n}\nexports.segwitAccount = segwitAccount;\nfunction segwitNativeAccount(coin, slip44, accountIdx) {\n    return {\n        coin,\n        scriptType: BTCInputScriptType.SpendWitness,\n        addressNList: [0x80000000 + 84, 0x80000000 + slip44, 0x80000000 + accountIdx],\n    };\n}\nexports.segwitNativeAccount = segwitNativeAccount;\n"},"sourceMaps":{"js":{"version":3,"file":"bitcoin.js","sourceRoot":"","sources":["../src/bitcoin.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"36d7b50828e6b454da96ad49ae3d4055","cacheData":{"env":{}}}