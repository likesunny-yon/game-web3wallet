{"id":"node_modules/bitwise/esm/bits/not.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bitwise/package.json","includedInParent":true,"mtime":1635871980290}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Flips all given bits and returns the flipped bits.\n *\n * @example\n * not([1,0,1,1,0,1]) => [0,1,0,0,1,0]\n *\n * @param {Array} bits input data\n * @return {Array} [NOT bits]\n */\nvar _default = function _default(bits) {\n  var result = [];\n\n  for (var i = 0; i < bits.length; i++) result[i] = bits[i] ^ 1;\n\n  return result;\n};\n\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":15},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":10,"column":16}},{"name":"bits","generated":{"line":17,"column":33},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":10,"column":26}},{"generated":{"line":17,"column":37},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":10,"column":16}},{"generated":{"line":17,"column":39},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":10,"column":32}},{"generated":{"line":18,"column":0},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":11,"column":4}},{"name":"result","generated":{"line":18,"column":6},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":11,"column":8}},{"generated":{"line":18,"column":12},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":11,"column":14}},{"generated":{"line":18,"column":15},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":11,"column":17}},{"generated":{"line":18,"column":17},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":11,"column":4}},{"generated":{"line":20,"column":0},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":12,"column":4}},{"generated":{"line":20,"column":7},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":12,"column":9}},{"name":"i","generated":{"line":20,"column":11},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":12,"column":13}},{"generated":{"line":20,"column":12},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":12,"column":14}},{"generated":{"line":20,"column":15},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":12,"column":17}},{"generated":{"line":20,"column":16},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":12,"column":4}},{"name":"i","generated":{"line":20,"column":18},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":12,"column":20}},{"generated":{"line":20,"column":19},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":12,"column":21}},{"name":"bits","generated":{"line":20,"column":22},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":12,"column":24}},{"generated":{"line":20,"column":26},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":12,"column":28}},{"name":"length","generated":{"line":20,"column":27},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":12,"column":29}},{"generated":{"line":20,"column":33},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":12,"column":4}},{"name":"i","generated":{"line":20,"column":35},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":12,"column":37}},{"generated":{"line":20,"column":36},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":12,"column":38}},{"generated":{"line":20,"column":38},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":12,"column":4}},{"name":"result","generated":{"line":20,"column":40},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":13,"column":8}},{"generated":{"line":20,"column":46},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":13,"column":14}},{"name":"i","generated":{"line":20,"column":47},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":13,"column":15}},{"generated":{"line":20,"column":48},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":13,"column":14}},{"generated":{"line":20,"column":49},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":13,"column":8}},{"name":"bits","generated":{"line":20,"column":52},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":13,"column":21}},{"generated":{"line":20,"column":56},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":13,"column":25}},{"name":"i","generated":{"line":20,"column":57},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":13,"column":26}},{"generated":{"line":20,"column":58},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":13,"column":25}},{"generated":{"line":20,"column":59},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":13,"column":21}},{"generated":{"line":20,"column":62},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":13,"column":31}},{"generated":{"line":20,"column":63},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":13,"column":8}},{"generated":{"line":22,"column":0},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":14,"column":4}},{"name":"result","generated":{"line":22,"column":9},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":14,"column":11}},{"generated":{"line":22,"column":15},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":14,"column":4}},{"generated":{"line":23,"column":0},"source":"node_modules/bitwise/esm/bits/not.js","original":{"line":15,"column":1}}],"sources":{"node_modules/bitwise/esm/bits/not.js":"/**\n * Flips all given bits and returns the flipped bits.\n *\n * @example\n * not([1,0,1,1,0,1]) => [0,1,0,0,1,0]\n *\n * @param {Array} bits input data\n * @return {Array} [NOT bits]\n */\nexport default (function (bits) {\n    var result = [];\n    for (var i = 0; i < bits.length; i++)\n        result[i] = (bits[i] ^ 1);\n    return result;\n});\n"},"lineCount":null}},"error":null,"hash":"6f4f2608d2d2b0f69fefa3a406979479","cacheData":{"env":{}}}