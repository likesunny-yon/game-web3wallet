{"id":"node_modules/@shapeshiftoss/hdwallet-core/dist/ethereum.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-core/dist/ethereum.js.map","includedInParent":true,"mtime":1637149977861},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-core/package.json","includedInParent":true,"mtime":1637149977861},{"name":"./utils","loc":{"line":4,"column":24},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-core/dist/ethereum.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-core/dist/utils.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.describeETHPath = exports.ETHTransactionType = void 0;\nconst utils_1 = require(\"./utils\");\nvar ETHTransactionType;\n(function (ETHTransactionType) {\n    ETHTransactionType[ETHTransactionType[\"ETH_TX_TYPE_LEGACY\"] = 0] = \"ETH_TX_TYPE_LEGACY\";\n    ETHTransactionType[ETHTransactionType[\"ETH_TX_TYPE_EIP_2930\"] = 1] = \"ETH_TX_TYPE_EIP_2930\";\n    ETHTransactionType[ETHTransactionType[\"ETH_TX_TYPE_EIP_1559\"] = 2] = \"ETH_TX_TYPE_EIP_1559\";\n})(ETHTransactionType = exports.ETHTransactionType || (exports.ETHTransactionType = {}));\nfunction describeETHPath(path) {\n    let pathStr = utils_1.addressNListToBIP32(path);\n    let unknown = {\n        verbose: pathStr,\n        coin: \"Ethereum\",\n        isKnown: false,\n    };\n    if (path.length !== 5)\n        return unknown;\n    if (path[0] !== 0x80000000 + 44)\n        return unknown;\n    if (path[1] !== 0x80000000 + utils_1.slip44ByCoin(\"Ethereum\"))\n        return unknown;\n    if ((path[2] & 0x80000000) >>> 0 !== 0x80000000)\n        return unknown;\n    if (path[3] !== 0)\n        return unknown;\n    if (path[4] !== 0)\n        return unknown;\n    let index = path[2] & 0x7fffffff;\n    return {\n        verbose: `Ethereum Account #${index}`,\n        accountIdx: index,\n        wholeAccount: true,\n        coin: \"Ethereum\",\n        isKnown: true,\n        isPrefork: false,\n    };\n}\nexports.describeETHPath = describeETHPath;\n"},"sourceMaps":{"js":{"version":3,"file":"ethereum.js","sourceRoot":"","sources":["../src/ethereum.ts"],"names":[],"mappings":";;;AAAA,mCAA4D;AAG5D,IAAY,kBAIX;AAJD,WAAY,kBAAkB;IAC5B,uFAAsB,CAAA;IACtB,2FAAwB,CAAA;IACxB,2FAAwB,CAAA;AAC1B,CAAC,EAJW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAI7B;AAwID,SAAgB,eAAe,CAAC,IAAe;IAC7C,IAAI,OAAO,GAAG,2BAAmB,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,OAAO,GAAoB;QAC7B,OAAO,EAAE,OAAO;QAChB,IAAI,EAAE,UAAU;QAChB,OAAO,EAAE,KAAK;KACf,CAAC;IAEF,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,OAAO,CAAC;IAEtC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,UAAU,GAAG,EAAE;QAAE,OAAO,OAAO,CAAC;IAEhD,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,UAAU,GAAG,oBAAY,CAAC,UAAU,CAAC;QAAE,OAAO,OAAO,CAAC;IAEtE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,UAAU;QAAE,OAAO,OAAO,CAAC;IAEhE,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAAE,OAAO,OAAO,CAAC;IAElC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAAE,OAAO,OAAO,CAAC;IAElC,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;IACjC,OAAO;QACL,OAAO,EAAE,qBAAqB,KAAK,EAAE;QACrC,UAAU,EAAE,KAAK;QACjB,YAAY,EAAE,IAAI;QAClB,IAAI,EAAE,UAAU;QAChB,OAAO,EAAE,IAAI;QACb,SAAS,EAAE,KAAK;KACjB,CAAC;AACJ,CAAC;AA7BD,0CA6BC","sourcesContent":[null]}},"error":null,"hash":"c0e1cd135a9434f321a33a90a09b4d08","cacheData":{"env":{}}}