{"id":"node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js.map","includedInParent":true,"mtime":1635871978905},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/src/RegistryType.ts","includedInParent":true,"mtime":1635871978905},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keystonehq/bc-ur-registry/package.json","includedInParent":true,"mtime":1635871978905}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RegistryTypes = exports.RegistryType = void 0;\nclass RegistryType {\n    constructor(type, tag) {\n        this.type = type;\n        this.tag = tag;\n        this.getTag = () => this.tag;\n        this.getType = () => this.type;\n    }\n}\nexports.RegistryType = RegistryType;\nexports.RegistryTypes = {\n    UUID: new RegistryType('uuid', 37),\n    BYTES: new RegistryType('bytes', undefined),\n    CRYPTO_HDKEY: new RegistryType('crypto-hdkey', 303),\n    CRYPTO_KEYPATH: new RegistryType('crypto-keypath', 304),\n    CRYPTO_COIN_INFO: new RegistryType('crypto-coin-info', 305),\n    CRYPTO_ECKEY: new RegistryType('crypto-eckey', 306),\n    CRYPTO_OUTPUT: new RegistryType('crypto-output', 308),\n    CRYPTO_PSBT: new RegistryType('crypto-psbt', 310),\n    CRYPTO_ACCOUNT: new RegistryType('crypto-account', 311),\n};\n"},"sourceMaps":{"js":{"version":3,"file":"RegistryType.js","sourceRoot":"","sources":["../src/RegistryType.ts"],"names":[],"mappings":";;;AAGA,MAAa,YAAY;IACvB,YAAoB,IAAY,EAAU,GAAY;QAAlC,SAAI,GAAJ,IAAI,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAS;QACtD,WAAM,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;QACxB,YAAO,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;IAF+B,CAAC;CAG3D;AAJD,oCAIC;AAEY,QAAA,aAAa,GAAG;IAC3B,IAAI,EAAE,IAAI,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC;IAClC,KAAK,EAAE,IAAI,YAAY,CAAC,OAAO,EAAE,SAAS,CAAC;IAC3C,YAAY,EAAE,IAAI,YAAY,CAAC,cAAc,EAAE,GAAG,CAAC;IACnD,cAAc,EAAE,IAAI,YAAY,CAAC,gBAAgB,EAAE,GAAG,CAAC;IACvD,gBAAgB,EAAE,IAAI,YAAY,CAAC,kBAAkB,EAAE,GAAG,CAAC;IAC3D,YAAY,EAAE,IAAI,YAAY,CAAC,cAAc,EAAE,GAAG,CAAC;IACnD,aAAa,EAAE,IAAI,YAAY,CAAC,eAAe,EAAE,GAAG,CAAC;IACrD,WAAW,EAAE,IAAI,YAAY,CAAC,aAAa,EAAE,GAAG,CAAC;IACjD,cAAc,EAAE,IAAI,YAAY,CAAC,gBAAgB,EAAE,GAAG,CAAC;CACxD,CAAC","sourcesContent":["// cbor registry types: https://github.com/BlockchainCommons/Research/blob/master/papers/bcr-2020-006-urtypes.md\n// Map<name, tag>\n\nexport class RegistryType {\n  constructor(private type: string, private tag?: number) {}\n  getTag = () => this.tag;\n  getType = () => this.type;\n}\n\nexport const RegistryTypes = {\n  UUID: new RegistryType('uuid', 37),\n  BYTES: new RegistryType('bytes', undefined),\n  CRYPTO_HDKEY: new RegistryType('crypto-hdkey', 303),\n  CRYPTO_KEYPATH: new RegistryType('crypto-keypath', 304),\n  CRYPTO_COIN_INFO: new RegistryType('crypto-coin-info', 305),\n  CRYPTO_ECKEY: new RegistryType('crypto-eckey', 306),\n  CRYPTO_OUTPUT: new RegistryType('crypto-output', 308),\n  CRYPTO_PSBT: new RegistryType('crypto-psbt', 310),\n  CRYPTO_ACCOUNT: new RegistryType('crypto-account', 311),\n};\n"]}},"error":null,"hash":"5e4273bd2760aaa638e1a02c601ef03b","cacheData":{"env":{}}}