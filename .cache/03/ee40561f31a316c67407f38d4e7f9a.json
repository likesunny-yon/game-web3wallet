{"id":"node_modules/eth-provider/browser.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-provider/package.json","includedInParent":true,"mtime":1632832203345},{"name":"./resolve","loc":{"line":1,"column":24},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-provider/browser.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-provider/resolve/index.js"},{"name":"./provider","loc":{"line":2,"column":25},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-provider/browser.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-provider/provider/index.js"},{"name":"./presets","loc":{"line":3,"column":24},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-provider/browser.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-provider/presets/index.js"},{"name":"./connections/injected","loc":{"line":15,"column":41},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-provider/browser.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-provider/connections/injected.js"},{"name":"./connections/unavailable","loc":{"line":16,"column":15},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-provider/browser.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-provider/connections/unavailable.js"},{"name":"./connections/ws","loc":{"line":17,"column":14},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-provider/browser.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-provider/connections/ws.js"},{"name":"./connections/http","loc":{"line":18,"column":16},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-provider/browser.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eth-provider/connections/http.js"}],"generated":{"js":"const resolve = require('./resolve')\nconst provider = require('./provider')\nconst presets = require('./presets')\n\nconst injected = {\n  ethereum: typeof window !== 'undefined' && typeof window.ethereum !== 'undefined' ? window.ethereum : null,\n  web3: typeof window !== 'undefined' && typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null\n}\nconst ws = typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined' ? window.WebSocket : null\nconst XHR = typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined' ? window.XMLHttpRequest : null\n\nif (injected.ethereum) injected.ethereum.__isProvider = true\n\nconst connections = {\n  injected: injected.ethereum || require('./connections/injected')(injected.web3),\n  ipc: require('./connections/unavailable')('IPC connections are unavliable in the browser'),\n  ws: require('./connections/ws')(ws),\n  http: require('./connections/http')(XHR)\n}\n\nmodule.exports = (targets, options) => {\n  if (targets && !Array.isArray(targets) && typeof targets === 'object' && !options) {\n    options = targets\n    targets = undefined\n  }\n  if (!targets) targets = ['injected', 'frame']\n  if (!options) options = {}\n\n  targets = [].concat(targets)\n\n  targets.forEach(t => {\n    if (t.startsWith('alchemy') && !options.alchemyId) throw new Error('Alchemy was included as a connection target but no Alchemy project ID was passed in options e.g. { alchemyId: \\'123abc\\' }')\n    if (t.startsWith('infura') && !options.infuraId) throw new Error('Infura was included as a connection target but no Infura project ID was passed in options e.g. { infuraId: \\'123abc\\' }')\n  })\n\n  const sets = presets(options)\n\n  return provider(connections, resolve(targets, sets), options)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/eth-provider/browser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/eth-provider/browser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}}],"sources":{"node_modules/eth-provider/browser.js":"const resolve = require('./resolve')\nconst provider = require('./provider')\nconst presets = require('./presets')\n\nconst injected = {\n  ethereum: typeof window !== 'undefined' && typeof window.ethereum !== 'undefined' ? window.ethereum : null,\n  web3: typeof window !== 'undefined' && typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null\n}\nconst ws = typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined' ? window.WebSocket : null\nconst XHR = typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined' ? window.XMLHttpRequest : null\n\nif (injected.ethereum) injected.ethereum.__isProvider = true\n\nconst connections = {\n  injected: injected.ethereum || require('./connections/injected')(injected.web3),\n  ipc: require('./connections/unavailable')('IPC connections are unavliable in the browser'),\n  ws: require('./connections/ws')(ws),\n  http: require('./connections/http')(XHR)\n}\n\nmodule.exports = (targets, options) => {\n  if (targets && !Array.isArray(targets) && typeof targets === 'object' && !options) {\n    options = targets\n    targets = undefined\n  }\n  if (!targets) targets = ['injected', 'frame']\n  if (!options) options = {}\n\n  targets = [].concat(targets)\n\n  targets.forEach(t => {\n    if (t.startsWith('alchemy') && !options.alchemyId) throw new Error('Alchemy was included as a connection target but no Alchemy project ID was passed in options e.g. { alchemyId: \\'123abc\\' }')\n    if (t.startsWith('infura') && !options.infuraId) throw new Error('Infura was included as a connection target but no Infura project ID was passed in options e.g. { infuraId: \\'123abc\\' }')\n  })\n\n  const sets = presets(options)\n\n  return provider(connections, resolve(targets, sets), options)\n}\n"},"lineCount":40}},"error":null,"hash":"b704ab415ff102045843fda4e111b772","cacheData":{"env":{}}}