{"id":"node_modules/eip55/index.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eip55/package.json","includedInParent":true,"mtime":1632832250593},{"name":"keccak","loc":{"line":1,"column":31},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eip55/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/eip55/node_modules/keccak/js.js"}],"generated":{"js":"var createKeccakHash = require('keccak')\n\nfunction encodeInternal (address, parsed, chainId) {\n  checkChainId(chainId)\n  parsed = parsed === undefined ? getHex(address) : parsed\n  if (parsed === null) throw new TypeError('Bad address')\n\n  var addressHex = parsed[1].toLowerCase()\n  var forHash = chainId !== undefined\n    ? chainId.toString(10) + '0x' + addressHex\n    : addressHex\n  var checksum = createKeccakHash('keccak256')\n    .update(forHash)\n    .digest()\n\n  var ret = '0x'\n  for (var i = 0; i < 20; ++i) {\n    var byte = checksum[i]\n    var ha = addressHex.charAt(i * 2)\n    var hb = addressHex.charAt(i * 2 + 1)\n    ret += (byte & 0xf0) >= 0x80 ? ha.toUpperCase() : ha\n    ret += (byte & 0x0f) >= 0x08 ? hb.toUpperCase() : hb\n  }\n\n  return ret\n}\n\nfunction encode (address, chainId) {\n  return encodeInternal(address, undefined, chainId)\n}\n\nfunction verify (address, allowOneCase, chainId) {\n  checkChainId(chainId)\n  var parsed = getHex(address)\n  if (parsed !== null) {\n    if (address.indexOf('0x') !== 0) return false\n    if (allowOneCase && isOneCase(parsed[1])) return true\n    return encodeInternal(address, parsed, chainId) === address\n  }\n  return false\n}\n\nfunction checkChainId (n) {\n  if (n !== undefined && !isPositiveInteger(n)) {\n    throw new TypeError('Bad chainId')\n  }\n}\n\nfunction isPositiveInteger (n) {\n  return (typeof n === 'number' || n instanceof Number) &&\n    n > 0 &&\n    n + 0 === Math.floor(n)\n}\n\nfunction isOneCase (s) {\n  return s === s.toLowerCase() || s === s.toUpperCase()\n}\n\nfunction isString (data) {\n  return typeof data === 'string' || data instanceof String\n}\n\nfunction getHex (data) {\n  return isString(data) ? data.match(/^(?:0x)?([0-9a-fA-F]{40})$/) : null\n}\n\nmodule.exports = { encode, verify }\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/eip55/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/eip55/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}}],"sources":{"node_modules/eip55/index.js":"var createKeccakHash = require('keccak')\n\nfunction encodeInternal (address, parsed, chainId) {\n  checkChainId(chainId)\n  parsed = parsed === undefined ? getHex(address) : parsed\n  if (parsed === null) throw new TypeError('Bad address')\n\n  var addressHex = parsed[1].toLowerCase()\n  var forHash = chainId !== undefined\n    ? chainId.toString(10) + '0x' + addressHex\n    : addressHex\n  var checksum = createKeccakHash('keccak256')\n    .update(forHash)\n    .digest()\n\n  var ret = '0x'\n  for (var i = 0; i < 20; ++i) {\n    var byte = checksum[i]\n    var ha = addressHex.charAt(i * 2)\n    var hb = addressHex.charAt(i * 2 + 1)\n    ret += (byte & 0xf0) >= 0x80 ? ha.toUpperCase() : ha\n    ret += (byte & 0x0f) >= 0x08 ? hb.toUpperCase() : hb\n  }\n\n  return ret\n}\n\nfunction encode (address, chainId) {\n  return encodeInternal(address, undefined, chainId)\n}\n\nfunction verify (address, allowOneCase, chainId) {\n  checkChainId(chainId)\n  var parsed = getHex(address)\n  if (parsed !== null) {\n    if (address.indexOf('0x') !== 0) return false\n    if (allowOneCase && isOneCase(parsed[1])) return true\n    return encodeInternal(address, parsed, chainId) === address\n  }\n  return false\n}\n\nfunction checkChainId (n) {\n  if (n !== undefined && !isPositiveInteger(n)) {\n    throw new TypeError('Bad chainId')\n  }\n}\n\nfunction isPositiveInteger (n) {\n  return (typeof n === 'number' || n instanceof Number) &&\n    n > 0 &&\n    n + 0 === Math.floor(n)\n}\n\nfunction isOneCase (s) {\n  return s === s.toLowerCase() || s === s.toUpperCase()\n}\n\nfunction isString (data) {\n  return typeof data === 'string' || data instanceof String\n}\n\nfunction getHex (data) {\n  return isString(data) ? data.match(/^(?:0x)?([0-9a-fA-F]{40})$/) : null\n}\n\nmodule.exports = { encode, verify }\n"},"lineCount":68}},"error":null,"hash":"a480997cf542fca6c6dbccf2d8a899fc","cacheData":{"env":{}}}