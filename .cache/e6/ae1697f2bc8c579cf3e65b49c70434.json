{"id":"node_modules/@shapeshiftoss/hdwallet-keepkey/dist/keepkey.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/keepkey.js.map","includedInParent":true,"mtime":1637149977864},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/package.json","includedInParent":true,"mtime":1637149977864},{"name":"@shapeshiftoss/hdwallet-core","loc":{"line":35,"column":34},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/keepkey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-core/dist/index.js"},{"name":"@keepkey/device-protocol/lib/messages_pb","loc":{"line":36,"column":38},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/keepkey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keepkey/device-protocol/lib/messages_pb.js"},{"name":"@keepkey/device-protocol/lib/types_pb","loc":{"line":37,"column":35},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/keepkey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@keepkey/device-protocol/lib/types_pb.js"},{"name":"lodash","loc":{"line":38,"column":41},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/keepkey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/lodash/lodash.js"},{"name":"semver","loc":{"line":39,"column":41},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/keepkey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/semver/semver.js"},{"name":"./binance","loc":{"line":40,"column":37},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/keepkey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/binance.js"},{"name":"./bitcoin","loc":{"line":41,"column":33},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/keepkey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/bitcoin.js"},{"name":"./cosmos","loc":{"line":42,"column":36},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/keepkey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/cosmos.js"},{"name":"./eos","loc":{"line":43,"column":33},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/keepkey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/eos.js"},{"name":"./ethereum","loc":{"line":44,"column":33},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/keepkey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/ethereum.js"},{"name":"./ripple","loc":{"line":45,"column":36},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/keepkey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/ripple.js"},{"name":"./thorchain","loc":{"line":46,"column":39},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/keepkey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/thorchain.js"},{"name":"./typeRegistry","loc":{"line":47,"column":31},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/keepkey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/typeRegistry.js"},{"name":"./utils","loc":{"line":48,"column":24},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/keepkey.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@shapeshiftoss/hdwallet-keepkey/dist/utils.js"}],"generated":{"js":"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.create = exports.info = exports.KeepKeyHDWallet = exports.KeepKeyHDWalletInfo = exports.isKeepKey = void 0;\nconst core = __importStar(require(\"@shapeshiftoss/hdwallet-core\"));\nconst Messages = __importStar(require(\"@keepkey/device-protocol/lib/messages_pb\"));\nconst Types = __importStar(require(\"@keepkey/device-protocol/lib/types_pb\"));\nconst lodash_1 = __importDefault(require(\"lodash\"));\nconst semver_1 = __importDefault(require(\"semver\"));\nconst Binance = __importStar(require(\"./binance\"));\nconst Btc = __importStar(require(\"./bitcoin\"));\nconst Cosmos = __importStar(require(\"./cosmos\"));\nconst Eos = __importStar(require(\"./eos\"));\nconst Eth = __importStar(require(\"./ethereum\"));\nconst Ripple = __importStar(require(\"./ripple\"));\nconst Thorchain = __importStar(require(\"./thorchain\"));\nconst typeRegistry_1 = require(\"./typeRegistry\");\nconst utils_1 = require(\"./utils\");\nfunction isKeepKey(wallet) {\n    return lodash_1.default.isObject(wallet) && wallet._isKeepKey;\n}\nexports.isKeepKey = isKeepKey;\nfunction describeETHPath(path) {\n    let pathStr = core.addressNListToBIP32(path);\n    let unknown = {\n        verbose: pathStr,\n        coin: \"Ethereum\",\n        isKnown: false,\n    };\n    if (path.length != 5)\n        return unknown;\n    if (path[0] != 0x80000000 + 44)\n        return unknown;\n    if (path[1] != 0x80000000 + core.slip44ByCoin(\"Ethereum\"))\n        return unknown;\n    if ((path[2] & 0x80000000) >>> 0 !== 0x80000000)\n        return unknown;\n    if (path[3] != 0)\n        return unknown;\n    if (path[4] != 0)\n        return unknown;\n    let index = path[2] & 0x7fffffff;\n    return {\n        verbose: `Ethereum Account #${index}`,\n        accountIdx: index,\n        wholeAccount: true,\n        coin: \"Ethereum\",\n        isKnown: true,\n        isPrefork: false,\n    };\n}\nfunction describeUTXOPath(path, coin, scriptType) {\n    var _a;\n    let pathStr = core.addressNListToBIP32(path);\n    let unknown = {\n        verbose: pathStr,\n        coin,\n        scriptType,\n        isKnown: false,\n    };\n    if (!scriptType)\n        return unknown;\n    if (!Btc.btcSupportsCoin(coin))\n        return unknown;\n    if (!Btc.btcSupportsScriptType(coin, scriptType))\n        return unknown;\n    if (path.length !== 3 && path.length !== 5)\n        return unknown;\n    if ((path[0] & 0x80000000) >>> 0 !== 0x80000000)\n        return unknown;\n    let purpose = path[0] & 0x7fffffff;\n    if (![44, 49, 84].includes(purpose))\n        return unknown;\n    if (purpose === 44 && scriptType !== core.BTCInputScriptType.SpendAddress)\n        return unknown;\n    if (purpose === 49 && scriptType !== core.BTCInputScriptType.SpendP2SHWitness)\n        return unknown;\n    if (purpose === 84 && scriptType !== core.BTCInputScriptType.SpendWitness)\n        return unknown;\n    let wholeAccount = path.length === 3;\n    let script = scriptType\n        ? (_a = {\n            [core.BTCInputScriptType.SpendAddress]: [\"Legacy\"],\n            [core.BTCInputScriptType.SpendP2SHWitness]: [],\n            [core.BTCInputScriptType.SpendWitness]: [\"Segwit Native\"],\n        }[scriptType]) !== null && _a !== void 0 ? _a : []\n        : [];\n    let isPrefork = false;\n    const slip44 = core.slip44ByCoin(coin);\n    if (slip44 === undefined)\n        return unknown;\n    if (path[1] !== 0x80000000 + slip44) {\n        switch (coin) {\n            case \"BitcoinCash\":\n            case \"BitcoinGold\": {\n                if (path[1] === 0x80000000 + core.slip44ByCoin(\"Bitcoin\")) {\n                    isPrefork = true;\n                    break;\n                }\n                return unknown;\n            }\n            case \"BitcoinSV\": {\n                if (path[1] === 0x80000000 + core.slip44ByCoin(\"Bitcoin\") ||\n                    path[1] === 0x80000000 + core.slip44ByCoin(\"BitcoinCash\")) {\n                    isPrefork = true;\n                    break;\n                }\n                return unknown;\n            }\n            default:\n                return unknown;\n        }\n    }\n    let attributes = isPrefork ? [\"Prefork\"] : [];\n    switch (coin) {\n        case \"Bitcoin\":\n        case \"Litecoin\":\n        case \"BitcoinGold\":\n        case \"Testnet\": {\n            attributes = attributes.concat(script);\n            break;\n        }\n        default:\n            break;\n    }\n    let attr = attributes.length ? ` (${attributes.join(\", \")})` : \"\";\n    let accountIdx = path[2] & 0x7fffffff;\n    if (wholeAccount) {\n        return {\n            coin,\n            verbose: `${coin} Account #${accountIdx}${attr}`,\n            accountIdx,\n            wholeAccount: true,\n            isKnown: true,\n            scriptType,\n            isPrefork,\n        };\n    }\n    else {\n        let change = path[3] === 1 ? \"Change \" : \"\";\n        let addressIdx = path[4];\n        return {\n            coin,\n            verbose: `${coin} Account #${accountIdx}, ${change}Address #${addressIdx}${attr}`,\n            accountIdx,\n            addressIdx,\n            wholeAccount: false,\n            isKnown: true,\n            isChange: path[3] === 1,\n            scriptType,\n            isPrefork,\n        };\n    }\n}\nfunction describeCosmosPath(path) {\n    let pathStr = core.addressNListToBIP32(path);\n    let unknown = {\n        verbose: pathStr,\n        coin: \"Atom\",\n        isKnown: false,\n    };\n    if (path.length != 5) {\n        return unknown;\n    }\n    if (path[0] != 0x80000000 + 44) {\n        return unknown;\n    }\n    if (path[1] != 0x80000000 + core.slip44ByCoin(\"Atom\")) {\n        return unknown;\n    }\n    if ((path[2] & 0x80000000) >>> 0 !== 0x80000000) {\n        return unknown;\n    }\n    if (path[3] !== 0 || path[4] !== 0) {\n        return unknown;\n    }\n    let index = path[2] & 0x7fffffff;\n    return {\n        verbose: `Cosmos Account #${index}`,\n        accountIdx: index,\n        wholeAccount: true,\n        coin: \"Atom\",\n        isKnown: true,\n        isPrefork: false,\n    };\n}\nfunction describeThorchainPath(path) {\n    let pathStr = core.addressNListToBIP32(path);\n    let unknown = {\n        verbose: pathStr,\n        coin: \"Rune\",\n        isKnown: false,\n    };\n    if (path.length != 5) {\n        return unknown;\n    }\n    if (path[0] != 0x80000000 + 44) {\n        return unknown;\n    }\n    if (path[1] != 0x80000000 + core.slip44ByCoin(\"Rune\")) {\n        return unknown;\n    }\n    if ((path[2] & 0x80000000) >>> 0 !== 0x80000000) {\n        return unknown;\n    }\n    if (path[3] !== 0 || path[4] !== 0) {\n        return unknown;\n    }\n    let index = path[2] & 0x7fffffff;\n    return {\n        verbose: `THORChain Account #${index}`,\n        accountIdx: index,\n        wholeAccount: true,\n        coin: \"Rune\",\n        isKnown: true,\n        isPrefork: false,\n    };\n}\nfunction describeEosPath(path) {\n    let pathStr = core.addressNListToBIP32(path);\n    let unknown = {\n        verbose: pathStr,\n        coin: \"Eos\",\n        isKnown: false,\n    };\n    if (path.length != 5) {\n        return unknown;\n    }\n    if (path[0] != 0x80000000 + 44) {\n        return unknown;\n    }\n    if (path[1] != 0x80000000 + core.slip44ByCoin(\"Eos\")) {\n        return unknown;\n    }\n    if ((path[2] & 0x80000000) >>> 0 !== 0x80000000) {\n        return unknown;\n    }\n    if (path[3] !== 0 || path[4] !== 0) {\n        return unknown;\n    }\n    let index = path[2] & 0x7fffffff;\n    return {\n        verbose: `Eos Account #${index}`,\n        accountIdx: index,\n        wholeAccount: true,\n        coin: \"Eos\",\n        isKnown: true,\n        isPrefork: false,\n    };\n}\nfunction describeRipplePath(path) {\n    let pathStr = core.addressNListToBIP32(path);\n    let unknown = {\n        verbose: pathStr,\n        coin: \"Ripple\",\n        isKnown: false,\n    };\n    if (path.length != 5) {\n        return unknown;\n    }\n    if (path[0] != 0x80000000 + 44) {\n        return unknown;\n    }\n    if (path[1] != 0x80000000 + core.slip44ByCoin(\"Ripple\")) {\n        return unknown;\n    }\n    if ((path[2] & 0x80000000) >>> 0 !== 0x80000000) {\n        return unknown;\n    }\n    if (path[3] !== 0 || path[4] !== 0) {\n        return unknown;\n    }\n    let index = path[2] & 0x7fffffff;\n    return {\n        verbose: `Ripple Account #${index}`,\n        accountIdx: index,\n        wholeAccount: true,\n        coin: \"Ripple\",\n        isKnown: true,\n        isPrefork: false,\n    };\n}\nfunction describeBinancePath(path) {\n    let pathStr = core.addressNListToBIP32(path);\n    let unknown = {\n        verbose: pathStr,\n        coin: \"Binance\",\n        isKnown: false,\n    };\n    if (path.length != 5) {\n        return unknown;\n    }\n    if (path[0] != 0x80000000 + 44) {\n        return unknown;\n    }\n    if (path[1] != 0x80000000 + core.slip44ByCoin(\"Binance\")) {\n        return unknown;\n    }\n    if ((path[2] & 0x80000000) >>> 0 !== 0x80000000) {\n        return unknown;\n    }\n    if (path[3] !== 0 || path[4] !== 0) {\n        return unknown;\n    }\n    let index = path[2] & 0x7fffffff;\n    return {\n        verbose: `Binance Account #${index}`,\n        accountIdx: index,\n        wholeAccount: true,\n        coin: \"Binance\",\n        isKnown: true,\n        isPrefork: false,\n    };\n}\nclass KeepKeyHDWalletInfo {\n    constructor() {\n        this._supportsBTCInfo = true;\n        this._supportsETHInfo = true;\n        this._supportsCosmosInfo = true;\n        this._supportsRippleInfo = true;\n        this._supportsBinanceInfo = true;\n        this._supportsEosInfo = true;\n        this._supportsThorchainInfo = true;\n    }\n    getVendor() {\n        return \"KeepKey\";\n    }\n    btcSupportsCoin(coin) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Btc.btcSupportsCoin(coin);\n        });\n    }\n    btcSupportsScriptType(coin, scriptType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Btc.btcSupportsScriptType(coin, scriptType);\n        });\n    }\n    btcSupportsSecureTransfer() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Btc.btcSupportsSecureTransfer();\n        });\n    }\n    btcSupportsNativeShapeShift() {\n        return Btc.btcSupportsNativeShapeShift();\n    }\n    btcGetAccountPaths(msg) {\n        return Btc.btcGetAccountPaths(msg);\n    }\n    btcIsSameAccount(msg) {\n        return Btc.btcIsSameAccount(msg);\n    }\n    ethSupportsNetwork(chain_id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Eth.ethSupportsNetwork(chain_id);\n        });\n    }\n    ethSupportsSecureTransfer() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Eth.ethSupportsSecureTransfer();\n        });\n    }\n    ethSupportsNativeShapeShift() {\n        return Eth.ethSupportsNativeShapeShift();\n    }\n    ethSupportsEIP1559() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return true;\n        });\n    }\n    ethGetAccountPaths(msg) {\n        return Eth.ethGetAccountPaths(msg);\n    }\n    cosmosGetAccountPaths(msg) {\n        return Cosmos.cosmosGetAccountPaths(msg);\n    }\n    thorchainGetAccountPaths(msg) {\n        return Thorchain.thorchainGetAccountPaths(msg);\n    }\n    rippleGetAccountPaths(msg) {\n        return Ripple.rippleGetAccountPaths(msg);\n    }\n    binanceGetAccountPaths(msg) {\n        return Binance.binanceGetAccountPaths(msg);\n    }\n    eosGetAccountPaths(msg) {\n        return Eos.eosGetAccountPaths(msg);\n    }\n    hasOnDevicePinEntry() {\n        return false;\n    }\n    hasOnDevicePassphrase() {\n        return false;\n    }\n    hasOnDeviceDisplay() {\n        return true;\n    }\n    hasOnDeviceRecovery() {\n        return false;\n    }\n    hasNativeShapeShift(srcCoin, dstCoin) {\n        return true;\n    }\n    supportsOfflineSigning() {\n        return true;\n    }\n    supportsBroadcast() {\n        return false;\n    }\n    describePath(msg) {\n        switch (msg.coin) {\n            case \"Ethereum\":\n                return describeETHPath(msg.path);\n            case \"Atom\":\n                return describeCosmosPath(msg.path);\n            case \"Binance\":\n                return describeBinancePath(msg.path);\n            case \"Ripple\":\n                return describeRipplePath(msg.path);\n            case \"Eos\":\n                return describeEosPath(msg.path);\n            default:\n                return describeUTXOPath(msg.path, msg.coin, msg.scriptType);\n        }\n    }\n    btcNextAccountPath(msg) {\n        let description = describeUTXOPath(msg.addressNList, msg.coin, msg.scriptType);\n        if (!description.isKnown) {\n            return undefined;\n        }\n        let addressNList = msg.addressNList;\n        if (addressNList[0] === 0x80000000 + 44 ||\n            addressNList[0] === 0x80000000 + 49 ||\n            addressNList[0] === 0x80000000 + 84) {\n            addressNList[2] += 1;\n            return Object.assign(Object.assign({}, msg), { addressNList });\n        }\n        return undefined;\n    }\n    ethNextAccountPath(msg) {\n        let addressNList = msg.hardenedPath.concat(msg.relPath);\n        let description = describeETHPath(addressNList);\n        if (!description.isKnown) {\n            return undefined;\n        }\n        if (addressNList[0] === 0x80000000 + 44) {\n            addressNList[2] += 1;\n            return Object.assign(Object.assign({}, msg), { addressNList, hardenedPath: core.hardenedPath(addressNList), relPath: core.relativePath(addressNList) });\n        }\n        return undefined;\n    }\n    cosmosNextAccountPath(msg) {\n        let description = describeCosmosPath(msg.addressNList);\n        if (!description.isKnown) {\n            return undefined;\n        }\n        let addressNList = msg.addressNList;\n        addressNList[2] += 1;\n        return Object.assign(Object.assign({}, msg), { addressNList });\n    }\n    thorchainNextAccountPath(msg) {\n        let description = describeThorchainPath(msg.addressNList);\n        if (!description.isKnown) {\n            return undefined;\n        }\n        let addressNList = msg.addressNList;\n        addressNList[2] += 1;\n        return Object.assign(Object.assign({}, msg), { addressNList });\n    }\n    rippleNextAccountPath(msg) {\n        let description = describeRipplePath(msg.addressNList);\n        if (!description.isKnown) {\n            return undefined;\n        }\n        let addressNList = msg.addressNList;\n        addressNList[2] += 1;\n        return Object.assign(Object.assign({}, msg), { addressNList });\n    }\n    binanceNextAccountPath(msg) {\n        let description = describeBinancePath(msg.addressNList);\n        if (!description.isKnown) {\n            return undefined;\n        }\n        let addressNList = msg.addressNList;\n        addressNList[2] += 1;\n        return Object.assign(Object.assign({}, msg), { addressNList });\n    }\n    eosNextAccountPath(msg) {\n        let description = describeEosPath(msg.addressNList);\n        if (!description.isKnown) {\n            return undefined;\n        }\n        let addressNList = msg.addressNList;\n        addressNList[2] += 1;\n        return Object.assign(Object.assign({}, msg), { addressNList });\n    }\n}\nexports.KeepKeyHDWalletInfo = KeepKeyHDWalletInfo;\nclass KeepKeyHDWallet {\n    constructor(transport) {\n        this._supportsETHInfo = true;\n        this._supportsBTCInfo = true;\n        this._supportsCosmosInfo = true;\n        this._supportsRippleInfo = true;\n        this._supportsBinanceInfo = true;\n        this._supportsEosInfo = true;\n        this._supportsFioInfo = false;\n        this._isKeepKey = true;\n        this._supportsETH = true;\n        this._supportsBTC = true;\n        this._supportsCosmos = true;\n        this._supportsRipple = true;\n        this._supportsBinance = true;\n        this._supportsEos = true;\n        this._supportsFio = false;\n        this._supportsThorchainInfo = true;\n        this._supportsThorchain = true;\n        this._supportsSecretInfo = false;\n        this._supportsSecret = false;\n        this._supportsKava = false;\n        this._supportsKavaInfo = false;\n        this._supportsTerra = false;\n        this._supportsTerraInfo = false;\n        this.transport = transport;\n        this._supportsDebugLink = transport.debugLink;\n        this.info = new KeepKeyHDWalletInfo();\n    }\n    static create(transport) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new KeepKeyHDWallet(transport);\n        });\n    }\n    getDeviceID() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const featuresId = (yield this.getFeatures(/*cached=*/ true)).deviceId;\n            // Some devices are showing up with empty string deviceId's in their\n            // features object. Not sure how that's happening.\n            if (featuresId)\n                return featuresId;\n            // Grabbing the one from the transport seems to be a reasonable fallback.\n            return yield this.transport.getDeviceID();\n        });\n    }\n    getVendor() {\n        return \"KeepKey\";\n    }\n    getModel() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return core.mustBeDefined((yield this.getFeatures(/*cached=*/ true)).model);\n        });\n    }\n    getFirmwareVersion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const features = yield this.getFeatures(/*cached=*/ true);\n            return `v${features.majorVersion}.${features.minorVersion}.${features.patchVersion}`;\n        });\n    }\n    getLabel() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            return (_a = (yield this.getFeatures(/*cached=*/ true)).label) !== null && _a !== void 0 ? _a : \"\";\n        });\n    }\n    isInitialized() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return !!(yield this.getFeatures()).initialized;\n        });\n    }\n    isLocked() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const features = yield this.getFeatures();\n            if (features.pinProtection && !features.pinCached)\n                return true;\n            if (features.passphraseProtection && !features.passphraseCached)\n                return true;\n            return false;\n        });\n    }\n    getPublicKeys(getPublicKeys) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const publicKeys = [];\n            for (let i = 0; i < getPublicKeys.length; i++) {\n                const { coin, addressNList, curve, showDisplay, scriptType } = getPublicKeys[i];\n                const GPK = new Messages.GetPublicKey();\n                if (coin)\n                    GPK.setCoinName(coin);\n                GPK.setAddressNList(addressNList);\n                GPK.setShowDisplay(showDisplay || false);\n                GPK.setEcdsaCurveName(curve || \"secp256k1\");\n                GPK.setScriptType(utils_1.translateInputScriptType(scriptType || core.BTCInputScriptType.SpendAddress));\n                const event = yield this.transport.call(Messages.MessageType.MESSAGETYPE_GETPUBLICKEY, GPK, {\n                    msgTimeout: showDisplay ? core.LONG_TIMEOUT : core.DEFAULT_TIMEOUT,\n                });\n                const publicKey = event.proto;\n                publicKeys.push({ xpub: core.mustBeDefined(publicKey.getXpub()) });\n            }\n            return publicKeys;\n        });\n    }\n    ping(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const ping = new Messages.Ping();\n            ping.setMessage(msg.msg);\n            ping.setButtonProtection(msg.button || false);\n            ping.setPinProtection(msg.pin || false);\n            ping.setPassphraseProtection(msg.passphrase || false);\n            const event = yield this.transport.call(Messages.MessageType.MESSAGETYPE_PING, ping, {\n                msgTimeout: msg.button || msg.pin || msg.passphrase ? core.LONG_TIMEOUT : core.DEFAULT_TIMEOUT,\n            });\n            const message = event.proto;\n            return { msg: core.mustBeDefined(message.getMessage()) };\n        });\n    }\n    reset(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resetDevice = new Messages.ResetDevice();\n            resetDevice.setStrength(msg.entropy || 128);\n            resetDevice.setDisplayRandom(false);\n            resetDevice.setPassphraseProtection(msg.passphrase || false);\n            resetDevice.setPinProtection(msg.pin || false);\n            resetDevice.setLabel(msg.label);\n            if (msg.autoLockDelayMs) {\n                resetDevice.setAutoLockDelayMs(msg.autoLockDelayMs);\n            }\n            resetDevice.setU2fCounter(msg.u2fCounter || Math.floor(+new Date() / 1000));\n            // resetDevice.setWordsPerGape(wordsPerScreen) // Re-enable when patch gets in\n            // Send\n            yield this.transport.call(Messages.MessageType.MESSAGETYPE_RESETDEVICE, resetDevice, {\n                msgTimeout: core.LONG_TIMEOUT,\n            });\n            this.cacheFeatures(undefined);\n        });\n    }\n    recover(r) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const msg = new Messages.RecoveryDevice();\n            msg.setWordCount({ 128: 12, 192: 18, 256: 24 }[r.entropy]);\n            msg.setPassphraseProtection(r.passphrase);\n            msg.setPinProtection(r.pin);\n            msg.setLabel(r.label);\n            msg.setLanguage(r.language || \"english\");\n            msg.setEnforceWordlist(true);\n            msg.setUseCharacterCipher(true);\n            if (r.autoLockDelayMs) {\n                msg.setAutoLockDelayMs(r.autoLockDelayMs);\n            }\n            msg.setU2fCounter(r.u2fCounter || Math.floor(+new Date() / 1000));\n            yield this.transport.call(Messages.MessageType.MESSAGETYPE_RECOVERYDEVICE, msg, {\n                msgTimeout: core.LONG_TIMEOUT,\n            });\n            this.cacheFeatures(undefined);\n        });\n    }\n    pressYes() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.press(true);\n        });\n    }\n    pressNo() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.press(false);\n        });\n    }\n    press(isYes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let decision = new Messages.DebugLinkDecision();\n            decision.setYesNo(isYes);\n            yield this.transport.call(Messages.MessageType.MESSAGETYPE_DEBUGLINKDECISION, decision, {\n                noWait: true,\n                debugLink: true,\n            });\n        });\n    }\n    hasOnDevicePinEntry() {\n        return false;\n    }\n    hasOnDevicePassphrase() {\n        return false;\n    }\n    hasOnDeviceDisplay() {\n        return true;\n    }\n    hasOnDeviceRecovery() {\n        return false;\n    }\n    hasNativeShapeShift(srcCoin, dstCoin) {\n        return true;\n    }\n    supportsOfflineSigning() {\n        return true;\n    }\n    supportsBroadcast() {\n        return false;\n    }\n    sendPin(pin) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const matrixAck = new Messages.PinMatrixAck();\n            matrixAck.setPin(pin);\n            console.assert(undefined ===\n                (yield this.transport.call(Messages.MessageType.MESSAGETYPE_PINMATRIXACK, matrixAck, {\n                    msgTimeout: core.DEFAULT_TIMEOUT,\n                    omitLock: true,\n                    noWait: true,\n                })));\n        });\n    }\n    sendPassphrase(passphrase) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const passphraseAck = new Messages.PassphraseAck();\n            passphraseAck.setPassphrase(passphrase);\n            console.assert(undefined ===\n                (yield this.transport.call(Messages.MessageType.MESSAGETYPE_PASSPHRASEACK, passphraseAck, {\n                    msgTimeout: core.DEFAULT_TIMEOUT,\n                    omitLock: true,\n                    noWait: true,\n                })));\n        });\n    }\n    sendCharacter(character) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.sendCharacterProto(character, false, false);\n        });\n    }\n    sendCharacterDelete() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.sendCharacterProto(\"\", true, false);\n        });\n    }\n    sendCharacterDone() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.sendCharacterProto(\"\", false, true);\n        });\n    }\n    sendWord(word) {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error(\"Not Yet Implemented :(\");\n        });\n    }\n    sendCharacterProto(character, _delete, _done) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const characterAck = new Messages.CharacterAck();\n            if (character !== \"\") {\n                characterAck.setCharacter(character);\n            }\n            else if (_delete) {\n                characterAck.setDelete(_delete);\n            }\n            else if (_done) {\n                characterAck.setDone(_done);\n            }\n            console.assert(undefined ===\n                (yield this.transport.call(Messages.MessageType.MESSAGETYPE_CHARACTERACK, characterAck, {\n                    msgTimeout: core.DEFAULT_TIMEOUT,\n                    omitLock: true,\n                    noWait: true,\n                })));\n        });\n    }\n    // ApplyPolicy enables or disables a named policy such as \"ShapeShift\" on the device\n    applyPolicy(p) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const policy = new Types.PolicyType();\n            policy.setPolicyName(p.policyName);\n            policy.setEnabled(p.enabled);\n            const applyPolicies = new Messages.ApplyPolicies();\n            applyPolicies.setPolicyList([policy]);\n            yield this.transport.call(Messages.MessageType.MESSAGETYPE_APPLYPOLICIES, applyPolicies, {\n                msgTimeout: core.LONG_TIMEOUT,\n            });\n            this.cacheFeatures(undefined);\n        });\n    }\n    // ApplySettings changes the label, language, and enabling/disabling the passphrase\n    // The default language is english\n    applySettings(s) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const applySettings = new Messages.ApplySettings();\n            if (s.label) {\n                applySettings.setLabel(s.label);\n            }\n            if (s.language) {\n                applySettings.setLanguage(s.language);\n            }\n            if (s.usePassphrase !== undefined) {\n                applySettings.setUsePassphrase(s.usePassphrase);\n            }\n            if (s.autoLockDelayMs) {\n                applySettings.setAutoLockDelayMs(s.autoLockDelayMs);\n            }\n            if (s.u2fCounter) {\n                applySettings.setU2fCounter(s.u2fCounter);\n            }\n            yield this.transport.call(Messages.MessageType.MESSAGETYPE_APPLYSETTINGS, applySettings);\n            this.cacheFeatures(undefined);\n        });\n    }\n    // Cancel aborts the last device action that required user interaction\n    // It can follow a button request, passphrase request, or pin request\n    cancel() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.transport.cancel();\n        });\n    }\n    // ChangePin requests setting/changing the pin\n    changePin() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const changePin = new Messages.ChangePin();\n            // User may be propmpted for button press up to 2 times\n            yield this.transport.call(Messages.MessageType.MESSAGETYPE_CHANGEPIN, changePin, {\n                msgTimeout: core.LONG_TIMEOUT,\n            });\n        });\n    }\n    // CipherKeyValue encrypts or decrypts a value with a given key, nodepath, and initializationVector\n    // This method encrypts if encrypt is true and decrypts if false, the confirm paramater determines wether\n    // the user is prompted on the device. See EncryptKeyValue() and DecryptKeyValue() for convenience methods\n    // NOTE: If the length of the value in bytes is not divisible by 16 it will be zero padded\n    cipherKeyValue(v) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // if(val.length % 16 !== 0) val = val.concat() TODO THIS\n            const cipherKeyValue = new Messages.CipherKeyValue();\n            cipherKeyValue.setAddressNList(v.addressNList);\n            cipherKeyValue.setKey(v.key);\n            cipherKeyValue.setValue(v.value);\n            cipherKeyValue.setEncrypt(!!v.encrypt);\n            cipherKeyValue.setAskOnEncrypt(v.askOnEncrypt || false);\n            cipherKeyValue.setAskOnDecrypt(v.askOnDecrypt || false);\n            cipherKeyValue.setIv(v.iv || \"\");\n            const response = yield this.transport.call(Messages.MessageType.MESSAGETYPE_CIPHERKEYVALUE, cipherKeyValue);\n            const ckv = response.message;\n            return ckv.getValue();\n        });\n    }\n    // ClearSession clears cached session values such as the pin and passphrase\n    clearSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const clearSession = new Messages.ClearSession();\n            yield this.transport.call(Messages.MessageType.MESSAGETYPE_CLEARSESSION, clearSession);\n            this.cacheFeatures(undefined);\n        });\n    }\n    // DecryptKeyValue is a convenience method around decrypting with CipherKeyValue().\n    // For more granular control of the process use CipherKeyValue()\n    decryptKeyValue(v) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.cipherKeyValue(v);\n        });\n    }\n    // FirmwareErase askes the device to erase its firmware\n    firmwareErase() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const firmwareErase = new Messages.FirmwareErase();\n            // send\n            yield this.transport.call(Messages.MessageType.MESSAGETYPE_FIRMWAREERASE, firmwareErase);\n            this.cacheFeatures(undefined);\n        });\n    }\n    firmwareUpload(firmware) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const firmwareUpload = new Messages.FirmwareUpload();\n            const hash = yield this.transport.getFirmwareHash(firmware);\n            firmwareUpload.setPayload(firmware);\n            firmwareUpload.setPayloadHash(hash);\n            yield this.transport.call(Messages.MessageType.MESSAGETYPE_FIRMWAREUPLOAD, firmwareUpload);\n            this.cacheFeatures(undefined);\n        });\n    }\n    // Initialize assigns a hid connection to this KeepKey and send initialize message to device\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const initialize = new Messages.Initialize();\n            const event = yield this.transport.call(Messages.MessageType.MESSAGETYPE_INITIALIZE, initialize);\n            if (!event.message)\n                throw event;\n            const out = event.message;\n            if (!out.deviceId)\n                throw new Error(\"no deviceId in features object\");\n            this.features = out;\n            // v6.1.0 firmware changed usb serial numbers to match STM32 desig_device_id\n            // If the deviceId in the features table doesn't match, then we need to\n            // add another k-v pair to the keyring so it can be looked up either way.\n            const transportDeviceID = yield this.transport.getDeviceID();\n            if (transportDeviceID !== out.deviceId) {\n                this.transport.keyring.addAlias(transportDeviceID, out.deviceId);\n            }\n            // Cosmos isn't supported until v6.3.0\n            const fwVersion = `v${out.majorVersion}.${out.minorVersion}.${out.patchVersion}`;\n            this._supportsCosmos = semver_1.default.gte(fwVersion, \"v6.3.0\");\n            this._supportsRipple = semver_1.default.gte(fwVersion, \"v6.4.0\");\n            this._supportsBinance = semver_1.default.gte(fwVersion, \"v6.4.0\");\n            this._supportsEos = semver_1.default.gte(fwVersion, \"v6.4.0\");\n            // this._supportsThorchain = Semver.get(fwVersion, \"v7.0.0\");\n            this.cacheFeatures(out);\n            return out;\n        });\n    }\n    // GetFeatures returns the features and other device information such as the version, label, and supported coins\n    getFeatures(cached = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (cached && this.featuresCache)\n                return this.featuresCache;\n            const features = new Messages.GetFeatures();\n            const event = yield this.transport.call(Messages.MessageType.MESSAGETYPE_GETFEATURES, features);\n            this.cacheFeatures(event.message);\n            return event.message;\n        });\n    }\n    cacheFeatures(features) {\n        this.featuresCache = features;\n    }\n    // GetEntropy requests sample data from the hardware RNG\n    getEntropy(size) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const getEntropy = new Messages.GetEntropy();\n            getEntropy.setSize(size);\n            // send\n            const event = yield this.transport.call(Messages.MessageType.MESSAGETYPE_GETENTROPY, getEntropy, {\n                msgTimeout: core.LONG_TIMEOUT,\n            });\n            return core.mustBeDefined(event.proto).getEntropy_asU8();\n        });\n    }\n    // GetNumCoins returns the number of coins supported by the device regardless of if the hanve funds.\n    getNumCoins() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const getCoinTable = new Messages.GetCoinTable();\n            const response = yield this.transport.call(Messages.MessageType.MESSAGETYPE_GETCOINTABLE, getCoinTable);\n            return core.mustBeDefined(core.mustBeDefined(response.proto).getNumCoins());\n        });\n    }\n    // GetCoinTable returns an array of Types.CoinTypes, with start and end arguments for paging.\n    // You cannot request more than 10 at a time.\n    getCoinTable(start = 0, end = start + 10) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const getCoinTable = new Messages.GetCoinTable();\n            getCoinTable.setStart(start);\n            getCoinTable.setEnd(end);\n            const response = yield this.transport.call(Messages.MessageType.MESSAGETYPE_GETCOINTABLE, getCoinTable);\n            const coinTable = response.message;\n            return coinTable.tableList;\n        });\n    }\n    // LoadDevice loads a provided seed onto the device and applies the provided settings\n    // including setting a pin/device label, enabling/disabling the passphrase, and whether to\n    // check the checksum of the provided mnemonic\n    loadDevice(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const loadDevice = new Messages.LoadDevice();\n            loadDevice.setMnemonic(msg.mnemonic);\n            loadDevice.setPassphraseProtection(!!msg.passphrase);\n            loadDevice.setSkipChecksum(!!msg.skipChecksum);\n            if (msg.pin)\n                loadDevice.setPin(msg.pin);\n            if (msg.label)\n                loadDevice.setLabel(msg.label);\n            // send\n            yield this.transport.call(Messages.MessageType.MESSAGETYPE_LOADDEVICE, loadDevice, {\n                msgTimeout: core.LONG_TIMEOUT,\n            });\n            this.cacheFeatures(undefined);\n        });\n    }\n    // RemovePin disables pin protection for the device. If a pin is currently enabled\n    // it will prompt the user to enter the current pin\n    removePin() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const changePin = new Messages.ChangePin();\n            changePin.setRemove(true);\n            // send\n            yield this.transport.call(Messages.MessageType.MESSAGETYPE_CHANGEPIN, changePin);\n            this.cacheFeatures(undefined);\n        });\n    }\n    send(events) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const event of events) {\n                const MessageType = typeRegistry_1.messageTypeRegistry[core.mustBeDefined(event.message_enum)];\n                const msg = new MessageType();\n                Object.entries(event.message).forEach(([key, value]) => {\n                    const setterMethod = utils_1.protoFieldToSetMethod(key);\n                    if (msg[setterMethod]) {\n                        // Assume setter methods are always of the format: strength -> setStrength\n                        // until this exists https://github.com/protocolbuffers/protobuf/issues/1591\n                        msg[setterMethod](value);\n                    }\n                });\n                yield this.transport.call(core.mustBeDefined(event.message_enum), msg);\n            }\n        });\n    }\n    // SoftReset power cycles the device. The device only responds to\n    // this message while in manufacturer mode\n    softReset() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const softReset = new Messages.SoftReset();\n            // send\n            yield this.transport.call(Messages.MessageType.MESSAGETYPE_SOFTRESET, softReset);\n            this.cacheFeatures(undefined);\n        });\n    }\n    // WipeDevice wipes all sensitive data and settings\n    wipe() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wipeDevice = new Messages.WipeDevice();\n            // send\n            yield this.transport.call(Messages.MessageType.MESSAGETYPE_WIPEDEVICE, wipeDevice);\n            this.cacheFeatures(undefined);\n        });\n    }\n    btcSupportsCoin(coin) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.info.btcSupportsCoin(coin);\n        });\n    }\n    btcSupportsScriptType(coin, scriptType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.info.btcSupportsScriptType(coin, scriptType);\n        });\n    }\n    btcGetAddress(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Btc.btcGetAddress(this, this.transport, msg);\n        });\n    }\n    btcSignTx(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Btc.btcSignTx(this, this.transport, msg);\n        });\n    }\n    btcSupportsSecureTransfer() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.info.btcSupportsSecureTransfer();\n        });\n    }\n    btcSupportsNativeShapeShift() {\n        return this.info.btcSupportsNativeShapeShift();\n    }\n    ethSupportsEIP1559() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // EIP1559 support starts in v7.2.1\n            return semver_1.default.gte(yield this.getFirmwareVersion(), \"v7.2.1\");\n        });\n    }\n    btcSignMessage(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Btc.btcSignMessage(this, this.transport, msg);\n        });\n    }\n    btcVerifyMessage(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Btc.btcVerifyMessage(this, this.transport, msg);\n        });\n    }\n    btcGetAccountPaths(msg) {\n        return this.info.btcGetAccountPaths(msg);\n    }\n    btcIsSameAccount(msg) {\n        // TODO: mixed-mode segwit was added in v6.0.2\n        // https://github.com/keepkey/keepkey-firmware/pull/81\n        // if (firmware_version.lt('6.0.2') && msg.length > 1)\n        //  return false\n        return this.info.btcIsSameAccount(msg);\n    }\n    ethSignTx(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Eth.ethSignTx(this.transport, msg);\n        });\n    }\n    ethGetAddress(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Eth.ethGetAddress(this.transport, msg);\n        });\n    }\n    ethSignMessage(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Eth.ethSignMessage(this.transport, msg);\n        });\n    }\n    ethVerifyMessage(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Eth.ethVerifyMessage(this.transport, msg);\n        });\n    }\n    ethSupportsNetwork(chain_id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.info.ethSupportsNetwork(chain_id);\n        });\n    }\n    ethSupportsSecureTransfer() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.info.ethSupportsSecureTransfer();\n        });\n    }\n    ethSupportsNativeShapeShift() {\n        return this.info.ethSupportsNativeShapeShift();\n    }\n    ethGetAccountPaths(msg) {\n        return this.info.ethGetAccountPaths(msg);\n    }\n    rippleGetAccountPaths(msg) {\n        return this.info.rippleGetAccountPaths(msg);\n    }\n    rippleGetAddress(msg) {\n        return Ripple.rippleGetAddress(this.transport, msg);\n    }\n    rippleSignTx(msg) {\n        return Ripple.rippleSignTx(this.transport, msg);\n    }\n    cosmosGetAccountPaths(msg) {\n        return this.info.cosmosGetAccountPaths(msg);\n    }\n    cosmosGetAddress(msg) {\n        return Cosmos.cosmosGetAddress(this.transport, msg);\n    }\n    cosmosSignTx(msg) {\n        return Cosmos.cosmosSignTx(this.transport, msg);\n    }\n    thorchainGetAccountPaths(msg) {\n        return this.info.thorchainGetAccountPaths(msg);\n    }\n    thorchainGetAddress(msg) {\n        return Thorchain.thorchainGetAddress(this.transport, msg);\n    }\n    thorchainSignTx(msg) {\n        return Thorchain.thorchainSignTx(this.transport, msg);\n    }\n    binanceGetAccountPaths(msg) {\n        return this.info.binanceGetAccountPaths(msg);\n    }\n    binanceGetAddress(msg) {\n        return Binance.binanceGetAddress(this.transport, msg);\n    }\n    binanceSignTx(msg) {\n        return Binance.binanceSignTx(this.transport, msg);\n    }\n    eosGetAccountPaths(msg) {\n        return this.info.eosGetAccountPaths(msg);\n    }\n    eosGetPublicKey(msg) {\n        return Eos.eosGetPublicKey(this.transport, msg);\n    }\n    eosSignTx(msg) {\n        return Eos.eosSignTx(this.transport, msg);\n    }\n    describePath(msg) {\n        return this.info.describePath(msg);\n    }\n    disconnect() {\n        return this.transport.disconnect();\n    }\n    btcNextAccountPath(msg) {\n        return this.info.btcNextAccountPath(msg);\n    }\n    ethNextAccountPath(msg) {\n        return this.info.ethNextAccountPath(msg);\n    }\n    eosNextAccountPath(msg) {\n        return this.info.eosNextAccountPath(msg);\n    }\n    cosmosNextAccountPath(msg) {\n        return this.info.cosmosNextAccountPath(msg);\n    }\n    rippleNextAccountPath(msg) {\n        return this.info.rippleNextAccountPath(msg);\n    }\n    binanceNextAccountPath(msg) {\n        return this.info.binanceNextAccountPath(msg);\n    }\n}\nexports.KeepKeyHDWallet = KeepKeyHDWallet;\nfunction info() {\n    return new KeepKeyHDWalletInfo();\n}\nexports.info = info;\nfunction create(transport) {\n    return new KeepKeyHDWallet(transport);\n}\nexports.create = create;\n"},"sourceMaps":{"js":{"version":3,"file":"keepkey.js","sourceRoot":"","sources":["../src/keepkey.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"9bb206f36d16f571f37d5857ec5c6082","cacheData":{"env":{}}}