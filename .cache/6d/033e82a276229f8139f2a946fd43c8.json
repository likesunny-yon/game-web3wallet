{"id":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bnb-javascript-sdk-nobroadcast/package.json","includedInParent":true,"mtime":1635871970969},{"name":"@babel/runtime/helpers/interopRequireWildcard","loc":{"line":3,"column":38},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@babel/runtime/helpers/interopRequireWildcard.js"},{"name":"@babel/runtime/helpers/interopRequireDefault","loc":{"line":5,"column":37},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@babel/runtime/helpers/interopRequireDefault.js"},{"name":"bech32","loc":{"line":12,"column":43},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bech32/index.js"},{"name":"bip32","loc":{"line":14,"column":44},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bip32/src/index.js"},{"name":"bip39","loc":{"line":16,"column":44},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bip39/src/index.js"},{"name":"crypto-browserify","loc":{"line":18,"column":55},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/crypto-browserify/index.js"},{"name":"elliptic","loc":{"line":20,"column":24},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/elliptic/lib/elliptic.js"},{"name":"is_js","loc":{"line":22,"column":44},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/is_js/is.js"},{"name":"secure-random","loc":{"line":24,"column":51},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/secure-random/lib/secure-random.js"},{"name":"tiny-secp256k1","loc":{"line":26,"column":51},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/tiny-secp256k1/js.js"},{"name":"uuid","loc":{"line":28,"column":43},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bnb-javascript-sdk-nobroadcast/node_modules/uuid/index.js"},{"name":"../utils","loc":{"line":30,"column":21},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bnb-javascript-sdk-nobroadcast/lib/utils/index.js"},{"name":"buffer","parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/node-libs-browser/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPrivateKeyFromMnemonic = exports.validateMnemonic = exports.generateMnemonic = exports.getPrivateKeyFromKeyStore = exports.generateKeyStore = exports.verifySignature = exports.generateSignature = exports.getAddressFromPrivateKey = exports.getAddressFromPublicKey = exports.generatePubKey = exports.getPublicKeyFromPrivateKey = exports.getPublicKey = exports.generateRandomArray = exports.generatePrivateKey = exports.encodeAddress = exports.checkAddress = exports.decodeAddress = void 0;\n\nvar _bech = _interopRequireDefault(require(\"bech32\"));\n\nvar bip32 = _interopRequireWildcard(require(\"bip32\"));\n\nvar bip39 = _interopRequireWildcard(require(\"bip39\"));\n\nvar _cryptoBrowserify = _interopRequireDefault(require(\"crypto-browserify\"));\n\nvar _elliptic = require(\"elliptic\");\n\nvar _is_js = _interopRequireDefault(require(\"is_js\"));\n\nvar _secureRandom = _interopRequireDefault(require(\"secure-random\"));\n\nvar _tinySecp256k = _interopRequireDefault(require(\"tiny-secp256k1\"));\n\nvar _uuid = _interopRequireDefault(require(\"uuid\"));\n\nvar _utils = require(\"../utils\");\n\n// secp256k1 privkey is 32 bytes\nvar PRIVKEY_LEN = 32;\nvar MNEMONIC_LEN = 256;\nvar DECODED_ADDRESS_LEN = 20;\nvar CURVE = \"secp256k1\"; //hdpath\n\nvar HDPATH = \"44'/714'/0'/0/\";\nvar ec = new _elliptic.ec(CURVE);\n/**\n * Decodes an address in bech32 format.\n * @category crypto\n * @param {string} value the bech32 address to decode\n */\n\nvar decodeAddress = function decodeAddress(value) {\n  var decodeAddress = _bech[\"default\"].decode(value);\n\n  return Buffer.from(_bech[\"default\"].fromWords(decodeAddress.words));\n};\n/**\n * Checks whether an address is valid.\n * @category crypto\n * @param {string} address the bech32 address to decode\n * @param {string} hrp the prefix to check for the bech32 address\n * @return {boolean}\n */\n\n\nexports.decodeAddress = decodeAddress;\n\nvar checkAddress = function checkAddress(address, hrp) {\n  try {\n    if (!address.startsWith(hrp)) {\n      return false;\n    }\n\n    var decodedAddress = _bech[\"default\"].decode(address);\n\n    var decodedAddressLength = decodeAddress(address).length;\n\n    if (decodedAddressLength === DECODED_ADDRESS_LEN && decodedAddress.prefix === hrp) {\n      return true;\n    }\n\n    return false;\n  } catch (err) {\n    return false;\n  }\n};\n/**\n * Encodes an address from input data bytes.\n * @category crypto\n * @param {string} value the public key to encode\n * @param {*} prefix the address prefix\n * @param {*} type the output type (default: hex)\n */\n\n\nexports.checkAddress = checkAddress;\n\nvar encodeAddress = function encodeAddress(value) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"tbnb\";\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"hex\";\n  var words;\n\n  if (Buffer.isBuffer(value)) {\n    words = _bech[\"default\"].toWords(Buffer.from(value));\n  } else {\n    words = _bech[\"default\"].toWords(Buffer.from(value, type));\n  }\n\n  return _bech[\"default\"].encode(prefix, words);\n};\n/**\n * Generates 32 bytes of random entropy\n * @category crypto\n * @param {number} len output length (default: 32 bytes)\n * @returns {string} entropy bytes hexstring\n */\n\n\nexports.encodeAddress = encodeAddress;\n\nvar generatePrivateKey = function generatePrivateKey() {\n  var len = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : PRIVKEY_LEN;\n  return (0, _utils.ab2hexstring)((0, _secureRandom[\"default\"])(len));\n};\n/**\n * Generates an arrayBuffer filled with random bits.\n * @category crypto\n * @param {number} length - Length of buffer.\n * @returns {ArrayBuffer}\n */\n\n\nexports.generatePrivateKey = generatePrivateKey;\n\nvar generateRandomArray = function generateRandomArray(length) {\n  return (0, _secureRandom[\"default\"])(length);\n};\n/**\n * @category crypto\n * @param {string} publicKey - Encoded public key\n * @return {Elliptic.PublicKey} public key hexstring\n */\n\n\nexports.generateRandomArray = generateRandomArray;\n\nvar getPublicKey = function getPublicKey(publicKey) {\n  var keyPair = ec.keyFromPublic(publicKey, \"hex\");\n  return keyPair.getPublic();\n};\n/**\n * Calculates the public key from a given private key.\n * @category crypto\n * @param {string} privateKeyHex the private key hexstring\n * @return {string} public key hexstring\n */\n\n\nexports.getPublicKey = getPublicKey;\n\nvar getPublicKeyFromPrivateKey = function getPublicKeyFromPrivateKey(privateKeyHex) {\n  if (!privateKeyHex || privateKeyHex.length !== PRIVKEY_LEN * 2) {\n    throw new Error(\"invalid privateKey\");\n  }\n\n  var curve = new _elliptic.ec(CURVE);\n  var keypair = curve.keyFromPrivate(privateKeyHex, \"hex\");\n  var unencodedPubKey = keypair.getPublic().encode(\"hex\", false);\n  return unencodedPubKey;\n};\n/**\n * PubKey performs the point-scalar multiplication from the privKey on the\n * generator point to get the pubkey.\n * @category crypto\n * @param {Buffer} privateKey\n * @return {Elliptic.PublicKey} PubKey\n * */\n\n\nexports.getPublicKeyFromPrivateKey = getPublicKeyFromPrivateKey;\n\nvar generatePubKey = function generatePubKey(privateKey) {\n  var curve = new _elliptic.ec(CURVE);\n  var keypair = curve.keyFromPrivate(privateKey);\n  return keypair.getPublic();\n};\n/**\n * Gets an address from a public key hex.\n * @category crypto\n * @param {string} publicKeyHex the public key hexstring\n * @param {string} prefix the address prefix\n */\n\n\nexports.generatePubKey = generatePubKey;\n\nvar getAddressFromPublicKey = function getAddressFromPublicKey(publicKeyHex, prefix) {\n  var pubKey = ec.keyFromPublic(publicKeyHex, \"hex\");\n  var pubPoint = pubKey.getPublic();\n  var compressed = pubPoint.encodeCompressed();\n  var hexed = (0, _utils.ab2hexstring)(compressed);\n  var hash = (0, _utils.sha256ripemd160)(hexed); // https://git.io/fAn8N\n\n  var address = encodeAddress(hash, prefix);\n  return address;\n};\n/**\n * Gets an address from a private key.\n * @category crypto\n * @param {string} privateKeyHex the private key hexstring\n * @param {string} prefix the address prefix\n */\n\n\nexports.getAddressFromPublicKey = getAddressFromPublicKey;\n\nvar getAddressFromPrivateKey = function getAddressFromPrivateKey(privateKeyHex, prefix) {\n  return getAddressFromPublicKey(getPublicKeyFromPrivateKey(privateKeyHex), prefix);\n};\n/**\n * Generates a signature (64 byte <r,s>) for a transaction based on given private key.\n * @category crypto\n * @param {string} signBytesHex - Unsigned transaction sign bytes hexstring.\n * @param {string | Buffer} privateKey - The private key.\n * @return {Buffer} Signature. Does not include tx.\n */\n\n\nexports.getAddressFromPrivateKey = getAddressFromPrivateKey;\n\nvar generateSignature = function generateSignature(signBytesHex, privateKey) {\n  var msgHash = (0, _utils.sha256)(signBytesHex);\n  var msgHashHex = Buffer.from(msgHash, \"hex\");\n\n  var signature = _tinySecp256k[\"default\"].sign(msgHashHex, typeof privateKey === \"string\" ? Buffer.from(privateKey, \"hex\") : privateKey);\n\n  return signature;\n};\n/**\n * Verifies a signature (64 byte <r,s>) given the sign bytes and public key.\n * @category crypto\n * @param {string} sigHex - The signature hexstring.\n * @param {string} signBytesHex - Unsigned transaction sign bytes hexstring.\n * @param {string} publicKeyHex - The public key.\n * @return {boolean}\n */\n\n\nexports.generateSignature = generateSignature;\n\nvar verifySignature = function verifySignature(sigHex, signBytesHex, publicKeyHex) {\n  var publicKey = Buffer.from(publicKeyHex, \"hex\");\n  if (!_tinySecp256k[\"default\"].isPoint(publicKey)) throw new Error(\"Invalid public key provided\");\n  var msgHash = (0, _utils.sha256)(signBytesHex);\n  var msgHashHex = Buffer.from(msgHash, \"hex\");\n  return _tinySecp256k[\"default\"].verify(msgHashHex, publicKey, Buffer.from(sigHex, \"hex\"));\n};\n/**\n * Generates a keystore object (web3 secret storage format) given a private key to store and a password.\n * @category crypto\n * @param {string} privateKeyHex the private key hexstring.\n * @param {string} password the password.\n * @return {object} the keystore object.\n */\n\n\nexports.verifySignature = verifySignature;\n\nvar generateKeyStore = function generateKeyStore(privateKeyHex, password) {\n  var salt = _cryptoBrowserify[\"default\"].randomBytes(32);\n\n  var iv = _cryptoBrowserify[\"default\"].randomBytes(16);\n\n  var cipherAlg = \"aes-256-ctr\";\n  var kdf = \"pbkdf2\";\n  var kdfparams = {\n    dklen: 32,\n    salt: salt.toString(\"hex\"),\n    c: 262144,\n    prf: \"hmac-sha256\"\n  };\n\n  var derivedKey = _cryptoBrowserify[\"default\"].pbkdf2Sync(Buffer.from(password), salt, kdfparams.c, kdfparams.dklen, \"sha256\");\n\n  var cipher = _cryptoBrowserify[\"default\"].createCipheriv(cipherAlg, derivedKey.slice(0, 32), iv);\n\n  if (!cipher) {\n    throw new Error(\"Unsupported cipher\");\n  }\n\n  var ciphertext = Buffer.concat([cipher.update(Buffer.from(privateKeyHex, \"hex\")), cipher[\"final\"]()]);\n  var bufferValue = Buffer.concat([derivedKey.slice(16, 32), ciphertext]);\n  return {\n    version: 1,\n    id: _uuid[\"default\"].v4({\n      random: _cryptoBrowserify[\"default\"].randomBytes(16)\n    }),\n    crypto: {\n      ciphertext: ciphertext.toString(\"hex\"),\n      cipherparams: {\n        iv: iv.toString(\"hex\")\n      },\n      cipher: cipherAlg,\n      kdf: kdf,\n      kdfparams: kdfparams,\n      // mac must use sha3 according to web3 secret storage spec\n      mac: (0, _utils.sha3)(bufferValue.toString(\"hex\"))\n    }\n  };\n};\n/**\n * Gets a private key from a keystore given its password.\n * @category crypto\n * @param {string} keystore the keystore in json format\n * @param {string} password the password.\n */\n\n\nexports.generateKeyStore = generateKeyStore;\n\nvar getPrivateKeyFromKeyStore = function getPrivateKeyFromKeyStore(keystore, password) {\n  if (!_is_js[\"default\"].string(password)) {\n    throw new Error(\"No password given.\");\n  }\n\n  var json = _is_js[\"default\"].object(keystore) ? keystore : JSON.parse(keystore);\n  var kdfparams = json.crypto.kdfparams;\n\n  if (kdfparams.prf !== \"hmac-sha256\") {\n    throw new Error(\"Unsupported parameters to PBKDF2\");\n  }\n\n  var derivedKey = _cryptoBrowserify[\"default\"].pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, \"hex\"), kdfparams.c, kdfparams.dklen, \"sha256\");\n\n  var ciphertext = Buffer.from(json.crypto.ciphertext, \"hex\");\n  var bufferValue = Buffer.concat([derivedKey.slice(16, 32), ciphertext]); // try sha3 (new / ethereum keystore) mac first\n\n  var mac = (0, _utils.sha3)(bufferValue.toString(\"hex\"));\n\n  if (mac !== json.crypto.mac) {\n    // the legacy (sha256) mac is next to be checked. pre-testnet keystores used a sha256 digest for the mac.\n    // the sha256 mac was not compatible with ethereum keystores, so it was changed to sha3 for mainnet.\n    var macLegacy = (0, _utils.sha256)(bufferValue.toString(\"hex\"));\n\n    if (macLegacy !== json.crypto.mac) {\n      throw new Error(\"Keystore mac check failed (sha3 & sha256) - wrong password?\");\n    }\n  }\n\n  var decipher = _cryptoBrowserify[\"default\"].createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 32), Buffer.from(json.crypto.cipherparams.iv, \"hex\"));\n\n  var privateKey = Buffer.concat([decipher.update(ciphertext), decipher[\"final\"]()]).toString(\"hex\");\n  return privateKey;\n};\n/**\n * Generates mnemonic phrase words using random entropy.\n * @category crypto\n */\n\n\nexports.getPrivateKeyFromKeyStore = getPrivateKeyFromKeyStore;\n\nvar generateMnemonic = function generateMnemonic() {\n  return bip39.generateMnemonic(MNEMONIC_LEN);\n};\n/**\n * Validates mnemonic phrase words.\n * @ignore\n * @param {string} mnemonic the mnemonic phrase words\n * @return {bool} validation result\n */\n\n\nexports.generateMnemonic = generateMnemonic;\nvar validateMnemonic = bip39.validateMnemonic;\n/**\n * Get a private key from mnemonic words.\n * @category crypto\n * @param {string} mnemonic the mnemonic phrase words\n * @param {Boolean} derive derive a private key using the default HD path (default: true)\n * @param {number} index the bip44 address index (default: 0)\n * @param {string} password according to bip39\n * @return {string} hexstring\n */\n\nexports.validateMnemonic = validateMnemonic;\n\nvar getPrivateKeyFromMnemonic = function getPrivateKeyFromMnemonic(mnemonic) {\n  var derive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var password = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n\n  if (!bip39.validateMnemonic(mnemonic, bip39.wordlists.english) && !bip39.validateMnemonic(mnemonic, bip39.wordlists.chinese_simplified) && !bip39.validateMnemonic(mnemonic, bip39.wordlists.chinese_traditional) && !bip39.validateMnemonic(mnemonic, bip39.wordlists.korean) && !bip39.validateMnemonic(mnemonic, bip39.wordlists.french) && !bip39.validateMnemonic(mnemonic, bip39.wordlists.italian) && !bip39.validateMnemonic(mnemonic, bip39.wordlists.spanish) && !bip39.validateMnemonic(mnemonic, bip39.wordlists.japanese)) {\n    throw new Error(\"wrong mnemonic format\");\n  }\n\n  var seed = bip39.mnemonicToSeedSync(mnemonic, password);\n\n  if (derive) {\n    var master = bip32.fromSeed(seed);\n    var child = master.derivePath(HDPATH + index);\n\n    if (!child.privateKey) {\n      throw new Error(\"child does not have a privateKey\");\n    }\n\n    return child.privateKey.toString(\"hex\");\n  }\n\n  return seed.toString(\"hex\");\n};\n\nexports.getPrivateKeyFromMnemonic = getPrivateKeyFromMnemonic;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}}],"sources":{"node_modules/bnb-javascript-sdk-nobroadcast/lib/crypto/index.js":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPrivateKeyFromMnemonic = exports.validateMnemonic = exports.generateMnemonic = exports.getPrivateKeyFromKeyStore = exports.generateKeyStore = exports.verifySignature = exports.generateSignature = exports.getAddressFromPrivateKey = exports.getAddressFromPublicKey = exports.generatePubKey = exports.getPublicKeyFromPrivateKey = exports.getPublicKey = exports.generateRandomArray = exports.generatePrivateKey = exports.encodeAddress = exports.checkAddress = exports.decodeAddress = void 0;\n\nvar _bech = _interopRequireDefault(require(\"bech32\"));\n\nvar bip32 = _interopRequireWildcard(require(\"bip32\"));\n\nvar bip39 = _interopRequireWildcard(require(\"bip39\"));\n\nvar _cryptoBrowserify = _interopRequireDefault(require(\"crypto-browserify\"));\n\nvar _elliptic = require(\"elliptic\");\n\nvar _is_js = _interopRequireDefault(require(\"is_js\"));\n\nvar _secureRandom = _interopRequireDefault(require(\"secure-random\"));\n\nvar _tinySecp256k = _interopRequireDefault(require(\"tiny-secp256k1\"));\n\nvar _uuid = _interopRequireDefault(require(\"uuid\"));\n\nvar _utils = require(\"../utils\");\n\n// secp256k1 privkey is 32 bytes\nvar PRIVKEY_LEN = 32;\nvar MNEMONIC_LEN = 256;\nvar DECODED_ADDRESS_LEN = 20;\nvar CURVE = \"secp256k1\"; //hdpath\n\nvar HDPATH = \"44'/714'/0'/0/\";\nvar ec = new _elliptic.ec(CURVE);\n/**\n * Decodes an address in bech32 format.\n * @category crypto\n * @param {string} value the bech32 address to decode\n */\n\nvar decodeAddress = function decodeAddress(value) {\n  var decodeAddress = _bech[\"default\"].decode(value);\n\n  return Buffer.from(_bech[\"default\"].fromWords(decodeAddress.words));\n};\n/**\n * Checks whether an address is valid.\n * @category crypto\n * @param {string} address the bech32 address to decode\n * @param {string} hrp the prefix to check for the bech32 address\n * @return {boolean}\n */\n\n\nexports.decodeAddress = decodeAddress;\n\nvar checkAddress = function checkAddress(address, hrp) {\n  try {\n    if (!address.startsWith(hrp)) {\n      return false;\n    }\n\n    var decodedAddress = _bech[\"default\"].decode(address);\n\n    var decodedAddressLength = decodeAddress(address).length;\n\n    if (decodedAddressLength === DECODED_ADDRESS_LEN && decodedAddress.prefix === hrp) {\n      return true;\n    }\n\n    return false;\n  } catch (err) {\n    return false;\n  }\n};\n/**\n * Encodes an address from input data bytes.\n * @category crypto\n * @param {string} value the public key to encode\n * @param {*} prefix the address prefix\n * @param {*} type the output type (default: hex)\n */\n\n\nexports.checkAddress = checkAddress;\n\nvar encodeAddress = function encodeAddress(value) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"tbnb\";\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"hex\";\n  var words;\n\n  if (Buffer.isBuffer(value)) {\n    words = _bech[\"default\"].toWords(Buffer.from(value));\n  } else {\n    words = _bech[\"default\"].toWords(Buffer.from(value, type));\n  }\n\n  return _bech[\"default\"].encode(prefix, words);\n};\n/**\n * Generates 32 bytes of random entropy\n * @category crypto\n * @param {number} len output length (default: 32 bytes)\n * @returns {string} entropy bytes hexstring\n */\n\n\nexports.encodeAddress = encodeAddress;\n\nvar generatePrivateKey = function generatePrivateKey() {\n  var len = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : PRIVKEY_LEN;\n  return (0, _utils.ab2hexstring)((0, _secureRandom[\"default\"])(len));\n};\n/**\n * Generates an arrayBuffer filled with random bits.\n * @category crypto\n * @param {number} length - Length of buffer.\n * @returns {ArrayBuffer}\n */\n\n\nexports.generatePrivateKey = generatePrivateKey;\n\nvar generateRandomArray = function generateRandomArray(length) {\n  return (0, _secureRandom[\"default\"])(length);\n};\n/**\n * @category crypto\n * @param {string} publicKey - Encoded public key\n * @return {Elliptic.PublicKey} public key hexstring\n */\n\n\nexports.generateRandomArray = generateRandomArray;\n\nvar getPublicKey = function getPublicKey(publicKey) {\n  var keyPair = ec.keyFromPublic(publicKey, \"hex\");\n  return keyPair.getPublic();\n};\n/**\n * Calculates the public key from a given private key.\n * @category crypto\n * @param {string} privateKeyHex the private key hexstring\n * @return {string} public key hexstring\n */\n\n\nexports.getPublicKey = getPublicKey;\n\nvar getPublicKeyFromPrivateKey = function getPublicKeyFromPrivateKey(privateKeyHex) {\n  if (!privateKeyHex || privateKeyHex.length !== PRIVKEY_LEN * 2) {\n    throw new Error(\"invalid privateKey\");\n  }\n\n  var curve = new _elliptic.ec(CURVE);\n  var keypair = curve.keyFromPrivate(privateKeyHex, \"hex\");\n  var unencodedPubKey = keypair.getPublic().encode(\"hex\", false);\n  return unencodedPubKey;\n};\n/**\n * PubKey performs the point-scalar multiplication from the privKey on the\n * generator point to get the pubkey.\n * @category crypto\n * @param {Buffer} privateKey\n * @return {Elliptic.PublicKey} PubKey\n * */\n\n\nexports.getPublicKeyFromPrivateKey = getPublicKeyFromPrivateKey;\n\nvar generatePubKey = function generatePubKey(privateKey) {\n  var curve = new _elliptic.ec(CURVE);\n  var keypair = curve.keyFromPrivate(privateKey);\n  return keypair.getPublic();\n};\n/**\n * Gets an address from a public key hex.\n * @category crypto\n * @param {string} publicKeyHex the public key hexstring\n * @param {string} prefix the address prefix\n */\n\n\nexports.generatePubKey = generatePubKey;\n\nvar getAddressFromPublicKey = function getAddressFromPublicKey(publicKeyHex, prefix) {\n  var pubKey = ec.keyFromPublic(publicKeyHex, \"hex\");\n  var pubPoint = pubKey.getPublic();\n  var compressed = pubPoint.encodeCompressed();\n  var hexed = (0, _utils.ab2hexstring)(compressed);\n  var hash = (0, _utils.sha256ripemd160)(hexed); // https://git.io/fAn8N\n\n  var address = encodeAddress(hash, prefix);\n  return address;\n};\n/**\n * Gets an address from a private key.\n * @category crypto\n * @param {string} privateKeyHex the private key hexstring\n * @param {string} prefix the address prefix\n */\n\n\nexports.getAddressFromPublicKey = getAddressFromPublicKey;\n\nvar getAddressFromPrivateKey = function getAddressFromPrivateKey(privateKeyHex, prefix) {\n  return getAddressFromPublicKey(getPublicKeyFromPrivateKey(privateKeyHex), prefix);\n};\n/**\n * Generates a signature (64 byte <r,s>) for a transaction based on given private key.\n * @category crypto\n * @param {string} signBytesHex - Unsigned transaction sign bytes hexstring.\n * @param {string | Buffer} privateKey - The private key.\n * @return {Buffer} Signature. Does not include tx.\n */\n\n\nexports.getAddressFromPrivateKey = getAddressFromPrivateKey;\n\nvar generateSignature = function generateSignature(signBytesHex, privateKey) {\n  var msgHash = (0, _utils.sha256)(signBytesHex);\n  var msgHashHex = Buffer.from(msgHash, \"hex\");\n\n  var signature = _tinySecp256k[\"default\"].sign(msgHashHex, typeof privateKey === \"string\" ? Buffer.from(privateKey, \"hex\") : privateKey);\n\n  return signature;\n};\n/**\n * Verifies a signature (64 byte <r,s>) given the sign bytes and public key.\n * @category crypto\n * @param {string} sigHex - The signature hexstring.\n * @param {string} signBytesHex - Unsigned transaction sign bytes hexstring.\n * @param {string} publicKeyHex - The public key.\n * @return {boolean}\n */\n\n\nexports.generateSignature = generateSignature;\n\nvar verifySignature = function verifySignature(sigHex, signBytesHex, publicKeyHex) {\n  var publicKey = Buffer.from(publicKeyHex, \"hex\");\n  if (!_tinySecp256k[\"default\"].isPoint(publicKey)) throw new Error(\"Invalid public key provided\");\n  var msgHash = (0, _utils.sha256)(signBytesHex);\n  var msgHashHex = Buffer.from(msgHash, \"hex\");\n  return _tinySecp256k[\"default\"].verify(msgHashHex, publicKey, Buffer.from(sigHex, \"hex\"));\n};\n/**\n * Generates a keystore object (web3 secret storage format) given a private key to store and a password.\n * @category crypto\n * @param {string} privateKeyHex the private key hexstring.\n * @param {string} password the password.\n * @return {object} the keystore object.\n */\n\n\nexports.verifySignature = verifySignature;\n\nvar generateKeyStore = function generateKeyStore(privateKeyHex, password) {\n  var salt = _cryptoBrowserify[\"default\"].randomBytes(32);\n\n  var iv = _cryptoBrowserify[\"default\"].randomBytes(16);\n\n  var cipherAlg = \"aes-256-ctr\";\n  var kdf = \"pbkdf2\";\n  var kdfparams = {\n    dklen: 32,\n    salt: salt.toString(\"hex\"),\n    c: 262144,\n    prf: \"hmac-sha256\"\n  };\n\n  var derivedKey = _cryptoBrowserify[\"default\"].pbkdf2Sync(Buffer.from(password), salt, kdfparams.c, kdfparams.dklen, \"sha256\");\n\n  var cipher = _cryptoBrowserify[\"default\"].createCipheriv(cipherAlg, derivedKey.slice(0, 32), iv);\n\n  if (!cipher) {\n    throw new Error(\"Unsupported cipher\");\n  }\n\n  var ciphertext = Buffer.concat([cipher.update(Buffer.from(privateKeyHex, \"hex\")), cipher[\"final\"]()]);\n  var bufferValue = Buffer.concat([derivedKey.slice(16, 32), ciphertext]);\n  return {\n    version: 1,\n    id: _uuid[\"default\"].v4({\n      random: _cryptoBrowserify[\"default\"].randomBytes(16)\n    }),\n    crypto: {\n      ciphertext: ciphertext.toString(\"hex\"),\n      cipherparams: {\n        iv: iv.toString(\"hex\")\n      },\n      cipher: cipherAlg,\n      kdf: kdf,\n      kdfparams: kdfparams,\n      // mac must use sha3 according to web3 secret storage spec\n      mac: (0, _utils.sha3)(bufferValue.toString(\"hex\"))\n    }\n  };\n};\n/**\n * Gets a private key from a keystore given its password.\n * @category crypto\n * @param {string} keystore the keystore in json format\n * @param {string} password the password.\n */\n\n\nexports.generateKeyStore = generateKeyStore;\n\nvar getPrivateKeyFromKeyStore = function getPrivateKeyFromKeyStore(keystore, password) {\n  if (!_is_js[\"default\"].string(password)) {\n    throw new Error(\"No password given.\");\n  }\n\n  var json = _is_js[\"default\"].object(keystore) ? keystore : JSON.parse(keystore);\n  var kdfparams = json.crypto.kdfparams;\n\n  if (kdfparams.prf !== \"hmac-sha256\") {\n    throw new Error(\"Unsupported parameters to PBKDF2\");\n  }\n\n  var derivedKey = _cryptoBrowserify[\"default\"].pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, \"hex\"), kdfparams.c, kdfparams.dklen, \"sha256\");\n\n  var ciphertext = Buffer.from(json.crypto.ciphertext, \"hex\");\n  var bufferValue = Buffer.concat([derivedKey.slice(16, 32), ciphertext]); // try sha3 (new / ethereum keystore) mac first\n\n  var mac = (0, _utils.sha3)(bufferValue.toString(\"hex\"));\n\n  if (mac !== json.crypto.mac) {\n    // the legacy (sha256) mac is next to be checked. pre-testnet keystores used a sha256 digest for the mac.\n    // the sha256 mac was not compatible with ethereum keystores, so it was changed to sha3 for mainnet.\n    var macLegacy = (0, _utils.sha256)(bufferValue.toString(\"hex\"));\n\n    if (macLegacy !== json.crypto.mac) {\n      throw new Error(\"Keystore mac check failed (sha3 & sha256) - wrong password?\");\n    }\n  }\n\n  var decipher = _cryptoBrowserify[\"default\"].createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 32), Buffer.from(json.crypto.cipherparams.iv, \"hex\"));\n\n  var privateKey = Buffer.concat([decipher.update(ciphertext), decipher[\"final\"]()]).toString(\"hex\");\n  return privateKey;\n};\n/**\n * Generates mnemonic phrase words using random entropy.\n * @category crypto\n */\n\n\nexports.getPrivateKeyFromKeyStore = getPrivateKeyFromKeyStore;\n\nvar generateMnemonic = function generateMnemonic() {\n  return bip39.generateMnemonic(MNEMONIC_LEN);\n};\n/**\n * Validates mnemonic phrase words.\n * @ignore\n * @param {string} mnemonic the mnemonic phrase words\n * @return {bool} validation result\n */\n\n\nexports.generateMnemonic = generateMnemonic;\nvar validateMnemonic = bip39.validateMnemonic;\n/**\n * Get a private key from mnemonic words.\n * @category crypto\n * @param {string} mnemonic the mnemonic phrase words\n * @param {Boolean} derive derive a private key using the default HD path (default: true)\n * @param {number} index the bip44 address index (default: 0)\n * @param {string} password according to bip39\n * @return {string} hexstring\n */\n\nexports.validateMnemonic = validateMnemonic;\n\nvar getPrivateKeyFromMnemonic = function getPrivateKeyFromMnemonic(mnemonic) {\n  var derive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var password = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n\n  if (!bip39.validateMnemonic(mnemonic, bip39.wordlists.english) && !bip39.validateMnemonic(mnemonic, bip39.wordlists.chinese_simplified) && !bip39.validateMnemonic(mnemonic, bip39.wordlists.chinese_traditional) && !bip39.validateMnemonic(mnemonic, bip39.wordlists.korean) && !bip39.validateMnemonic(mnemonic, bip39.wordlists.french) && !bip39.validateMnemonic(mnemonic, bip39.wordlists.italian) && !bip39.validateMnemonic(mnemonic, bip39.wordlists.spanish) && !bip39.validateMnemonic(mnemonic, bip39.wordlists.japanese)) {\n    throw new Error(\"wrong mnemonic format\");\n  }\n\n  var seed = bip39.mnemonicToSeedSync(mnemonic, password);\n\n  if (derive) {\n    var master = bip32.fromSeed(seed);\n    var child = master.derivePath(HDPATH + index);\n\n    if (!child.privateKey) {\n      throw new Error(\"child does not have a privateKey\");\n    }\n\n    return child.privateKey.toString(\"hex\");\n  }\n\n  return seed.toString(\"hex\");\n};\n\nexports.getPrivateKeyFromMnemonic = getPrivateKeyFromMnemonic;"},"lineCount":408}},"error":null,"hash":"3071580e9b087a0181df72457f211088","cacheData":{"env":{}}}