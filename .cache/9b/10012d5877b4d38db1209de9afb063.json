{"id":"node_modules/@ngraveio/bc-ur/dist/xoshiro.js","dependencies":[{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@ngraveio/bc-ur/dist/xoshiro.js.map","includedInParent":true,"mtime":1635871978871},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@ngraveio/bc-ur/src/xoshiro.ts","includedInParent":true,"mtime":1635871978871},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/package.json","includedInParent":true,"mtime":1637150058124},{"name":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@ngraveio/bc-ur/package.json","includedInParent":true,"mtime":1635871978871},{"name":"./utils","loc":{"line":6,"column":24},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@ngraveio/bc-ur/dist/xoshiro.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@ngraveio/bc-ur/dist/utils.js"},{"name":"bignumber.js","loc":{"line":7,"column":47},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@ngraveio/bc-ur/dist/xoshiro.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/bignumber.js/bignumber.js"},{"name":"jsbi","loc":{"line":8,"column":39},"parent":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/@ngraveio/bc-ur/dist/xoshiro.js","resolved":"/home/ryann/Documents/Repos/ChainSafe/Gaming/game-web3mobile/node_modules/jsbi/dist/jsbi-umd.js"}],"generated":{"js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"./utils\");\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst jsbi_1 = __importDefault(require(\"jsbi\"));\nconst MAX_UINT64 = 0xFFFFFFFFFFFFFFFF;\nconst rotl = (x, k) => jsbi_1.default.bitwiseXor(jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(x, jsbi_1.default.BigInt(k))), jsbi_1.default.BigInt(jsbi_1.default.asUintN(64, jsbi_1.default.signedRightShift(x, (jsbi_1.default.subtract(jsbi_1.default.BigInt(64), jsbi_1.default.BigInt(k)))))));\nclass Xoshiro {\n    constructor(seed) {\n        this.next = () => {\n            return new bignumber_js_1.default(this.roll().toString());\n        };\n        this.nextDouble = () => {\n            return new bignumber_js_1.default(this.roll().toString()).div(MAX_UINT64 + 1);\n        };\n        this.nextInt = (low, high) => {\n            return Math.floor((this.nextDouble().toNumber() * (high - low + 1)) + low);\n        };\n        this.nextByte = () => this.nextInt(0, 255);\n        this.nextData = (count) => ([...new Array(count)].map(() => this.nextByte()));\n        const digest = utils_1.sha256Hash(seed);\n        this.s = [jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0)];\n        this.setS(digest);\n    }\n    setS(digest) {\n        for (let i = 0; i < 4; i++) {\n            let o = i * 8;\n            let v = jsbi_1.default.BigInt(0);\n            for (let n = 0; n < 8; n++) {\n                v = jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(v, jsbi_1.default.BigInt(8)));\n                v = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseOr(v, jsbi_1.default.BigInt(digest[o + n])));\n            }\n            this.s[i] = jsbi_1.default.asUintN(64, v);\n        }\n    }\n    roll() {\n        const result = jsbi_1.default.asUintN(64, jsbi_1.default.multiply(rotl(jsbi_1.default.asUintN(64, jsbi_1.default.multiply(this.s[1], jsbi_1.default.BigInt(5))), 7), jsbi_1.default.BigInt(9)));\n        const t = jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(this.s[1], jsbi_1.default.BigInt(17)));\n        this.s[2] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[2], jsbi_1.default.BigInt(this.s[0])));\n        this.s[3] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[3], jsbi_1.default.BigInt(this.s[1])));\n        this.s[1] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[1], jsbi_1.default.BigInt(this.s[2])));\n        this.s[0] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[0], jsbi_1.default.BigInt(this.s[3])));\n        this.s[2] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[2], jsbi_1.default.BigInt(t)));\n        this.s[3] = jsbi_1.default.asUintN(64, rotl(this.s[3], 45));\n        return result;\n    }\n}\nexports.default = Xoshiro;\n"},"sourceMaps":{"js":{"version":3,"file":"xoshiro.js","sourceRoot":"","sources":["../src/xoshiro.ts"],"names":[],"mappings":";;;;;AAAA,mCAAqC;AACrC,gEAAoC;AACpC,gDAAuB;AAEvB,MAAM,UAAU,GAAG,kBAAkB,CAAC;AACtC,MAAM,IAAI,GAAG,CAAC,CAAO,EAAE,CAAS,EAAQ,EAAE,CAAC,cAAI,CAAC,UAAU,CACxD,cAAI,CAAC,OAAO,CAAC,EAAE,EAAE,cAAI,CAAC,SAAS,CAAC,CAAC,EAAE,cAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EACnD,cAAI,CAAC,MAAM,CACT,cAAI,CAAC,OAAO,CACV,EAAE,EACF,cAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,cAAI,CAAC,QAAQ,CAAC,cAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,cAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC3E,CACF,CACF,CAAC;AAEF,MAAqB,OAAO;IAG1B,YAAY,IAAY;QA6CxB,SAAI,GAAG,GAAc,EAAE;YACrB,OAAO,IAAI,sBAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAA;QAC9C,CAAC,CAAA;QAED,eAAU,GAAG,GAAc,EAAE;YAC3B,OAAO,IAAI,sBAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,CAAA;QAClE,CAAC,CAAA;QAED,YAAO,GAAG,CAAC,GAAW,EAAE,IAAY,EAAU,EAAE;YAC9C,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QAC7E,CAAC,CAAA;QAED,aAAQ,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAEtC,aAAQ,GAAG,CAAC,KAAa,EAAE,EAAE,CAAC,CAC5B,CAAC,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CACjD,CAAA;QA5DC,MAAM,MAAM,GAAG,kBAAU,CAAC,IAAI,CAAC,CAAC;QAEhC,IAAI,CAAC,CAAC,GAAG,CAAC,cAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,cAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,cAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,cAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1E,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACpB,CAAC;IAEO,IAAI,CAAC,MAAc;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,GAAG,cAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC1B,CAAC,GAAG,cAAI,CAAC,OAAO,CAAC,EAAE,EAAE,cAAI,CAAC,SAAS,CAAC,CAAC,EAAE,cAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxD,CAAC,GAAG,cAAI,CAAC,OAAO,CAAC,EAAE,EAAE,cAAI,CAAC,SAAS,CAAC,CAAC,EAAE,cAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACrE;YACD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,cAAI,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SACjC;IACH,CAAC;IAEO,IAAI;QACV,MAAM,MAAM,GAAG,cAAI,CAAC,OAAO,CACzB,EAAE,EACF,cAAI,CAAC,QAAQ,CACX,IAAI,CACF,cAAI,CAAC,OAAO,CAAC,EAAE,EAAE,cAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,cAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAC1D,CAAC,CACF,EACD,cAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CACf,CACF,CAAC;QAEF,MAAM,CAAC,GAAG,cAAI,CAAC,OAAO,CAAC,EAAE,EAAE,cAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,cAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEvE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,cAAI,CAAC,OAAO,CAAC,EAAE,EAAE,cAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,cAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,cAAI,CAAC,OAAO,CAAC,EAAE,EAAE,cAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,cAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,cAAI,CAAC,OAAO,CAAC,EAAE,EAAE,cAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,cAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,cAAI,CAAC,OAAO,CAAC,EAAE,EAAE,cAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,cAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEjF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,cAAI,CAAC,OAAO,CAAC,EAAE,EAAE,cAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,cAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEzE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,cAAI,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAElD,OAAO,MAAM,CAAC;IAChB,CAAC;CAmBF;AAjED,0BAiEC","sourcesContent":["import { sha256Hash } from \"./utils\";\nimport BigNumber from 'bignumber.js'\nimport JSBI from 'jsbi'\n\nconst MAX_UINT64 = 0xFFFFFFFFFFFFFFFF;\nconst rotl = (x: JSBI, k: number): JSBI => JSBI.bitwiseXor(\n  JSBI.asUintN(64, JSBI.leftShift(x, JSBI.BigInt(k))),\n  JSBI.BigInt(\n    JSBI.asUintN(\n      64,\n      JSBI.signedRightShift(x, (JSBI.subtract(JSBI.BigInt(64), JSBI.BigInt(k))))\n    )\n  )\n);\n\nexport default class Xoshiro {\n  private s: JSBI[];\n\n  constructor(seed: Buffer) {\n    const digest = sha256Hash(seed);\n\n    this.s = [JSBI.BigInt(0), JSBI.BigInt(0), JSBI.BigInt(0), JSBI.BigInt(0)];\n    this.setS(digest);\n  }\n\n  private setS(digest: Buffer) {\n    for (let i = 0; i < 4; i++) {\n      let o = i * 8;\n      let v = JSBI.BigInt(0);\n      for (let n = 0; n < 8; n++) {\n        v = JSBI.asUintN(64, JSBI.leftShift(v, JSBI.BigInt(8)));\n        v = JSBI.asUintN(64, JSBI.bitwiseOr(v, JSBI.BigInt(digest[o + n])));\n      }\n      this.s[i] = JSBI.asUintN(64, v);\n    }\n  }\n\n  private roll(): JSBI {\n    const result = JSBI.asUintN(\n      64,\n      JSBI.multiply(\n        rotl(\n          JSBI.asUintN(64, JSBI.multiply(this.s[1], JSBI.BigInt(5))),\n          7\n        ),\n        JSBI.BigInt(9)\n      )\n    );\n\n    const t = JSBI.asUintN(64, JSBI.leftShift(this.s[1], JSBI.BigInt(17)));\n\n    this.s[2] = JSBI.asUintN(64, JSBI.bitwiseXor(this.s[2], JSBI.BigInt(this.s[0])));\n    this.s[3] = JSBI.asUintN(64, JSBI.bitwiseXor(this.s[3], JSBI.BigInt(this.s[1])));\n    this.s[1] = JSBI.asUintN(64, JSBI.bitwiseXor(this.s[1], JSBI.BigInt(this.s[2])));\n    this.s[0] = JSBI.asUintN(64, JSBI.bitwiseXor(this.s[0], JSBI.BigInt(this.s[3])));\n\n    this.s[2] = JSBI.asUintN(64, JSBI.bitwiseXor(this.s[2], JSBI.BigInt(t)));\n\n    this.s[3] = JSBI.asUintN(64, rotl(this.s[3], 45));\n\n    return result;\n  }\n\n  next = (): BigNumber => {\n    return new BigNumber(this.roll().toString())\n  }\n\n  nextDouble = (): BigNumber => {\n    return new BigNumber(this.roll().toString()).div(MAX_UINT64 + 1)\n  }\n\n  nextInt = (low: number, high: number): number => {\n    return Math.floor((this.nextDouble().toNumber() * (high - low + 1)) + low);\n  }\n\n  nextByte = () => this.nextInt(0, 255);\n\n  nextData = (count: number) => (\n    [...new Array(count)].map(() => this.nextByte())\n  )\n}\n"]}},"error":null,"hash":"20cdd3696ad3314196408d2bf4d94133","cacheData":{"env":{}}}